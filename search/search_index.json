{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230 iWiki","text":"<p>weiyong1024\u7684\u77e5\u8bc6\u5c0f\u7ad9</p> <p></p> <p>\u535a\u4e3b\u81ea\u8ba4\u624d\u758f\u5b66\u6d45\uff0c\u8bda\u9080\u5404\u4f4d\u770b\u5b98\u6279\u8bc4\u6307\u6b63\uff0c\u8868\u8fbe\u9519\u8bef\u3001\u7406\u89e3\u4e0d\u5f53\u4e4b\u5904\u8bf7\u8bf8\u541b\u4e0d\u541d\u8d50\u6559\uff01</p>"},{"location":"about/","title":"\u5173\u4e8e\u4f5c\u8005","text":"<p>\u5317\u822a\u7535\u5b50\u7cfb\u672c\u7855\uff0c\u5e08\u4ece\u6768\u6668\u9633\u6559\u6388\u505a5G\u7269\u7406\u5c42\u65e0\u7ebf\u94fe\u8def\u4fe1\u9053\u4f18\u5316\u7814\u7a76\u3002\u4e0a\u5b66\u671f\u95f4\u4f5c\u4e3a\u5b9e\u4e60\u751f\u5148\u540e\u5728 \u65f7\u89c6\u79d1\u6280/Face++ \u548c \u7231\u5f7c\u8fce/Airbnb\u4e2d\u56fd \u505a\u8fc7 \u4eba\u8138\u8bc6\u522b\u70bc\u4e39\u5e08 \u548c Ruby on Rails\u5f00\u53d1\u3002\u6bd5\u4e1a\u540e\u4e8e \u5c0f\u9a6c\u667a\u884c/Pony.ai \u57fa\u7840\u67b6\u6784\u7ec4\uff08\u5317\u4eac\uff09\u4ece\u4e8b\u8f66\u8f7d\u7cfb\u7edf\u5f00\u53d1\u4e00\u5e74\u6709\u4f59\u3002\u540e\u81f3\u897f\u6e56\u7554\u5c0f\u5c45\uff0c\u82b1\u540d\u601d\u9884\uff0c\u73b0\u5728 \u963f\u91cc\u4e91/Alibaba Cloud \u9ad8\u53ef\u7528\u67b6\u6784\u7ec4\u4ece\u4e8b\u7ebf\u4e0a\u670d\u52a1\u7ba1\u63a7\u5de5\u4f5c\u3002</p>"},{"location":"about/#_2","title":"\u90ae\u7bb1","text":"<p>weiyong1024@gmail.com</p> <p>\u82f1\u96c4\u4e0d\u95ee\u51fa\u5904\uff0c\u771f\u8bda\u9080\u8bf7\u5404\u8def\u9ad8\u624b\u6765\u676d\u5171\u4e8b\uff01</p>"},{"location":"about/#no-excuses-just-learn","title":"No excuses. Just learn.","text":""},{"location":"other_blogs/","title":"\u535a\u5ba2\u63a8\u8350","text":"<p>\u201c\u5b66\u4e60\u4efb\u4f55\u4e00\u95e8\u8bfe\u7a0b\u90fd\u8981\u5584\u4e8e\u6293\u4f4f\u4e3b\u8981\u77db\u3001\u5206\u6e05\u4e3b\u6b21\u3001\u7a81\u51fa\u91cd\u70b9\uff0c\u5173\u952e\u662f\u638c\u63e1\u77e5\u8bc6\u6846\u67b6\uff0c\u5b66\u4f1a\u4ee5\u540e\u771f\u6b63\u6709\u7528\u7684\u77e5\u8bc6\u548c\u6280\u80fd\uff0c\u800c\u4e0d\u8981\u628a\u7cbe\u529b\u5e73\u5747\u5206\u914d\u5728\u4e00\u4e9b\u7410\u4e8b\u4e0a\u3002\u201d \u2014\u2014\u9648\u7855@\u77e5\u4e4e</p>"},{"location":"other_blogs/#_2","title":"\u9762\u5411\u4fe1\u4ef0\u7f16\u7a0b","text":"<p>https://draveness.me/</p> <p>\u53c2\u8003\u4e86LevelDB\u548cLSMT\u76f8\u5173\u77e5\u8bc6\u3002</p>"},{"location":"other_blogs/#csdn","title":"\u9648\u7855@CSDN","text":"<p>https://blog.csdn.net/Solstice</p> <p>\u9648\u7855\u8001\u5e08\u7684CSDN\u535a\u5ba2\u3002</p>"},{"location":"other_blogs/#csdn_1","title":"\u5b5f\u5ca9@CSDN","text":"<p>https://blog.csdn.net/myan</p> <p>\u9648\u7855\u8001\u5e08\u66fe\u5f15\u7528\u5b5f\u5ca9\u8001\u5e08\u5173\u4e8e\u5b66\u4e60\u7684\u89c2\u70b9\u3002</p>"},{"location":"blog/","title":"\u535a\u5ba2","text":"<p>\u65e5\u5e38\u6742\u9879\uff0c\u5e38\u66f4\u65b0\uff0c\u6210\u719f\u8005\u7eb3\u5165\u77e5\u8bc6\u4f53\u7cfb\u3002</p>"},{"location":"competitive_programming/","title":"\u7d22\u5f15\u9875","text":"<p>\u8fd9\u91cc\u662f\u7b97\u6cd5\u7ade\u8d5b\u7684\u7d22\u5f15\u9875\u3002</p>"},{"location":"competitive_programming/basic/monotune_stack/","title":"\u5355\u8c03\u6808","text":"<p>\u76f8\u6bd4\u4e8e\u6570\u636e\u7ed3\u6784\uff0c\u5355\u8c03\u6808\u53ea\u662f\u6808\u7ed3\u6784\u7684\u4e00\u79cd\u7279\u6b8a\u5e94\u7528\u3002</p>"},{"location":"competitive_programming/basic/monotune_stack/#_2","title":"\u63cf\u8ff0","text":"<p>\u4e00\u822c\u800c\u8a00\u5355\u8c03\u6808\u7528\u4e8e\u8bb0\u5f55\u4e00\u4e2a\u5e8f\u5217\u4ece\u4e00\u7aef\u5f00\u59cb\u7684\u5355\u8c03\u5b50\u5e8f\u5217\uff08\u4e0d\u8981\u6c42\u8fde\u7eed\uff09\u3002</p> <p>\u5355\u8c03\u6808\u7684\u6210\u5458\u53ef\u4ee5\u662f\u539f\u5e8f\u5217\u6210\u5458\uff0c\u4e5f\u53ef\u4ee5\u662f\u539f\u5e8f\u5217\u6210\u5458\u7684\u4e0b\u6807\u3002</p>"},{"location":"competitive_programming/basic/monotune_stack/#_3","title":"\u4e3e\u4f8b","text":"<p>Codeforces-1313-C2</p> <p>\u5bf9\u4e8e\u539f\u59cb\u5e8f\u5217 a[i] \uff0c\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u7528\u4e8e\u5728 O(n) \u65f6\u95f4\u5185\u4e00\u8d9f\u751f\u6210\u8f85\u52a9\u5e8f\u5217 l[i] \uff0c\u5176\u4e2d l[i] \u4e3a\u4ece a[i] \u5411\u5de6\u770b\u7b2c\u4e00\u4e2a\u503c\u5c0f\u4e8e a[i] \u7684\u6210\u5458\u4e0b\u6807\uff1b r[i] \u4e3a l[i] \u53f3\u4fa7\u7684\u5bf9\u7b49\u3002</p>"},{"location":"competitive_programming/basic/searching/binary_search/","title":"\u4e8c\u5206\u641c\u7d22","text":""},{"location":"competitive_programming/basic/searching/binary_search/#_2","title":"\u95ee\u9898","text":"<p>\u5bfb\u627e\u9608\u503c\uff1a\u82e5\u6240\u6c42\u95ee\u9898\u5177\u6709\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e00\u9608\u503c\u201c\u53ef\u884c\u201d\u3001\u5c0f\u4e8e\u8be5\u9608\u503c\u201c\u4e0d\u53ef\u884c\u201d\u7684\u4e8c\u6bb5\u6027\uff0c\u6216\u8005\u5c5e\u4e8e\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u6570\u91cf\u95ee\u9898\uff0c\u53ef\u5229\u7528\u5bfb\u627e\u9608\u503c\u7684\u4e8c\u5206\u641c\u7d22\u6c42\u89e3</p>"},{"location":"competitive_programming/basic/searching/binary_search/#_3","title":"\u4ee3\u7801","text":"<p><code>check()</code>\u51fd\u6570\u7528\u4e8e\u5224\u5b9a\u5f53\u524d\u503c\u662f\u5426\u53ef\u884c</p>"},{"location":"competitive_programming/basic/searching/binary_search/#_4","title":"\u8fde\u7eed\u578b\u533a\u95f4\u7684\u4e8c\u5206\u641c\u7d22","text":"<p>\u5728 x \\in [0, 10^9] \u8303\u56f4\u5185\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6 check(x)=true \u7684\u6307\u5b9a\u7cbe\u5ea6\u7684\u6700\u5c0f x</p> <pre><code>double bi_search() {\n    double l = 0, r = 1e9;\n    for (int i = 0; i &lt; 300; i++) {\n        double m = (l + r) / 2l;\n        if (check(m)) r = m;\n        else l = m;\n    }\n    return l;\n}\n</code></pre> <p>\u8fed\u4ee3\u6b65\u6570\u53ef\u7531 \u521d\u59cb\u533a\u95f4\u957f\u5ea6 \u548c \u7cbe\u5ea6\u8981\u6c42 \u786e\u5b9a\u3002</p>"},{"location":"competitive_programming/basic/searching/binary_search/#_5","title":"\u79bb\u6563\u578b\u533a\u95f4\u7684\u4e8c\u5206\u641c\u7d22","text":"<p>\u5728 x \\in [0, n - 1], x \\in \\mathbb{Z} \u8303\u56f4\u5185\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6 check(x)=true \u7684\u6700\u5c0f x \uff0c\u5982\u4e0d\u5b58\u5728\u8fd4\u56de -1 \u3002</p> <pre><code>int bi_search() {\n    int ans = -1;\n    int l = 0, r = n - 1;\n    while (l &lt;= r) {\n        int m = (l + r) &gt;&gt; 1;\n        if (check(m)) ans = m, r = m - 1;\n        else l = m + 1;\n    }\n    return ans;\n}\n</code></pre> <p>[l, r] \u7ef4\u62a4\u7684\u662f\u5269\u4f59\u641c\u7d22\u57df\u3002</p>"},{"location":"competitive_programming/basic/searching/binary_search/#_6","title":"\u5e94\u7528","text":""},{"location":"competitive_programming/basic/searching/binary_search/#_7","title":"\u5728\u6709\u5e8f\u6570\u7ec4\u4e2d\u5224\u65ad\u76ee\u6807\u503c\u7684\u5b58\u5728\u6027","text":"<p>\u4ee5\u6570\u7ec4\u4e0b\u6807\u4e3a\u641c\u7d22\u57df\uff0c\u5b9e\u73b0\u51fd\u6570\u8fd4\u56de<code>bool</code>\u578b\u53d8\u91cf\uff0c\u5224\u65ad\u76ee\u6807\u503c target \u662f\u5426\u5728\u5e8f\u5217 a \u4e2d\u51fa\u73b0\u3002</p> <pre><code>bool bi_search(vector&lt;int&gt; a, int target) {\n    int l = 0, r = a.size() - 1;\n    while (l &lt;= r) {\n        int m = (l + r) &gt;&gt; 1;\n        if (a[m] == target) return true;\n        if (a[m] &lt; target) l = m + 1;\n        else r = m - 1;\n    }\n    return false;\n}\n</code></pre> <p>[l, r] \u7ef4\u62a4\u7684\u662f\u5269\u4f59\u641c\u7d22\u57df\u3002</p>"},{"location":"competitive_programming/basic/searching/ternary_search/","title":"\u4e09\u5206\u641c\u7d22","text":""},{"location":"competitive_programming/basic/searching/ternary_search/#_2","title":"\u95ee\u9898","text":"<p>\u5df2\u77e5\u51fd\u6570 f(x) \u5728\u533a\u95f4 [l, r] \u4e0a\u5355\u5cf0\u4e14\u8fde\u7eed\uff0c\u6c42 f(x) \u5728 [l, r]\u4e0a\u7684\u6781\u503c\u3002</p>"},{"location":"competitive_programming/basic/searching/ternary_search/#_3","title":"\u7b97\u6cd5","text":"<p>\u4f7f\u7528\u6807\u51c6\u4e09\u5206\u641c\u7d22\u7b97\u6cd5\uff0c\u6bcf\u6b21\u8fed\u4ee3\u5c06\u5f53\u524d\u533a\u95f4\u7684\u957f\u5ea6\u7f29\u5c0f \\frac{1}{3} \u3002</p> <p>\u7406\u8bba\u4e0a\u6700\u7ec8\u6536\u655b\u5230\u6781\u503c\u70b9\u6216\u6781\u503c\u533a\u95f4\u7684\u5de6\u7aef\uff0c\u4f46\u5b9e\u9645\u4e2d\u7531\u4e8e\u590d\u70b9\u8bef\u5dee\u5bfc\u81f4\u7684\u5224\u7b49\u9519\u8bef\uff0c\u5f53 f(x) \u5728\u533a\u95f4 [l_m, r_m] \u4e0a\u53d6\u6781\u503c\u65f6\uff0c\u6700\u7ec8\u5b9a\u4f4d\u5f80\u5f80\u5728\u7ebf\u6bb5\u5185\u7684\u968f\u673a\u70b9\uff0c\u4f46\u8fd4\u56de\u7684\u51fd\u6570\u503c\u4ecd\u53ef\u89c6\u4e3a f(x) \u5728 [l, r] \u4e0a\u7684\u6781\u503c\u3002</p>"},{"location":"competitive_programming/basic/searching/ternary_search/#_4","title":"\u4ee3\u7801","text":"<p>\u5728 [-1000, 1000] \u8303\u56f4\u5185\u641c\u7d22\u5355\u5cf0\u8fde\u7eed\u51fd\u6570 f(x) \u6781\u5c0f\u503c</p> <pre><code>double ternary_search() {\n    double l = -1000, r = 1000;\n    for (int i = 0; i &lt; 300; i++) {\n        double m1 = (2 * l + r) / 3;\n        double m2 = (l + 2 * r) / 3;\n        if (f(m1) &gt;= f(m2)) l = m1;\n        else r = m2;\n    }\n    return f(l);\n}\n</code></pre> <p>\u6ce8\uff1a \u8fed\u4ee3 100 \u6b21\u540e\u533a\u95f4\u957f\u5ea6\u4e3a\u5148\u524d\u7684 2.4597 \\times 10^{-18} \uff0c\u8fed\u4ee3 1000 \u6b21\u4e4b\u540e\u533a\u95f4\u957f\u5ea6\u4e3a\u7f29\u51cf\u5230\u539f\u6765\u7684 1.4881 \\times 10^{-53} \uff0c\u6545\u4e00\u822c\u6570\u767e\u6b21\u7684\u8fed\u4ee3\u80fd\u591f\u6ee1\u8db3\u7b97\u6cd5\u7ade\u8d5b\u4e2d\u7684\u7cbe\u5ea6\u8981\u6c42\u3002</p>"},{"location":"competitive_programming/basic/searching/ternary_search/#-","title":"\u53d8\u4f53 - \u5e73\u9762\u4e09\u5206\u641c\u7d22","text":"<p>\u5f53\u9700\u8981\u6c42\u89e3\u7684\u5355\u5cf0\u8fde\u7eed\u4e8c\u5143\u51fd\u6570 f_{x, y}(x, y) \u5728\u77e9\u5f62\u533a\u57df x \\in [l_x, r_x], y \\in [l_y, r_y] \u4e0a\u7684\u6781\u503c\u65f6\uff0c\u53ef\u4f7f\u7528\u5e73\u9762\u4e09\u5206\u641c\u7d22\u7b97\u6cd5\u3002\u5177\u4f53\u5730\uff0c\u5206\u4e24\u5c42\u8c03\u7528\u4e00\u7ef4\u4e09\u5206\u641c\u7d22\u7b97\u6cd5\u3002</p> <p>\u4ece\u51e0\u4f55\u610f\u4e49\u6765\u770b\uff0c\u5e73\u9762\u4e09\u5206\u641c\u7d22\u9996\u5148\u5229\u7528\u4e00\u7ef4\u4e09\u5206\u641c\u7d22\u6c42\u89e3\u7ed9\u5b9a x \u65f6\u51fd\u6570\u5728 y \u65b9\u5411\u4e0a\u7684\u6781\u503c f_x(x) = \\max_{y \\in [l_y, r_y]}f(x, y)\uff0c\u7136\u540e\u5229\u7528\u4e09\u5206\u641c\u7d22\u6c42\u89e3 f_x(x) \u5728 x \u65b9\u5411\u4e0a\u7684\u6781\u503c\u3002</p>"},{"location":"competitive_programming/basic/searching/ternary_search/#_5","title":"\u4ee3\u7801","text":"<p>\u5728 [-1000, 1000] \\times [-1000, 1000] \u4e0a\u641c\u7d22\u5355\u5cf0\u51fd\u6570 f(x) \u7684\u6781\u5c0f\u503c</p> <pre><code>double t_search_y(double x) {\n    double l = -1000, r = 1000;\n    for (int i = 0; i &lt; 300; i++) {\n        double m1 = (2 * l + r) / 3;\n        double m2 = (l + 2 * r) / 3;\n        if (f(x, m1) &gt;= f(x, m2)) l = m1;\n        else r = m2;\n    }\n    return f(x, l);\n}\ndouble t_search_x() {\n    double l = -1000, r = 1000;\n    for (int i = 0; i &lt; 300; i++) {\n        double m1 = (2 * l + r) / 3;\n        double m2 = (l + 2 * r) / 3;\n        if (t_search_y(m1) &gt;= t_search_y(m2)) l = m1;\n        else r = m2;\n    }\n    return t_search_y(l);\n}\n</code></pre>"},{"location":"competitive_programming/basic/searching/ternary_search/#_6","title":"\u6a21\u677f\u5c01\u88c5","text":""},{"location":"competitive_programming/basic/searching/ternary_search/#_7","title":"\u4e00\u7ef4\u4e09\u5206\u641c\u7d22","text":"<pre><code>class TernarySearch {\n   public:\n    TernarySearch(function&lt;double(double)&gt; _f) : f(_f) {\n        l = -1000, r = 1000;\n    }\n\n    double MaxValue() {\n        for (int i = 0; i &lt; iter_num; i++) {\n            double m1 = (2 * l + r) / 3;\n            double m2 = (l + 2 * r) / 3;\n            if (f(m1) &gt;= f(m2)) l = m1;\n            else r = m2;\n        }\n        return f(l);\n    }\n\n   private:\n    int iter_num = 300;\n    double l, r;\n    function&lt;double(double)&gt; f;\n};\n</code></pre>"},{"location":"competitive_programming/basic/searching/ternary_search/#_8","title":"\u5e73\u9762\u4e09\u5206\u641c\u7d22","text":"<pre><code>class TernarySearch2D {\n   public:\n    TernarySearch2D(function&lt;double(double, double)&gt; _f) : f(_f) {\n        lx = -1000, rx = 1000, ly = -1000, ry = -1000;\n    }\n\n    double MaxValue() {\n        double l = lx, r = rx;\n        for (int i = 0; i &lt; iter_num; i++) {\n            double m1 = (2 * l + r) / 3;\n            double m2 = (l + 2 * r) / 3;\n            if (MaxValueY(m1) &gt;= MaxValueY(m2)) l = m1;\n            else r = m2;\n        }\n        return MaxValueY(l);\n    }\n\n   private:\n    double MaxValueY(double x) {\n        double l = ly, r = ry;\n        for (int i = 0; i &lt; iter_num; i++) {\n            double m1 = (2 * l + r) / 3;\n            double m2 = (l + 2 * r) / 3;\n            if (f(x, m1) &gt;= f(x, m2)) l = m1;\n            else r = m2;\n        }\n        return f(x, l);\n    }\n\n    int iter_num = 300;\n    double lx, rx, ly, ry;\n    function&lt;double(double, double)&gt; f;\n};\n</code></pre>"},{"location":"competitive_programming/basic/sorting/merge_sort/","title":"\u5f52\u5e76\u6392\u5e8f","text":""},{"location":"competitive_programming/basic/sorting/merge_sort/#_2","title":"\u4ee3\u7801","text":"<pre><code>void merge(int *a, int l, int m, int r) {  // Merge two sub-arraies a[l...m] &amp; a[m + 1...r] into a[l...r].\n    int n1 = m - l + 1;\n    int n2 = r - m;\n    int L[n1], R[n2];\n    for (int i = 0; i &lt; n1; i++) L[i] = a[l + i];\n    for (int j = 0; j &lt; n2; j++) R[j] = a[m + 1 + j];\n\n    int i = 0, j = 0,\n        k = l;  // Initial index of left array, right array, merged array.\n    while (i &lt; n1 &amp;&amp; j &lt; n2)\n        if (L[i] &lt;= R[j])\n            a[k++] = L[i++];\n        else\n            a[k++] = R[j++];\n    while (i &lt; n1) a[k++] = L[i++];\n    while (j &lt; n2) a[k++] = R[j++];\n}\n\nvoid merge_sort(int *a, int l, int r) {  // Sort array a[l...r].\n    if (l &gt;= r) return;\n    int m = (l + r) &gt;&gt; 1;\n    merge_sort(a, l, m);\n    merge_sort(a, m + 1, r);\n    merge(a, l, m, r);\n}\n</code></pre>"},{"location":"competitive_programming/basic/sorting/merge_sort/#_3","title":"\u7b97\u6cd5","text":"<p>\u5206\u6cbb\u6cd5\uff0c\u540e\u5e8f\u9012\u5f52\u3002</p> <p>\u5c06\u6570\u7ec4\u6298\u534a\u5206\u6210\u5de6\u3001\u53f3\u4e24\u90e8\u5206\uff0c\u5206\u522b\u6392\u5e8f\uff0c\u518d\u5bf9\u6709\u5e8f\u7684\u5de6\u3001\u53f3\u4e24\u90e8\u5206\u6267\u884c\u5408\u5e76\u64cd\u4f5c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 O(n\\log{n}) \u3002</p>"},{"location":"competitive_programming/basic/sorting/quick_sort/","title":"\u5feb\u901f\u6392\u5e8f","text":""},{"location":"competitive_programming/basic/sorting/quick_sort/#_2","title":"\u4ee3\u7801","text":"<pre><code>void quick(int *a, int l, int r) {  // Sort a[l...r].\n    if (l &gt;= r) return;\n    int i = l + 1, j = r;\n    while (1) {  //\n        while (!(a[l] &lt; a[i] || i == r)) i++;\n        while (!(a[l] &gt;= a[j] || j == l)) j--;\n        if (i &lt; j) {\n            int tmp = a[i];\n            a[i] = a[j], a[j] = tmp;\n        } else\n            break;\n    }\n    int tmp = a[l];\n    a[l] = a[j], a[j] = tmp;\n    quick(a, l, j - 1);\n    quick(a, j + 1, r);\n}\n</code></pre>"},{"location":"competitive_programming/basic/sorting/quick_sort/#_3","title":"\u7b97\u6cd5","text":"<p>\u5206\u6cbb\u6cd5\uff0c\u5148\u5e8f\u9012\u5f52\u3002</p> <p>\u5c06\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u6309\u9996\u5143\u5927\u5c0f\u5206\u8fb9\uff0c\u518d\u5bf9\u4e24\u8fb9\u5206\u522b\u9012\u5f52\u5904\u7406\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 O(n\\log{n}) \u3002</p>"},{"location":"competitive_programming/basic/sorting/quick_sort/#_4","title":"\u5b9e\u73b0","text":"<p>\u4e0a\u8ff0\u201c\u5206\u8fb9\u201d\u64cd\u4f5c \u51fa\u81ea\u5510\u53d1\u6839\u8001\u5e08\u7684\u300a\u6570\u636e\u7ed3\u6784\u300b\u6559\u6750\uff0c\u7528\u4e24\u4e2a\u6307\u9488\u4ece\u5e8f\u5217\u4e24\u5939\u903c\u5c06\u6574\u4e2a\u5e8f\u5217\u6309\u76f8\u5bf9\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u5206\u7c7b\u3002</p>"},{"location":"competitive_programming/basic/sorting/radix_sort/","title":"\u57fa\u6570\u6392\u5e8f","text":""},{"location":"competitive_programming/big_data/bloom_filter/","title":"\u5e03\u9686\u8fc7\u6ee4\u5668","text":""},{"location":"competitive_programming/big_data/bloom_filter/#_2","title":"\u95ee\u9898","text":"<p>\u7ef4\u62a4\u4e00\u4e2a\u6d77\u91cf\u6570\u636e\u7684\u96c6\u5408\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u65b0\u5143\u7d20\uff0c\u5feb\u901f\u5224\u65ad\u8be5\u5143\u7d20\u662f\u5426\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u3002</p>"},{"location":"competitive_programming/big_data/bloom_filter/#_3","title":"\u539f\u7406","text":"<p>\u5bf9\u4e8e\u53ef\u653e\u5165\u5185\u5b58\u91cf\u7ea7\u7684\u6570\u636e\uff0c\u7ecf\u5178\u7684\u96c6\u5408\u7ed3\u6784\u53ef\u4ee5\u662f \u5e73\u8861\u6811 \u548c \u54c8\u5e0c\u8868 \u3002\u4f46\u65e0\u8bba\u54ea\u4e00\u79cd\u65b9\u6cd5\u90fd\u79bb\u4e0d\u5f00\u4e00\u70b9 \u2014\u2014 \u5b58\u50a8\u6240\u6709\u539f\u59cb\u6570\u503c</p> <p>\u6bd4\u5982\u5728\u722c\u866b\u573a\u666f\u5f53\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u4e4b\u524d\u722c\u8fc7\u7684\u7f51\u7ad9\u3002\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u7f51\u7ad9\u90fd\u8981\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u722c\u8fc7\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u5f53\u4e2d\uff0c\u6211\u4eec\u5e76\u5173\u5fc3\u4e4b\u524d\u722c\u8fc7\u7684\u7f51\u7ad9\u6709\u54ea\u4e9b\uff0c\u800c\u53ea\u662f\u5173\u5fc3 \u73b0\u5728\u7684\u7f51\u7ad9\u6709\u6ca1\u6709\u5728\u4e4b\u524d\u51fa\u73b0\u8fc7 \u3002\u4e5f\u5c31\u662f\u4e4b\u524d\u51fa\u73b0\u8fc7\u4ec0\u4e48\u4e0d\u91cd\u8981\uff0c\u5f53\u524d\u7684\u662f\u5426\u51fa\u73b0\u8fc7\u624d\u91cd\u8981\u3002</p> <p>\u65e0\u8bba\u5229\u7528\u5e73\u8861\u6811\u3001Trie\u3001\u6216\u662fAC\u81ea\u52a8\u673a\u7b49\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7684\u67e5\u627e\uff0c\u4f46\u662f\u90fd\u79bb\u4e0d\u5f00\u5b58\u50a8\u4e0b\u6240\u6709\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u4f5c\u5982\u4e0b\u4f30\u7b97\uff1a\u4e00\u4e2a\u7f51\u5740\u5927\u6982 100 \u4e2a\u5b57\u7b26\uff0c\u5360 0.1 KB\uff0c\u5982\u679c\u662f\u4e00\u4ebf\u4e2a\u7f51\u5740\uff0c\u5c31\u9700\u8981 10 GB\u4e86\uff0c\u5982\u679c\u662f\u4e00\u767e\u4ebf\u6216\u4e00\u5343\u4ebf\u5462\uff1f\u663e\u7136\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b58\u50a8\u5168\u90e8\u539f\u59cb\u6570\u503c\u662f\u4e0d\u53ef\u884c\u7684\u3002\u8fd9\u65f6\u5e03\u9686\u8fc7\u6ee4\u5668\u6d3e\u4e0a\u4e86\u7528\u573a\uff0c\u5b83\u7684\u505a\u6cd5\u5de7\u5999\uff0c\u4e0d\u9700\u8981\u5b58\u50a8\u4e0b\u539f\u503c\uff0c\u539f\u7406\u5982\u4e0b\uff1a</p> <p>\u5e03\u9686\u8fc7\u6ee4\u5668\u672c\u8eab\u7684\u7ed3\u6784\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u7ef4\u62a4\u4e00\u4e2a\u957f\u5ea6\u4e3a m \u7684\u4e00\u7ef4<code>bool</code>\u578b\u6570\u7ec4\uff0c\u6bcf\u4e00\u4f4d\u53ea\u6709\u4e00\u4e2a\u4e8c\u503c\u9879 0 \u6216 1 \uff0c\u53ea\u5360\u4e00\u4f4d\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u589e\u7684\u9879\uff0c\u6211\u4eec\u4f7f\u7528 K \u79cd\u4e0d\u540c\u7684\u54c8\u5e0c\u51fd\u6570\u5c06\u5176\u6620\u5c04\u5230 [0, m-1] \uff0c\u5e76\u5c06<code>bool</code>\u6570\u7ec4\u5bf9\u5e94\u7684\u4f4d\u7f6e\u6807\u8bb0\u4e3a 1 \u3002</p>"},{"location":"competitive_programming/big_data/bloom_filter/#_4","title":"\u56fe\u89e3\u5e03\u9686\u8fc7\u6ee4\u5668","text":"<p>\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a m = 12\uff0c\u5177\u6709 k = 3 \u7ec4\u54c8\u5e0c\u51fd\u6570\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\uff1a</p> <p></p> <ul> <li> <p>\u521d\u59cb\u65f6\u6807\u8bb0\u6570\u7ec4\u5168\u90e8\u4e3a 0</p> </li> <li> <p>Key1 \u7684\u54c8\u5e0c\u5143\u7956\u4e3a (0, 2, 6) \uff0c\u5224\u65ad\u672a\u51fa\u73b0\u8fc7\uff0c\u6253\u6807\u8bb0</p> </li> <li> <p>Key2 \u7684\u54c8\u5e0c\u5143\u7956\u4e3a (5, 6, 10) \uff0c\u5224\u65ad\u672a\u51fa\u73b0\u8fc7\uff0c\u5728\u672a\u51fa\u73b0\u7684\u4f4d\u4e0a\u6253\u6807\u8bb0</p> </li> <li> <p>Key3 \u7684\u54c8\u5e0c\u5143\u7956\u4e3a (2, 6, 10) \uff0c\u5bf9\u5e94\u7684\u4f4d\u7f6e\u90fd\u5df2\u88ab\u6807\u8bb0\uff0c\u6545\u5224\u65ad \u53ef\u80fd\u51fa\u73b0\u8fc7 </p> </li> </ul> <p>\u7531\u4ee5\u4e0a\u5206\u6790\u53ef\u77e5\u5e03\u9686\u8fc7\u6ee4\u5668\u5bf9\u4e8e\u201c\u672a\u51fa\u73b0\u201d\u7684\u5224\u65ad\u662f\u51c6\u786e\u7684\uff0c\u4f46\u65e0\u6cd5\u5bf9\u51fa\u73b0\u8fc7\u505a\u51fa\u7edd\u5bf9\u6b63\u786e\u7684\u5224\u65ad\u3002</p>"},{"location":"competitive_programming/big_data/bloom_filter/#_5","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4f20\u5165\u4e00\u7ec4\u54c8\u5e0c\u51fd\u6570\uff0c\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff1a <pre><code>template &lt;typename T&gt;\nclass BloomFilter {\n   public:\n    BloomFilter(vector&lt;function&lt;int(T)&gt;&gt; hash_functions) : hash_functions_(hash_functions) {\n        flags_.assign(hash_functions_.size(), false);\n    }\n\n    void Add(T key) {\n        for (auto hash_function : hash_functions_) {\n            flags_[hash_function(key)] = true;\n        }\n    }\n\n    bool MaybeOccurred(T key) {\n        for (auto hash_function : hash_functions_) {\n            if (!flags_[hash_function(key)]) return false;\n        }\n        return true;\n    }\n   private:\n    vector&lt;function&lt;int(T)&gt;&gt; hash_functions_;\n    vector&lt;bool&gt; flags_;\n};\n</code></pre></p>"},{"location":"competitive_programming/big_data/bloom_filter/#_6","title":"\u9519\u8bef\u7387\u5206\u6790","text":"<p>\u4ee4 m \u8868\u793a\u6807\u8bb0\u6570\u7ec4\u7684\u957f\u5ea6\uff0c k \u8868\u793a\u54c8\u5e0c\u51fd\u6570\u7684\u4e2a\u6570\uff0c n \u8868\u793a\u4e00\u4e2a\u5df2\u7ecf\u8bb0\u5f55\u7684\u5143\u7d20\u6570\u91cf\u3002</p> <p>\u5f53 m \u5f88\u5927\u65f6\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u7684key\uff0c\u5176\u88ab\u8bef\u5224\u51fa\u73b0\u8fc7\u7684\u6982\u7387\u4e3a\uff1a</p>  p = \\left[ 1 - e^{- \\frac{nk}{m}} \\right] ^ k  <p>\u7ecf\u63a8\u6f14\u53ef\u5f97\uff1a</p>  m = - \\frac{n \\ln p}{(\\ln 2)^2}   k = \\frac{m}{n} \\ln 2  <p>\u6839\u636e\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u53ef\u4ee5\u6839\u636e\u9884\u8bbe\u7684\u9519\u8bef\u7387 p \u548c\u6570\u636e\u91cf\u4f30\u8ba1 n \u6765\u786e\u5b9a\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u53c2\u6570 m, k\u3002</p>"},{"location":"competitive_programming/big_data/bloom_filter/#_7","title":"\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u5c40\u9650\u6027","text":""},{"location":"competitive_programming/big_data/bloom_filter/#_8","title":"\u7075\u9b42\u62f7\u95ee","text":"<p>\u5e03\u9686\u8fc7\u6ee4\u5668\u53ef\u4ee5 \u5220\u9664\u5143\u7d20 \u5417\uff1f</p> <p>\u7b54\u6848\u662f \u4e0d\u652f\u6301 \u3002\u56e0\u4e3a\u6807\u5fd7\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4f4d\u90fd\u4e0d\u662f\u88ab\u67d0\u4e2akey\u72ec\u5360\u7684\uff0c\u5220\u9664\u67d0\u4e00\u4f4d\u4f1a\u4f7f\u5bf9\u540c\u6837\u6620\u5c04\u5230\u8be5\u4f4d\u7684\u5176\u4ed6key\u7684 \u4e0d\u5b58\u5728\u6027 \u505a\u51fa\u9519\u8bef\u5224\u65ad\u3002</p> <p>\u6709\u4e00\u79cd\u6539\u8fdb\u7684\u65b9\u6cd5\u662f\u5c06\u6807\u8bb0\u6570\u7ec4\u4ece\u6807\u8bb0\u662f\u5426\u51fa\u73b0\u8fc7\u6539\u4e3a\u6807\u8bb0\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u5220\u9664\u67d0\u4e2akey\u7684\u64cd\u4f5c\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6key\u4e86\u3002</p> <p>\u4e4d\u4e00\u770b\u8fd9\u79cd\u505a\u6cd5\u4f3c\u4e4e\u53ef\u884c\uff0c\u4f46\u5176\u5b9e\u4e5f\u6709\u7f3a\u9677\uff1a\u5f53\u67d0\u4e2a\u88ab\u5224\u65ad\u4e3a\u53ef\u80fd\u51fa\u73b0\u8fc7\u7684key\u9700\u8981\u88ab\u5220\u9664\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u51c6\u786e\u5224\u65ad\u5176\u662f\u5426\u51fa\u73b0\u8fc7\uff0c \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f3a\u884c\u5220\u9664\u540c\u6837\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6key\u4ea7\u751f\u7684\u6807\u8bb0 \u3002</p>"},{"location":"competitive_programming/big_data/bloom_filter/#_9","title":"\u7ed3\u8bba","text":"<p>\u5e03\u9686\u8fc7\u6ee4\u5668\u662f\u4e00\u4e2a\u4f18\u7f3a\u70b9\u90fd\u975e\u5e38\u660e\u663e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f18\u70b9\u662f\uff1a \u901f\u5ea6\u5feb\u3001\u5185\u5b58\u6d88\u8017\u5c0f\u3001\u4ee3\u7801\u5b9e\u73b0\u7b80\u5355 \uff1b\u7f3a\u70b9\u662f\uff1a \u4e0d\u80fd\u4e25\u683c\u5224\u65ad\u5b58\u5728\u3001\u4e0d\u652f\u6301\u5220\u9664\u5143\u7d20\u3002</p>"},{"location":"competitive_programming/data_structure/btree/","title":"B\u6811","text":"<p>B\u6811\u662f\u4e00\u4e2a\u81ea\u5e73\u8861\u641c\u7d22\u6811\u3002</p> <p>\u672c\u9875\u5185\u5bb9\u53c2\u8003\u81eaGeeksForGeeks</p>"},{"location":"competitive_programming/data_structure/btree/#_1","title":"\u95ee\u9898","text":"<p>\u8bbe\u8ba1\u4e00\u79cd\u975e\u5185\u5b58\u6570\u636e\u7ed3\u6784\u7528\u4e8e\u7ec4\u7ec7\u786c\u76d8\u4e2d\u7684\u5927\u91cf\u6570\u636e\u3002</p>"},{"location":"competitive_programming/data_structure/btree/#_2","title":"\u601d\u60f3","text":"<p>\u5927\u591a\u6570\u5176\u4ed6\u7684\u81ea\u5e73\u8861\u641c\u7d22\u6811\uff08\u5982AVL\uff0c\u7ea2\u9ed1\u6811\uff09\u90fd\u5047\u8bbe\u5c06\u6240\u6709\u5185\u5bb9\u653e\u5728 \u4e3b\u5b58 \u4e2d\u3002B\u6811\u7684\u4f5c\u7528\u662f\u7ec4\u7ec7\u89c4\u6a21\u5927 \u65e0\u6cd5\u5168\u90e8\u653e\u5165\u4e3b\u5b58 \u7684\u6570\u636e\u3002\u5f53key\u7684\u6570\u91cf\u5f88\u591a\u65f6\uff0c\u6570\u636e\u4ece\u786c\u76d8\u4e2d\u662f\u4ee5 block \u7684\u5f62\u5f0f\u88ab\u8bfb\u53d6\u3002B\u6811\u7684\u601d\u60f3\u662f\u5c3d\u91cf \u51cf\u5c11\u786c\u76d8\u8bfb\u53d6\u7684\u6b21\u6570 \u3002\u5927\u591a\u6570\u6811\u7684\u64cd\u4f5c\uff08\u641c\u7d22\u3001\u63d2\u5165\u3001\u5220\u9664\u3001\u6700\u5927\u3001\u6700\u5c0f\u7b49\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(h) \uff0c\u5176\u4e2d h \u662f\u6811\u7684\u9ad8\u5ea6\u3002B\u6811\u662f\u4e00\u4e2a\u5f88 \u80d6 \u7684\u6811\u7684\uff0c\u901a\u8fc7\u5c3d\u53ef\u80fd\u589e\u5927\u8282\u70b9\u7684\u5ea6\u6570\u6765\u6700\u5c0f\u5316B\u6811\u7684\u9ad8\u5ea6\u3002\u4e00\u822c\u5730\uff0cB\u6811 \u8282\u70b9\u7684\u5ea6\u6570\u4fdd\u6301\u4e0e\u78c1\u76d8block\u5927\u5c0f\u76f8\u540c\u7684\u6570\u503c \u3002\u7531\u4e8eB\u6811\u7684\u9ad8\u5ea6\u5f88\u5c0f\uff0c\u8bfb\u53d6\u78c1\u76d8\u7684\u6b21\u6570\u76f8\u6bd4\u5176\u4ed6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff08\u5982AVL\u3001\u7ea2\u9ed1\u6811\uff09\u6709\u4e86\u5927\u5e45\u7f29\u5c0f\u3002</p>"},{"location":"competitive_programming/data_structure/btree/#_3","title":"\u6027\u8d28","text":"<ol> <li>\u6240\u6709\u53f6\u8282\u70b9\u5728\u540c\u4e00\u5c42\u7ea7  </li> <li>\u4e00\u4e2aB\u6811\u7684\u7ed3\u6784\u7531\u6700\u5c0f\u5ea6\u6570 t \u786e\u5b9a\uff0c t \u7684\u503c\u7531\u78c1\u76d8block\u5927\u5c0f\u51b3\u5b9a  </li> <li>\u9664\u6839\u8282\u70b9\u5916\u7684\u6240\u6709\u8282\u70b9\u6700\u5c11\u5305\u542b t \u4e2akey\uff0c\u6839\u8282\u70b9\u53ef\u80fd\u6700\u5c11\u4ec5\u5305\u542b 1 \u4e2akey  </li> <li>\u6240\u6709\u8282\u70b9\uff08\u5305\u62ec\u6839\u8282\u70b9\uff09\u6700\u5927\u5305\u542b 2t-1 \u4e2akey  </li> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u7b49\u4e8e\u5176\u4e2d\u5305\u542b\u7684key\u7684\u6570\u91cf +1 </li> <li>\u8282\u70b9\u4e2d\u7684key\u6309\u5347\u5e8f\u6392\u5217\uff0c<code>k1</code>\u548c<code>k2</code>\u4e4b\u95f4\u7684\u5b50\u8282\u70b9\u5305\u542b\u6240\u6709\u4f4d\u4e8e\u533a\u95f4 (k1, k2) \u4e4b\u5185\u7684key  </li> <li>\u4e0eBST\u4e0d\u540c\u7684\u662f\uff1aB\u6811\u5411\u4e0a\u751f\u957f\uff0cBST\u5411\u4e0b\u751f\u957f</li> <li>\u4e0eBST\u76f8\u540c\u7684\u662f\uff1a\u589e\u3001\u5220\u3001\u6539\u7684\u590d\u6742\u5ea6\u90fd\u662f O(\\log n)</li> </ol> <p>\u4e0b\u9762\u662f\u4e00\u4e2a t=3 \u7684B\u6811\u793a\u610f\u56fe\uff1a</p> <p></p>"},{"location":"competitive_programming/data_structure/btree/#_4","title":"\u64cd\u4f5c","text":"<p>\u5bf9\u4e8eB\u6811\uff0c\u53ea\u8bfb\u64cd\u4f5c\u641c\u7d22\u548c\u904d\u5386\u7684\u64cd\u4f5c\u65b9\u6cd5\u662f\u663e\u7136\u7684\uff08\u4e0eBST\u7c7b\u4f3c\uff09\uff1a</p>"},{"location":"competitive_programming/data_structure/btree/#_5","title":"\u641c\u7d22","text":"<p>\u4ece\u6839\u8282\u70b9\u9012\u5f52\u5730\u5411\u4e0b\u641c\u7d22\u3002\u5bf9\u4e8e\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u8be5\u8282\u70b9\u5305\u542b\u76ee\u6807key\uff0c\u5219\u641c\u7d22\u6210\u529f\uff0c\u5426\u5219\u9012\u5f52\u641c\u7d22\u5305\u542b\u76ee\u6807\u7684\u533a\u95f4\u5b50\u6811\u3002\u5f53\u641c\u7d22\u5230\u6708\u5b50\u8282\u70b9\u4e14\u4ecd\u4e0d\u5305\u542b\u76ee\u6807<code>key</code>\uff0c\u5219\u641c\u7d22\u5931\u8d25\u3002</p>"},{"location":"competitive_programming/data_structure/btree/#_6","title":"\u904d\u5386","text":"<p>\u4ece\u5de6\u5230\u53f3\u9012\u5f52\u626b\u63cf\u5b69\u5b50\u8282\u70b9\u3002\u6bcf\u4e24\u6b21\u5bf9\u5b69\u5b50\u8282\u70b9\u9012\u5f52\u626b\u63cf\u4e4b\u95f4\u626b\u63cf\u4e8c\u8005\u4f4d\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u533a\u95f4\u8fb9\u754c<code>key</code>\u3002</p>"},{"location":"competitive_programming/data_structure/btree/#_7","title":"\u63d2\u5165","text":"<p>\u63d2\u5165\u64cd\u4f5c\u7531\u4e8e\u9700\u8981\u6dfb\u52a0\u5143\u7d20\u5e76\u4fdd\u6301B\u6811\u672c\u8eab\u7684\u7ed3\u6784\uff0c\u505a\u6cd5\u4e0d\u90a3\u4e48\u663e\u7136\u3002</p> <p>\u8bbe\u5f85\u63d2\u5165\u7684key\u4e3a<code>k</code>\u3002\u7c7b\u4f3cBST\uff0c\u4ece\u6839\u8282\u70b9\u5411\u4e0b\u904d\u5386\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u53f6\u8282\u70b9\uff0c\u5c06<code>k</code>\u63d2\u5165\u8be5\u8282\u70b9\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u8be5\u8282\u70b9\u6709\u8db3\u591f\u7684\u5bb9\u91cf\u3002</p> <p>\u4e3a\u4e86\u4fdd\u8bc1\u53f6\u8282\u70b9\u7684\u5bb9\u91cf\u603b\u662f\u591f\u7528\u7684\uff0c\u589e\u52a0\u5bf9\u8282\u70b9\u7684 \u5206\u88c2 \u64cd\u4f5c<code>SplitChild</code>\uff0c\u7528\u4e8e\u5206\u88c2\u67d0\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5206\u88c2\u7684\u8fc7\u7a0b\uff0c\u6ce8\u610f\u5230\u5206\u5272\u70b9\u4e0a\u79fb\u7684\u8fc7\u7a0b\u5bfc\u81f4B\u6811\u5411\u4e0a\u751f\u957f\uff0c\u800c\u4e0d\u50cfBST\u5355\u7eaf\u5411\u4e0b\u751f\u957f\u3002</p> <p></p> <p>\u5982\u4e0a\u8ba8\u8bba\uff0c\u5f53\u589e\u52a0\u4e00\u4e2a\u65b0key\uff0c\u6211\u4eec\u4ece\u6839\u8282\u70b9\u8d70\u5230\u53f6\u8282\u70b9\uff0c\u6bcf\u5f53\u4e0b\u6c89\u5230\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u5148\u68c0\u67e5\u76ee\u6807\u8282\u70b9\u662f\u5426\u5df2\u6ee1\uff0c\u5982\u679c\u5df2\u6ee1\u5219\u6267\u884c \u5206\u88c2\u3000\u64cd\u4f5c\u3002</p> <p>\u63d2\u5165\u7b97\u6cd5\uff1a  </p> <ol> <li> <p>\u521d\u59cb\u5316<code>x</code>\u4e3a\u6839</p> </li> <li> <p>\u53ea\u8981<code>x</code>\u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u505a\u4e0b\u8ff0\u64cd\u4f5c\uff1a</p> <p>a) \u627e\u5230<code>x</code>\u4e0b\u4e00\u5c42\u7684\u76ee\u6807\u4e0b\u6c89\u8282\u70b9<code>y</code></p> <p>b) \u5982\u679c<code>y</code>\u672a\u6ee1\uff0c\u5219\u5c06<code>x</code>\u6307\u5411<code>y</code></p> <p>c) \u5982\u679c<code>y</code>\u5df2\u6ee1\uff0c\u5219\u5c06\u5176\u5206\u88c2\u5e76\u5c06<code>x</code>\u6307\u5411<code>y</code>\u7684\u5206\u88c2\u7ed3\u679c\u4e4b\u4e00\u3002\u6b64\u65f6\u4f5c\u4e3a\u5206\u754c\u70b9\u7684key\u88ab\u79fb\u5230<code>x</code></p> </li> <li> <p>\u7b2c2\u6b65\u7684\u5faa\u73af\u5f53<code>x</code>\u4e3a\u53f6\u8282\u70b9\u7684\u65f6\u5019\u7ed3\u675f\u3002\u6b64\u65f6\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5bf9\u6240\u6709\u6ee1\u5458\u8282\u70b9\u8fdb\u884c\u5206\u88c2\uff0c<code>x</code>\u5fc5\u7136\u6709\u81f3\u5c11 1 \u4e2akey\u7684\u989d\u5916\u7a7a\u95f4\uff0c\u6545\u5c06<code>k</code>\u63d2\u5165<code>x</code>\u5373\u53ef\u3002</p> </li> </ol> <p>\u4e0b\u56fe\u8868\u793a\u4e00\u68f5B\u6811\u7684\u6784\u9020\u8fc7\u7a0b\uff0c\u5176\u4e2d\u6700\u5c0f\u8282\u70b9\u5ea6\u6570 t=3 \uff0c\u5e8f\u5217 [10, 20, 30, 40, 50, 60, 70, 80, 90] \u987a\u6b21\u63d2\u5165\u4e00\u68f5\u521d\u59cb\u4e3a\u7a7a\u7684B\u6811\u3002</p>"},{"location":"competitive_programming/data_structure/btree/#b_1","title":"\u56fe\u89e3B\u6811\u7684\u6784\u9020","text":"<p>\u5f00\u59cb\u65f6root\u4e3a\u7a7a\uff0c\u6211\u4eec\u5148\u63d2\u5165 10\uff1a</p> <p></p> <p>\u73b0\u5728\u63d2\u5165 20, 30, 40, 50 \uff0c\u76f4\u5230\u6839\u8282\u70b9\u6210\u5458\u6570\u91cf\u5230\u8fbe\u4e0a\u9650 2 \\times 3 - 1 = 5 \u4e4b\u524d\uff0c\u65b0\u5143\u7d20\u90fd\u88ab\u63d2\u5165\u6839\u8282\u70b9\uff1a</p> <p></p> <p>\u73b0\u5728\u63d2\u5165 60 \uff0c\u6709\u6839\u8282\u70b9\u5df2\u6ee1\uff0c\u6211\u4eec\u9996\u5148\u5c06\u5176\u5206\u88c2\u6210\u4e24\u4e2a\uff0c\u7136\u540e\u5c06 60 \u63d2\u5165\u9002\u5f53\u7684\u8282\u70b9\uff1a</p> <p></p> <p>\u73b0\u5728\u63d2\u5165 70, 80 \uff0c\u671f\u95f4\u4e0d\u4f1a\u53d1\u751f\u5206\u88c2\uff1a</p> <p></p> <p>\u73b0\u5728\u63d2\u5165 90 \uff0c\u8fd9\u6b21\u63d2\u5165\u4f1a\u5bfc\u81f4\u4e00\u6b21\u5206\u88c2\uff0c\u4f4d\u4e8e\u5206\u754c\u70b9\u7684key\u5c06\u88ab\u4e0a\u5347\u5230\u7236\u8282\u70b9\uff1a</p> <p></p>"},{"location":"competitive_programming/data_structure/btree/#_8","title":"\u5220\u9664","text":"<p>\u76f8\u6bd4\u63d2\u5165\u64cd\u4f5c\uff0c\u5220\u9664\u64cd\u4f5c\u66f4\u590d\u6742\uff0c\u539f\u56e0\u5728\u4e8e\u5f85\u5220\u9664\u7684key\u53ef\u80fd\u4f4d\u4e8e\u5305\u542b\u975e\u53f6\u8282\u70b9\u7684\u4efb\u610f\u8282\u70b9\uff0c\u800c\u6bcf\u5f53\u5220\u9664\u4e00\u4e2a\u4f4d\u4e8e\u975e\u53f6\u8282\u70b9\u7684key\u65f6\uff0c\u6211\u4eec\u90fd\u9700\u8981\u91cd\u65b0\u8c03\u6574\u5176\u5b69\u5b50\u8282\u70b9\u3002</p> <p>\u5728\u63d2\u5165\u64cd\u4f5c\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u6301B\u6811\u7684\u7279\u6027\uff0c\u5f53\u63d2\u5165key\u5bfc\u81f4\u8282\u70b9 \u8fc7\u5927 \u65f6\u6211\u4eec\u6267\u884c\u5206\u88c2\u64cd\u4f5c\u3002\u540c\u6837\u5730\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u5220\u9664\u64cd\u4f5c\u4e0d\u4f1a\u5bfc\u81f4\u8282\u70b9 \u8fc7\u5c0f \uff08\u552f\u4e00\u4f8b\u5916\uff1a\u6839\u8282\u70b9\u5141\u8bb8\u5305\u542b\u5c11\u4e8e t - 1 \u4e2akey\uff09\u3002\u6b63\u5982\u5728\u63d2\u5165\u64cd\u4f5c\u4e2d\u9700\u8981\u5bf9\u5305\u542b<code>k</code>\u7684\u8282\u70b9\u4e2d\u9971\u548c\u7684\u505a\u7279\u6b8a\u5904\u7406\uff0c\u5220\u9664\u64cd\u4f5c\u4e2d\u4e5f\u9700\u8981\u5bf9\u5305\u542b<code>k</code>\u7684\u8282\u70b9\uff08\u6839\u8282\u70b9\u9664\u5916\uff09\u4e2d\u6210\u5458\u6570\u91cf\u8fbe\u5230\u6700\u4f4e\u9650\u5236\u7684\u505a\u7279\u6b8a\u5904\u7406\u3002</p> <p>\u5220\u9664\u8fc7\u7a0b\u4ece<code>x</code>\u5305\u542b<code>k</code>\u7684\u5b50\u6811\u4e2d\u5220\u9664<code>k</code>\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u4fdd\u8bc1\u6bcf\u6b21\u5728\u8282\u70b9<code>x</code>\u4e0a\u9012\u5f52\u8c03\u7528\u8be5\u7b97\u6cd5\uff0c<code>x</code>\u4e2dkey\u7684\u6570\u91cf\u90fd\u4e0d\u5c11\u4e8e\u6700\u5c0f\u5ea6\u6570 t \u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u9650\u5236\u9700\u8981\u7ef4\u62a4\u6bd4\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5c0f\u5ea6\u6570\u591a 1 \u4e2akey\uff0c\u6240\u4ee5\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e00\u4e2akey\u9700\u8981\u5728\u9012\u5f52\u4e0b\u6c89\u4e4b\u524d\u79fb\u52a8\u5230\u90a3\u4e2a\u5b69\u5b50\u8282\u70b9\u3001\u8fd9\u4e2a \u66f4\u5f3a\u7684\u6761\u4ef6 \u5141\u8bb8\u6211\u4eec\u5728B\u6811\u4e2d\u5220\u9664key\u7684\u8fc7\u7a0b\u4e2d\u4ec5\u6cbf\u7740\u6811\u679d\u5411\u4e0b\u79fb\u52a8\u4e00\u8d9f\u800c\u4e0d\u7528\u56de\u6eaf\uff08\u53ea\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u89e3\u91ca\uff09\u3002\u5728\u4e0b\u8ff0\u5220\u9664\u7b97\u6cd5\u4e2d\uff0c\u5f53\u6839\u8282\u70b9<code>x</code>\u4e00\u65e6\u4e3a\u7a7a\uff08\u8fd9\u79cd\u60c5\u51b5\u4f1a\u53d1\u751f\u57282c\u548c3b\u4e2d\uff09\uff0c\u6211\u4eec\u5c31\u5220\u9664<code>x</code>\uff0c\u5e76\u8ba9<code>x</code>\u552f\u4e00\u7684\u5b50\u8282\u70b9\u6210\u4e3a\u65b0\u7684\u6839\u8282\u70b9\u3002</p> <p>\u5220\u9664\u7b97\u6cd5\uff1a</p> <ol> <li> <p>\u82e5\u952e<code>k</code>\u5728\u8282\u70b9<code>x</code>\u4e2d\u4e14<code>x</code>\u662f\u53f6\u8282\u70b9\uff0c\u5c06<code>k</code>\u4ece<code>x</code>\u4e2d\u5220\u9664\u5373\u53ef</p> </li> <li> <p>\u82e5\u952e<code>k</code>\u5728\u8282\u70b9<code>x</code>\u4e2d\u4e14<code>x</code>\u662f\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\uff1a</p> <p>a) \u82e5\u533a\u95f4\u8986\u76d6<code>k</code>\u7684\u5b50\u8282\u70b9<code>y</code>\u6240\u5305\u542bkey\u7684\u6570\u91cf\u6700\u5c11\u4e0d\u5c11\u4e8e t \uff0c\u627e\u5230\u4ee5<code>y</code>\u4e3a\u6839\u7684\u5b50\u6811\u4e2d<code>k</code>\u7684\u524d\u9a71<code>k0</code>\u3002\u9012\u5f52\u5730\u5220\u9664<code>k0</code>\uff0c\u5e76\u5c06<code>x</code>\u4e2d\u7684<code>k</code>\u6362\u6210<code>k0</code></p> <p>b) \u82e5<code>y</code>\u6240\u5305\u542b\u7684key\u7684\u6570\u91cf\u5c0f\u4e8e t \uff0c\u5bf9\u79f0\u5730\uff0c\u68c0\u67e5<code>x</code>\u4e2d\u7d27\u968f<code>k</code>\u7684\u540e\u7ee7\u8282\u70b9<code>z</code>\uff0c\u82e5<code>z</code>\u81f3\u5c11\u5177\u6709<code>t</code>\u4e2a\u952e\uff0c\u5219\u5728\u4ee5<code>z</code>\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u627e\u5230<code>k</code>\u7684\u540e\u7ee7<code>k0</code>\u3002\u9012\u5f52\u5220\u9664<code>k0</code>\uff0c\u7136\u540e\u5c06<code>x</code>\u4e2d\u7684<code>k</code>\u66ff\u6362\u6210<code>k0</code>\uff08\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u8d9f\u5411\u4e0b\u7684\u8fc7\u7a0b\u4e2d\u627e\u5230\u5e76\u5220\u9664<code>k0</code>\uff09</p> <p>c) \u5426\u5219\uff0c\u82e5<code>y</code>\u548c<code>z</code>\u7684\u952e\u6570\u90fd\u662f t - 1 \uff0c\u5c06<code>k</code>\u548c<code>z</code>\u4e2d\u7684\u6240\u6709\u952e\u5408\u5e76\u5230<code>y</code>\uff0c\u5982\u6b64<code>x</code>\u540c\u65f6\u4e22\u6389<code>k</code>\u548c\u6307\u5411<code>z</code>\u7684\u6307\u9488\uff0c<code>y</code>\u6b64\u65f6\u952e\u6570\u4e3a 2t - 1 \u3002\u63a5\u7740\u91ca\u653e<code>z</code>\u5e76\u4ece<code>y</code>\u4e2d\u9012\u5f52\u5730\u5220\u9664<code>k</code>\u3002</p> </li> <li> <p>\u82e5\u952e<code>k</code>\u4e0d\u5728\u5185\u90e8\u8282\u70b9<code>x</code>\u4e2d\uff0c\u5219\u786e\u5b9a\u4e00\u5b9a\u5305\u542b<code>k</code>\u7684\u9002\u5f53\u5b50\u6811\u7684\u6839<code>x.c(i)</code>\u3002\u5982\u679c<code>x.c(i)</code>\u4ec5\u5177\u6709 t - 1 \u4e2a\u952e\uff0c\u5219\u6839\u636e\u9700\u8981\u6267\u884c\u6b65\u9aa4 3a \u6216 3b \uff0c\u4ee5\u786e\u4fdd\u4e0b\u964d\u5230\u5305\u542b\u81f3\u5c11 t \u4e2a\u952e\u7684\u8282\u70b9\u3002\u7136\u540e\u901a\u8fc7\u9012\u5f52 <code>x</code> \u7684\u9002\u5f53\u5b69\u5b50\u6765\u5b8c\u6210\uff1a</p> <p>a) \u82e5<code>x.c(i)</code>\u4ec5\u5177\u6709 t - 1 \u4e2a\u952e\uff0c \u4f46\u6709\u4e00\u4e2a\u952e\u6570\u81f3\u5c11\u4e3a<code>t</code>\u7684\u76f4\u63a5\u540c\u7ea7\uff0c\u4ece<code>x</code>\u4e2d\u4e0b\u79fb\u67d0\u4e2a\u952e\u5230<code>x.c(i)</code>\uff0c\u518d\u4ece<code>x.c(i)</code>\u7684\u76f4\u63a5\u5de6\u6216\u53f3\u540c\u7ea7\u4e2d\u4e0a\u79fb\u4e00\u4e2a\u952e\u5230<code>x</code>\uff0c\u7136\u540e\u5c06\u9002\u5f53\u7684\u5b50\u8282\u70b9\u6307\u9488\u4ece<code>x.c(i)</code>\u7684\u76f4\u63a5\u540c\u7ea7\u6307\u5411\u5176\u672c\u8eab\u3002</p> <p>b) \u82e5<code>x.c(i)</code>\u4e0e\u5176\u4e24\u4e2a\u76f4\u63a5\u540c\u7ea7\u7684\u952e\u6570\u90fd\u662f t - 1 \uff0c\u5c06<code>x.c(i)</code>\u4e0e\u5176\u4e2d\u4e00\u4e2a\u5408\u5e76\uff0c\u671f\u95f4\u5c06<code>x</code>\u4e2d\u7684\u4e00\u4e2a\u952e\u4e0b\u79fb\u5230\u5408\u5e76\u8282\u70b9\uff0c\u4f5c\u4e3a\u5176\u5206\u754c\u952e\u3002</p> </li> </ol> <p>\u7531\u4e8eB\u6811\u4e2d\u7684\u5927\u591a\u6570\u952e\u90fd\u5728\u53f6\u5b50\u4e2d\uff0c\u56e0\u6b64\u5220\u9664\u64cd\u4f5c\u6700\u5e38\u7528\u4e8e\u4ece\u53f6\u5b50\u4e2d\u5220\u9664\u952e\uff0c\u6b64\u65f6\u201c\u9012\u5f52\u201d\u5220\u9664\u53ea\u9700\u4e00\u8d9f\u4e0b\u884c\uff0c\u800c\u65e0\u9700\u56de\u6eaf\u5904\u7406\u3002\u5bf9\u4e8e\u4ece\u5185\u90e8\u8282\u70b9\u5220\u9664\u4e00\u4e2a\u952e\u7684\u60c5\u51b5\uff0c\u5728\u7b97\u6cd5\u4e0b\u6c89\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u5fc5\u987b\u8fd4\u56de\u5220\u9664\u952e\u7684\u8282\u70b9\uff0c\u624d\u80fd\u7528\u5176\u524d\u9a71\u540e\u8005\u540e\u7ee7\u66ff\u6362\u952e\uff082a\u548c2b\u7684\u60c5\u51b5\uff09</p>"},{"location":"competitive_programming/data_structure/btree/#b_2","title":"\u56fe\u89e3B\u6811\u7684\u5220\u9664\u64cd\u4f5c","text":""},{"location":"competitive_programming/data_structure/btree/#c","title":"C++\u5b9e\u73b0","text":"<pre><code>/* The deletion function has been compartmentalized into 8 functions for ease\nof understanding and clarity\n\nThe following functions are exclusive for deletion\nIn class BTreeNode:\n        1) Remove\n        2) RemoveFromLeaf\n        3) RemoveFromNonLeaf\n        4) GetPred\n        5) GetSucc\n        6) BorrowFromPrev\n        7) BorrowFromNext\n        8) Merge\n        9) FindKey\n\nIn class BTree:\n        1) Remove\n\nThe removal of a key from a B-Tree is a fairly complicated process. The program\nhandles all the 6 different cases that might arise while removing a key.\n\nTesting: The code has been tested using the B-Tree provided in the CLRS book(\nincluded in the main function ) along with other cases.\n\nReference: CLRS3 - Chapter 18 - (499-502)\nIt is advised to read the material in CLRS before taking a look at the code. */\n\n#include &lt;iostream&gt;\nusing namespace std;\n\n// A BTree node\nclass BTreeNode {\n   public:\n    BTreeNode(int _t, bool _leaf);  // Constructor\n\n    // A function to traverse all nodes in a subtree rooted with this node\n    void Traverse();\n\n    // A function to search a key in subtree rooted with this node.\n    BTreeNode *Search(int k);  // returns NULL if k is not present.\n\n    // A function that returns the index of the first key that is greater\n    // or equal to k\n    int FindKey(int k);\n\n    // A utility function to insert a new key in the subtree rooted with\n    // this node. The assumption is, the node must be non-full when this\n    // function is called\n    void InsertNonFull(int k);\n\n    // A utility function to split the child y of this node. i is index\n    // of y in child array C[]. The Child y must be full when this\n    // function is called\n    void SplitChild(int i, BTreeNode *y);\n\n    // A wrapper function to remove the key k in subtree rooted with\n    // this node.\n    void Remove(int k);\n\n    // A function to remove the key present in idx-th position in\n    // this node which is a leaf\n    void RemoveFromLeaf(int idx);\n\n    // A function to remove the key present in idx-th position in\n    // this node which is a non-leaf node\n    void RemoveFromNonLeaf(int idx);\n\n    // A function to get the predecessor of the key- where the key\n    // is present in the idx-th position in the node\n    int GetPred(int idx);\n\n    // A function to get the successor of the key- where the key\n    // is present in the idx-th position in the node\n    int GetSucc(int idx);\n\n    // A function to fill up the child node present in the idx-th\n    // position in the C[] array if that child has less than t-1 keys\n    void Fill(int idx);\n\n    // A function to borrow a key from the C[idx-1]-th node and place\n    // it in C[idx]th node\n    void BorrowFromPrev(int idx);\n\n    // A function to borrow a key from the C[idx+1]-th node and place it\n    // in C[idx]th node\n    void BorrowFromNext(int idx);\n\n    // A function to merge idx-th child of the node with (idx+1)th child of\n    // the node\n    void Merge(int idx);\n\n    // Make BTree friend of this so that we can access private members of\n    // this class in BTree functions\n    friend class BTree;\n\n   private:\n    int *keys;      // An array of keys\n    int t;          // Minimum degree (defines the range for number of keys)\n    BTreeNode **C;  // An array of child pointers\n    int n;          // Current number of keys\n    bool leaf;      // Is true when node is leaf. Otherwise false\n};\n\nclass BTree {\n   public:\n    // Constructor (Initializes tree as empty)\n    BTree(int _t) {\n        root = NULL;\n        t = _t;\n    }\n\n    void Traverse() {\n        if (root != NULL) root-&gt;Traverse();\n    }\n\n    // function to search a key in this tree\n    BTreeNode *Search(int k) { return (root == NULL) ? NULL : root-&gt;Search(k); }\n\n    // The main function that inserts a new key in this B-Tree\n    void Insert(int k);\n\n    // The main function that removes a new key in thie B-Tree\n    void Remove(int k);\n\n   private:\n    BTreeNode *root;  // Pointer to root node\n    int t;            // Minimum degree\n};\n\nBTreeNode::BTreeNode(int t1, bool leaf1) {\n    // Copy the given minimum degree and leaf property\n    t = t1;\n    leaf = leaf1;\n\n    // Allocate memory for maximum number of possible keys\n    // and child pointers\n    keys = new int[2 * t - 1];\n    C = new BTreeNode *[2 * t];\n\n    // Initialize the number of keys as 0\n    n = 0;\n}\n\n// A utility function that returns the index of the first key that is\n// greater than or equal to k\nint BTreeNode::FindKey(int k) {\n    int idx = 0;\n    while (idx &lt; n &amp;&amp; keys[idx] &lt; k) ++idx;\n    return idx;\n}\n\n// A function to remove the key k from the sub-tree rooted with this node\nvoid BTreeNode::Remove(int k) {\n    int idx = FindKey(k);\n\n    // The key to be removed is present in this node\n    if (idx &lt; n &amp;&amp; keys[idx] == k) {\n        // If the node is a leaf node - RemoveFromLeaf is called\n        // Otherwise, RemoveFromNonLeaf function is called\n        if (leaf)\n            RemoveFromLeaf(idx);\n        else\n            RemoveFromNonLeaf(idx);\n    } else {\n        // If this node is a leaf node, then the key is not present in tree\n        if (leaf) {\n            cout &lt;&lt; \"The key \" &lt;&lt; k &lt;&lt; \" is does not exist in the tree\\n\";\n            return;\n        }\n\n        // The key to be removed is present in the sub-tree rooted with this\n        // node The flag indicates whether the key is present in the sub-tree\n        // rooted with the last child of this node\n        bool flag = ((idx == n) ? true : false);\n\n        // If the child where the key is supposed to exist has less that t keys,\n        // we fill that child\n        if (C[idx]-&gt;n &lt; t) Fill(idx);\n\n        // If the last child has been merged, it must have merged with the\n        // previous child and so we recurse on the (idx-1)th child. Else, we\n        // recurse on the (idx)th child which now has atleast t keys\n        if (flag &amp;&amp; idx &gt; n)\n            C[idx - 1]-&gt;Remove(k);\n        else\n            C[idx]-&gt;Remove(k);\n    }\n    return;\n}\n\n// A function to remove the idx-th key from this node - which is a leaf node\nvoid BTreeNode::RemoveFromLeaf(int idx) {\n    // Move all the keys after the idx-th pos one place backward\n    for (int i = idx + 1; i &lt; n; ++i) keys[i - 1] = keys[i];\n\n    // Reduce the count of keys\n    n--;\n\n    return;\n}\n\n// A function to remove the idx-th key from this node - which is a non-leaf node\nvoid BTreeNode::RemoveFromNonLeaf(int idx) {\n    int k = keys[idx];\n\n    // If the child that precedes k (C[idx]) has atleast t keys,\n    // find the predecessor 'pred' of k in the subtree rooted at\n    // C[idx]. Replace k by pred. Recursively delete pred\n    // in C[idx]\n    if (C[idx]-&gt;n &gt;= t) {\n        int pred = GetPred(idx);\n        keys[idx] = pred;\n        C[idx]-&gt;Remove(pred);\n    }\n\n    // If the child C[idx] has less that t keys, examine C[idx+1].\n    // If C[idx+1] has atleast t keys, find the successor 'succ' of k in\n    // the subtree rooted at C[idx+1]\n    // Replace k by succ\n    // Recursively delete succ in C[idx+1]\n    else if (C[idx + 1]-&gt;n &gt;= t) {\n        int succ = GetSucc(idx);\n        keys[idx] = succ;\n        C[idx + 1]-&gt;Remove(succ);\n    }\n\n    // If both C[idx] and C[idx+1] has less that t keys,merge k and all of\n    // C[idx+1] into C[idx] Now C[idx] contains 2t-1 keys Free C[idx+1] and\n    // recursively delete k from C[idx]\n    else {\n        Merge(idx);\n        C[idx]-&gt;Remove(k);\n    }\n    return;\n}\n\n// A function to get predecessor of keys[idx]\nint BTreeNode::GetPred(int idx) {\n    // Keep moving to the right most node until we reach a leaf\n    BTreeNode *cur = C[idx];\n    while (!cur-&gt;leaf) cur = cur-&gt;C[cur-&gt;n];\n\n    // Return the last key of the leaf\n    return cur-&gt;keys[cur-&gt;n - 1];\n}\n\nint BTreeNode::GetSucc(int idx) {\n    // Keep moving the left most node starting from C[idx+1] until we reach a\n    // leaf\n    BTreeNode *cur = C[idx + 1];\n    while (!cur-&gt;leaf) cur = cur-&gt;C[0];\n\n    // Return the first key of the leaf\n    return cur-&gt;keys[0];\n}\n\n// A function to fill child C[idx] which has less than t-1 keys\nvoid BTreeNode::Fill(int idx) {\n    // If the previous child(C[idx-1]) has more than t-1 keys, borrow a key\n    // from that child\n    if (idx != 0 &amp;&amp; C[idx - 1]-&gt;n &gt;= t) BorrowFromPrev(idx);\n\n    // If the next child(C[idx+1]) has more than t-1 keys, borrow a key\n    // from that child\n    else if (idx != n &amp;&amp; C[idx + 1]-&gt;n &gt;= t)\n        BorrowFromNext(idx);\n\n    // Merge C[idx] with its sibling\n    // If C[idx] is the last child, merge it with with its previous sibling\n    // Otherwise merge it with its next sibling\n    else {\n        if (idx != n)\n            Merge(idx);\n        else\n            Merge(idx - 1);\n    }\n    return;\n}\n\n// A function to borrow a key from C[idx-1] and insert it\n// into C[idx]\nvoid BTreeNode::BorrowFromPrev(int idx) {\n    BTreeNode *child = C[idx];\n    BTreeNode *sibling = C[idx - 1];\n\n    // The last key from C[idx-1] goes up to the parent and key[idx-1]\n    // from parent is inserted as the first key in C[idx]. Thus, the loses\n    // sibling one key and child gains one key\n\n    // Moving all key in C[idx] one step ahead\n    for (int i = child-&gt;n - 1; i &gt;= 0; --i) child-&gt;keys[i + 1] = child-&gt;keys[i];\n\n    // If C[idx] is not a leaf, move all its child pointers one step ahead\n    if (!child-&gt;leaf) {\n        for (int i = child-&gt;n; i &gt;= 0; --i) child-&gt;C[i + 1] = child-&gt;C[i];\n    }\n\n    // Setting child's first key equal to keys[idx-1] from the current node\n    child-&gt;keys[0] = keys[idx - 1];\n\n    // Moving sibling's last child as C[idx]'s first child\n    if (!child-&gt;leaf) child-&gt;C[0] = sibling-&gt;C[sibling-&gt;n];\n\n    // Moving the key from the sibling to the parent\n    // This reduces the number of keys in the sibling\n    keys[idx - 1] = sibling-&gt;keys[sibling-&gt;n - 1];\n\n    child-&gt;n += 1;\n    sibling-&gt;n -= 1;\n\n    return;\n}\n\n// A function to borrow a key from the C[idx+1] and place\n// it in C[idx]\nvoid BTreeNode::BorrowFromNext(int idx) {\n    BTreeNode *child = C[idx];\n    BTreeNode *sibling = C[idx + 1];\n\n    // keys[idx] is inserted as the last key in C[idx]\n    child-&gt;keys[(child-&gt;n)] = keys[idx];\n\n    // Sibling's first child is inserted as the last child\n    // into C[idx]\n    if (!(child-&gt;leaf)) child-&gt;C[(child-&gt;n) + 1] = sibling-&gt;C[0];\n\n    // The first key from sibling is inserted into keys[idx]\n    keys[idx] = sibling-&gt;keys[0];\n\n    // Moving all keys in sibling one step behind\n    for (int i = 1; i &lt; sibling-&gt;n; ++i)\n        sibling-&gt;keys[i - 1] = sibling-&gt;keys[i];\n\n    // Moving the child pointers one step behind\n    if (!sibling-&gt;leaf) {\n        for (int i = 1; i &lt;= sibling-&gt;n; ++i) sibling-&gt;C[i - 1] = sibling-&gt;C[i];\n    }\n\n    // Increasing and decreasing the key count of C[idx] and C[idx+1]\n    // respectively\n    child-&gt;n += 1;\n    sibling-&gt;n -= 1;\n\n    return;\n}\n\n// A function to merge C[idx] with C[idx+1]\n// C[idx+1] is freed after merging\nvoid BTreeNode::Merge(int idx) {\n    BTreeNode *child = C[idx];\n    BTreeNode *sibling = C[idx + 1];\n\n    // Pulling a key from the current node and inserting it into (t-1)th\n    // position of C[idx]\n    child-&gt;keys[t - 1] = keys[idx];\n\n    // Copying the keys from C[idx+1] to C[idx] at the end\n    for (int i = 0; i &lt; sibling-&gt;n; ++i) child-&gt;keys[i + t] = sibling-&gt;keys[i];\n\n    // Copying the child pointers from C[idx+1] to C[idx]\n    if (!child-&gt;leaf) {\n        for (int i = 0; i &lt;= sibling-&gt;n; ++i) child-&gt;C[i + t] = sibling-&gt;C[i];\n    }\n\n    // Moving all keys after idx in the current node one step before -\n    // to fill the gap created by moving keys[idx] to C[idx]\n    for (int i = idx + 1; i &lt; n; ++i) keys[i - 1] = keys[i];\n\n    // Moving the child pointers after (idx+1) in the current node one\n    // step before\n    for (int i = idx + 2; i &lt;= n; ++i) C[i - 1] = C[i];\n\n    // Updating the key count of child and the current node\n    child-&gt;n += sibling-&gt;n + 1;\n    n--;\n\n    // Freeing the memory occupied by sibling\n    delete (sibling);\n    return;\n}\n\n// The main function that inserts a new key in this B-Tree\nvoid BTree::Insert(int k) {\n    // If tree is empty\n    if (root == NULL) {\n        // Allocate memory for root\n        root = new BTreeNode(t, true);\n        root-&gt;keys[0] = k;  // Insert key\n        root-&gt;n = 1;        // Update number of keys in root\n    } else                  // If tree is not empty\n    {\n        // If root is full, then tree grows in height\n        if (root-&gt;n == 2 * t - 1) {\n            // Allocate memory for new root\n            BTreeNode *s = new BTreeNode(t, false);\n\n            // Make old root as child of new root\n            s-&gt;C[0] = root;\n\n            // Split the old root and move 1 key to the new root\n            s-&gt;SplitChild(0, root);\n\n            // New root has two children now. Decide which of the\n            // two children is going to have new key\n            int i = 0;\n            if (s-&gt;keys[0] &lt; k) i++;\n            s-&gt;C[i]-&gt;InsertNonFull(k);\n\n            // Change root\n            root = s;\n        } else  // If root is not full, call InsertNonFull for root\n            root-&gt;InsertNonFull(k);\n    }\n}\n\n// A utility function to insert a new key in this node\n// The assumption is, the node must be non-full when this\n// function is called\nvoid BTreeNode::InsertNonFull(int k) {\n    // Initialize index as index of rightmost element\n    int i = n - 1;\n\n    // If this is a leaf node\n    if (leaf == true) {\n        // The following loop does two things\n        // a) Finds the location of new key to be inserted\n        // b) Moves all greater keys to one place ahead\n        while (i &gt;= 0 &amp;&amp; keys[i] &gt; k) {\n            keys[i + 1] = keys[i];\n            i--;\n        }\n\n        // Insert the new key at found location\n        keys[i + 1] = k;\n        n = n + 1;\n    } else  // If this node is not leaf\n    {\n        // Find the child which is going to have the new key\n        while (i &gt;= 0 &amp;&amp; keys[i] &gt; k) i--;\n\n        // See if the found child is full\n        if (C[i + 1]-&gt;n == 2 * t - 1) {\n            // If the child is full, then split it\n            SplitChild(i + 1, C[i + 1]);\n\n            // After split, the middle key of C[i] goes up and\n            // C[i] is splitted into two. See which of the two\n            // is going to have the new key\n            if (keys[i + 1] &lt; k) i++;\n        }\n        C[i + 1]-&gt;InsertNonFull(k);\n    }\n}\n\n// A utility function to split the child y of this node\n// Note that y must be full when this function is called\nvoid BTreeNode::SplitChild(int i, BTreeNode *y) {\n    // Create a new node which is going to store (t-1) keys\n    // of y\n    BTreeNode *z = new BTreeNode(y-&gt;t, y-&gt;leaf);\n    z-&gt;n = t - 1;\n\n    // Copy the last (t-1) keys of y to z\n    for (int j = 0; j &lt; t - 1; j++) z-&gt;keys[j] = y-&gt;keys[j + t];\n\n    // Copy the last t children of y to z\n    if (y-&gt;leaf == false) {\n        for (int j = 0; j &lt; t; j++) z-&gt;C[j] = y-&gt;C[j + t];\n    }\n\n    // Reduce the number of keys in y\n    y-&gt;n = t - 1;\n\n    // Since this node is going to have a new child,\n    // create space of new child\n    for (int j = n; j &gt;= i + 1; j--) C[j + 1] = C[j];\n\n    // Link the new child to this node\n    C[i + 1] = z;\n\n    // A key of y will move to this node. Find location of\n    // new key and move all greater keys one space ahead\n    for (int j = n - 1; j &gt;= i; j--) keys[j + 1] = keys[j];\n\n    // Copy the middle key of y to this node\n    keys[i] = y-&gt;keys[t - 1];\n\n    // Increment count of keys in this node\n    n = n + 1;\n}\n\n// Function to traverse all nodes in a subtree rooted with this node\nvoid BTreeNode::Traverse() {\n    // There are n keys and n+1 children, travers through n keys\n    // and first n children\n    int i;\n    for (i = 0; i &lt; n; i++) {\n        // If this is not leaf, then before printing key[i],\n        // traverse the subtree rooted with child C[i].\n        if (leaf == false) C[i]-&gt;Traverse();\n        cout &lt;&lt; \" \" &lt;&lt; keys[i];\n    }\n\n    // Print the subtree rooted with last child\n    if (leaf == false) C[i]-&gt;Traverse();\n}\n\n// Function to search key k in subtree rooted with this node\nBTreeNode *BTreeNode::Search(int k) {\n    // Find the first key greater than or equal to k\n    int i = 0;\n    while (i &lt; n &amp;&amp; k &gt; keys[i]) i++;\n\n    // If the found key is equal to k, return this node\n    if (keys[i] == k) return this;\n\n    // If key is not found here and this is a leaf node\n    if (leaf == true) return NULL;\n\n    // Go to the appropriate child\n    return C[i]-&gt;Search(k);\n}\n\nvoid BTree::Remove(int k) {\n    if (!root) {\n        cout &lt;&lt; \"The tree is empty\\n\";\n        return;\n    }\n\n    // Call the remove function for root\n    root-&gt;Remove(k);\n\n    // If the root node has 0 keys, make its first child as the new root\n    // if it has a child, otherwise set root as NULL\n    if (root-&gt;n == 0) {\n        BTreeNode *tmp = root;\n        if (root-&gt;leaf)\n            root = NULL;\n        else\n            root = root-&gt;C[0];\n\n        // Free the old root\n        delete tmp;\n    }\n    return;\n}\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a <pre><code>// Driver program to test above functions\nint main() {\n    BTree t(3);  // A B-Tree with minium degree 3\n\n    t.Insert(1);\n    t.Insert(3);\n    t.Insert(7);\n    t.Insert(10);\n    t.Insert(11);\n    t.Insert(13);\n    t.Insert(14);\n    t.Insert(15);\n    t.Insert(18);\n    t.Insert(16);\n    t.Insert(19);\n    t.Insert(24);\n    t.Insert(25);\n    t.Insert(26);\n    t.Insert(21);\n    t.Insert(4);\n    t.Insert(5);\n    t.Insert(20);\n    t.Insert(22);\n    t.Insert(2);\n    t.Insert(17);\n    t.Insert(12);\n    t.Insert(6);\n\n    cout &lt;&lt; \"Traversal of tree constructed is\\n\";\n    t.Traverse();\n    cout &lt;&lt; endl;\n\n    t.Remove(6);\n    cout &lt;&lt; \"Traversal of tree after removing 6\\n\";\n    t.Traverse();\n    cout &lt;&lt; endl;\n\n    t.Remove(13);\n    cout &lt;&lt; \"Traversal of tree after removing 13\\n\";\n    t.Traverse();\n    cout &lt;&lt; endl;\n\n    t.Remove(7);\n    cout &lt;&lt; \"Traversal of tree after removing 7\\n\";\n    t.Traverse();\n    cout &lt;&lt; endl;\n\n    t.Remove(4);\n    cout &lt;&lt; \"Traversal of tree after removing 4\\n\";\n    t.Traverse();\n    cout &lt;&lt; endl;\n\n    t.Remove(2);\n    cout &lt;&lt; \"Traversal of tree after removing 2\\n\";\n    t.Traverse();\n    cout &lt;&lt; endl;\n\n    t.Remove(16);\n    cout &lt;&lt; \"Traversal of tree after removing 16\\n\";\n    t.Traverse();\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>Traversal of tree constructed is\n 1 2 3 4 5 6 7 10 11 12 13 14 15 16 17 18 19 20 21 22 24 25 26\nTraversal of tree after removing 6\n 1 2 3 4 5 7 10 11 12 13 14 15 16 17 18 19 20 21 22 24 25 26\nTraversal of tree after removing 13\n 1 2 3 4 5 7 10 11 12 14 15 16 17 18 19 20 21 22 24 25 26\nTraversal of tree after removing 7\n 1 2 3 4 5 10 11 12 14 15 16 17 18 19 20 21 22 24 25 26\nTraversal of tree after removing 4\n 1 2 3 5 10 11 12 14 15 16 17 18 19 20 21 22 24 25 26\nTraversal of tree after removing 2\n 1 3 5 10 11 12 14 15 16 17 18 19 20 21 22 24 25 26\nTraversal of tree after removing 16\n 1 3 5 10 11 12 14 15 17 18 19 20 21 22 24 25 26\n</code></pre></p>"},{"location":"competitive_programming/data_structure/fenwick/","title":"Fenwick/\u6811\u72b6\u6570\u7ec4","text":"<p>Fenwick\u6811\uff0c\u4e5f\u53ebbinary index tree\uff0c\u6216\u6811\u72b6\u6570\u7ec4\uff0c\u652f\u6301\u5728 O(\\log n) \u65f6\u95f4\u5185\u66f4\u65b0\u5143\u7d20\u503c\u548c\u8ba1\u7b97\u524d\u7f00\u548c\u64cd\u4f5c</p>"},{"location":"competitive_programming/data_structure/fenwick/#_1","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217 a \uff0c\u8981\u6c42\u5728 O(\\log n) \u7684\u65f6\u95f4\u5185\u5b8c\u6210\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li> <p>Add(i, delta) - \u5728\u6307\u5b9a\u9879 a[i] \u4e0a\u589e\u52a0 delta</p> </li> <li> <p>Query(l, r) - \u67e5\u8be2\u4f4d\u4e8e\u533a\u95f4 [l, r) \u7684\u5143\u7d20\u548c</p> </li> <li> <p>Query(x) - \u67e5\u8be2\u957f\u5ea6\u4e3a x \u7684\u524d\u7f00\u548c\uff0c\u5373 [0, x) \u7684\u548c</p> </li> </ul>"},{"location":"competitive_programming/data_structure/fenwick/#_2","title":"\u4ee3\u7801","text":"<pre><code>template &lt;typename T&gt;\nclass BIT {\n public:\n  BIT() {}\n\n  BIT(int _size, T _invalid_value)\n      : size(_size), invalid_value(_invalid_value) {\n    bit = vector&lt;T&gt;(size + 1, 0);\n  }\n\n  BIT(vector&lt;T&gt; arr, T _invalid_value)\n      : size((int)arr.size()), invalid_value(_invalid_value) {\n    bit = vector&lt;T&gt;(size + 1, 0);\n    for (int i = 0; i &lt; size; i++) {\n      this-&gt;Add(i, arr[i]);\n    }\n  }\n\n  void Add(int x, T val) {\n    for (x++; x &lt;= size; x += x &amp; -x) {\n      bit[x] += val;\n    }\n  }\n\n  T Query(int x) {  // Sum [0, x)\n    if (x &lt; 0 || x &gt; this-&gt;size) {\n      return this-&gt;invalid_value;\n    }\n    T ans = 0;\n    while (x) {\n      ans += bit[x];\n      x -= x &amp; -x;\n    }\n\n    return ans;\n  }\n\n  T Query(int l, int r) {  // Sum [l, r)\n    if (l &lt; 0 || l &gt;= this-&gt;size) {\n      return this-&gt;invalid_value;\n    }\n    if (r &lt; 0 || r &gt; this-&gt;size) {\n      return this-&gt;invalid_value;\n    }\n    return Query(r) - Query(l);\n  }\n\n private:\n  int size;\n  T invalid_value;\n  vector&lt;T&gt; bit;\n};\n</code></pre>"},{"location":"competitive_programming/data_structure/fenwick/#_3","title":"\u7b97\u6cd5","text":"<p>a \u7684\u6811\u72b6\u6570\u7ec4 b \u5177\u6709\u5982\u4e0b\u9012\u5f52\u7ed3\u6784\uff1a</p> <p></p> <p>\u6ce8\u610f\u5230\uff0c\u7f16\u53f7 i \u7684\u8282\u70b9\u5176\u56de\u6eaf\u94fe\u8def\u4e0a\u8282\u70b9\u503c\u7684\u548c\u5373\u4e3a\u539f\u59cb\u5e8f\u5217\u524d\u7f00\u548ca[0, ..., i\uff09\u3002\u5177\u4f53\u5730\uff0c\u5047\u8bbe b[i] \u5728\u4e0a\u8ff0\u6811\u7ed3\u6784\u7684\u7236\u8282\u70b9\u4e3a b[j] \uff0c\u5219 b[i] \u7684\u503c\u4e3a a[j, i) \u7684\u5143\u7d20\u548c\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u83b7\u53d6 b[i] \u7684\u7236\u8282\u70b9 b[j] \u7684\u4e0b\u6807 j \u5462\uff1f</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u82e5 x \u4e3a\u6b63\uff0c\u5219 x \\&amp; -x \u4e3a x \u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\u7684 1 \u3002</p> <p>\u6545\u5f97\u5230\u56de\u6eaf\u65b9\u6cd5\uff1a\u7f16\u53f7\u4e3a i \u7684\u8282\u70b9\uff0c\u5176\u7236\u8282\u70b9\u7f16\u53f7\u4e3a i - (i \\&amp; -i) \u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u7f16\u53f7\u4e3a x + (x \\&amp; -x) \u5219\u4e3a\u8282\u70b9 x \u53f3\u4fa7\u7684\u7b2c\u4e00\u4e2a\u6240\u8868\u5f81\u533a\u95f4\u5305\u542b x \u7684\u8282\u70b9\uff08\u4e0b\u79f0\u201c\u5305\u542b\u8282\u70b9\u201d\uff09\u3002</p> <p>\u57fa\u4e8e\u4e0a\u8ff0\u5206\u6790\uff0c\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u66f4\u65b0\u539f\u59cb\u5e8f\u5217\u4e2d a[i] \u7684\u503c\uff0c\u9664\u66f4\u65b0 b[i+1] \u8fdb\u884c\u66f4\u65b0\u5916\uff0c\u9700\u8981\u540c\u6b65\u66f4\u65b0\u6811\u72b6\u6570\u7ec4\u4e2d\u5bf9\u5e94\u8282\u70b9\u53ca\u5176\u53f3\u4fa7\u6240\u6709\u201c\u5305\u542b\u8282\u70b9\u201d\u7684\u503c\u3002\u5373\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff1a\u524d\u7f00\u548c\u5411\u4e0a\u626b\u63cf\uff0c\u8ddf\u65b0\u503c\u5411\u53f3\u626b\u63cf\u3002</p>"},{"location":"competitive_programming/data_structure/fenwick/#_4","title":"\u8ba8\u8bba","text":"<ul> <li>\u4e0e\u7ebf\u6bb5\u6811\u7684\u533a\u522b</li> </ul> <p>\u5bf9\u4e8e\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u7684\u533a\u522b\uff0c\u4ece\u6811\u72b6\u6570\u7ec4\u7d22\u5f15\u66f4\u65b0\u7684\u65b9\u5f0f\u53ef\u89c1\u7aef\u502a\uff1a</p> <p>BIT\u7684\u7d22\u5f15\u66f4\u65b0\u65b9\u5f0f\u4e3a\u51cf\u53bb\u6216\u52a0\u4e0a\u6700\u4f4e\u4f4d 1 \uff0c\u7ebf\u6bb5\u6811\u7684\u7d22\u5f15\u66f4\u65b0\u65b9\u5f0f\u4e3a\u5de6\u79fb\u6216\u53f3\u79fb 1 \u4f4d\u3002\u8fd9\u5bfc\u81f4\u6811\u72b6\u6570\u7ec4\u7684\u7236\u5b50\u8282\u70b9\u6240\u8868\u5f81\u7684\u533a\u95f4\u6ca1\u6709\u4ea4\u96c6\uff0c\u4e00\u679d\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4e00\u8d77\u6784\u6210\u4e00\u4e2a\u7d22\u5f15\u6240\u51b3\u5b9a\u524d\u7f00\u7684\u5185\u5bb9\uff1b\u800c\u7ebf\u6bb5\u6811\u7684\u7236\u5b50\u8282\u70b9\u4e4b\u95f4\u662f\u6709\u91cd\u5408\u7684\uff0c\u751a\u81f3\u7236\u8282\u70b9 p \u5b58\u50a8\u7684\u503c\u5c31\u662f\u7531\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\uff08p &lt;&lt; 1 \u548c p &lt;&lt; 1 | 1 \uff09\u76f4\u63a5\u51b3\u5b9a\u7684\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6811\u72b6\u6570\u7ec4\u4e0d\u652f\u6301\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff0c\u800c\u7ebf\u6bb5\u6811\u5374\u652f\u6301\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u4e3a\u6b64\u989d\u5916\u4ed8\u51fa\u4e86 O(n) \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002 \u6ce8\uff1a\u6811\u72b6\u6570\u7ec4\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n) \uff0c\u7ebf\u6bb5\u6811\u7684\u7a7a\u95f4\u590d\u6742\u5ea6 O(2n) \u3002</p>"},{"location":"competitive_programming/data_structure/fenwick/#_5","title":"\u6d4b\u8bd5","text":"<p>\u6d4b\u8bd5\u4ee3\u7801\uff1a <pre><code>int main() {\n  BIT&lt;int&gt; bit = BIT&lt;int&gt;({1, 2, 3, 4, 5, 6, 7, 8}, -1);\n  cout &lt;&lt; \"BIT&lt;int&gt; bit = BIT&lt;int&gt;({1, 2, 3, 4, 5, 6, 7, 8}, -1);\" &lt;&lt; endl;\n\n  for (int i = 0; i &lt; 10; i++) {\n    cout &lt;&lt; \"bit.Query(\" &lt;&lt; i &lt;&lt; \"): \" &lt;&lt; bit.Query(i) &lt;&lt; endl;\n  }\n\n  for (int i = 0; i &lt; 10; i++) {\n    for (int j = i; j &lt; 10; j++) {\n      cout &lt;&lt; \"bit.Query(\" &lt;&lt; i &lt;&lt; \", \" &lt;&lt; j &lt;&lt; \"): \" &lt;&lt; bit.Query(i, j)\n           &lt;&lt; endl;\n    }\n  }\n\n  return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>BIT&lt;int&gt; bit = BIT&lt;int&gt;({1, 2, 3, 4, 5, 6, 7, 8}, -1);\nbit.Query(0): 0\nbit.Query(1): 1\nbit.Query(2): 3\nbit.Query(3): 6\nbit.Query(4): 10\nbit.Query(5): 15\nbit.Query(6): 21\nbit.Query(7): 28\nbit.Query(8): 36\nbit.Query(9): -1\nbit.Query(0, 0): 0\nbit.Query(0, 1): 1\nbit.Query(0, 2): 3\nbit.Query(0, 3): 6\nbit.Query(0, 4): 10\nbit.Query(0, 5): 15\nbit.Query(0, 6): 21\nbit.Query(0, 7): 28\nbit.Query(0, 8): 36\nbit.Query(0, 9): -1\nbit.Query(1, 1): 0\nbit.Query(1, 2): 2\nbit.Query(1, 3): 5\nbit.Query(1, 4): 9\nbit.Query(1, 5): 14\nbit.Query(1, 6): 20\nbit.Query(1, 7): 27\nbit.Query(1, 8): 35\nbit.Query(1, 9): -1\nbit.Query(2, 2): 0\nbit.Query(2, 3): 3\nbit.Query(2, 4): 7\nbit.Query(2, 5): 12\nbit.Query(2, 6): 18\nbit.Query(2, 7): 25\nbit.Query(2, 8): 33\nbit.Query(2, 9): -1\nbit.Query(3, 3): 0\nbit.Query(3, 4): 4\nbit.Query(3, 5): 9\nbit.Query(3, 6): 15\nbit.Query(3, 7): 22\nbit.Query(3, 8): 30\nbit.Query(3, 9): -1\nbit.Query(4, 4): 0\nbit.Query(4, 5): 5\nbit.Query(4, 6): 11\nbit.Query(4, 7): 18\nbit.Query(4, 8): 26\nbit.Query(4, 9): -1\nbit.Query(5, 5): 0\nbit.Query(5, 6): 6\nbit.Query(5, 7): 13\nbit.Query(5, 8): 21\nbit.Query(5, 9): -1\nbit.Query(6, 6): 0\nbit.Query(6, 7): 7\nbit.Query(6, 8): 15\nbit.Query(6, 9): -1\nbit.Query(7, 7): 0\nbit.Query(7, 8): 8\nbit.Query(7, 9): -1\nbit.Query(8, 8): -1\nbit.Query(8, 9): -1\nbit.Query(9, 9): -1\n</code></pre></p>"},{"location":"competitive_programming/data_structure/lru_cache/","title":"LRU\u7f13\u5b58","text":""},{"location":"competitive_programming/data_structure/lru_cache/#_1","title":"\u95ee\u9898","text":"<p>\u8bbe\u8ba1\u4e00\u79cd\u952e\u3001\u503c\u5bf9\u7684\u5bb9\u5668\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301 get \u548c set \u64cd\u4f5c\uff1a</p> <ul> <li> <p>Get(key) - \u5982\u679c\u7f13\u5b58\u4e2d\u5b58\u5728 key \uff0c\u5219\u8fd4\u56de\u5176\u5bf9\u5e94\u503c\uff0c\u5426\u5219\u8fd4\u56de -1</p> </li> <li> <p>Set(key, value) - \u5982\u679c key \u5df2\u5b58\u5728\u5219\u66f4\u65b0\u5176\u5bf9\u5e94\u7684\u503c\uff0c\u5426\u5219\u52a0\u5165\u65b0\u7684\u952e\u503c\u5bf9 (key, value) \uff0c\u5982\u679c\u5bb9\u5668\u5df2\u8fbe\u5230\u6700\u5927\u5bb9\u91cf\u5219\u8e22\u51fa\u4e0a\u6b21\u8bbf\u95ee\u8ddd\u79bb\u6700\u8fdc\u7684\u952e\u503c\u5bf9</p> </li> </ul>"},{"location":"competitive_programming/data_structure/lru_cache/#_2","title":"\u5206\u6790","text":"<p>\u7531\u4e8e\u9700\u8981\u523b\u753b\u8bbf\u95ee\u987a\u5e8f\uff0c\u5e76\u4e14\u9700\u8981\u5feb\u901f\u5c06\u5bb9\u5668\u4e2d\u67d0\u4e2a\u5143\u7d20\u79fb\u5230\u5934\u90e8\uff0c\u6545\u53ef\u4ee5\u4f7f\u7528\u952e\u3001\u503c\u5bf9\u7684\u53cc\u5411\u94fe\u8868<code>std::list</code>\u6765\u5b9e\u73b0\u3002</p> <p>\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a<code>std::unordered_map</code>\u6765\u7ef4\u62a4 key \u5230\u94fe\u8868\u8282\u70b9\uff08\u952e\u503c\u5bf9\uff09\u7684\u8fed\u4ee3\u5668\u7684\u54c8\u5e0c\u3002</p>"},{"location":"competitive_programming/data_structure/lru_cache/#_3","title":"\u4ee3\u7801","text":"<pre><code>template &lt;typename T&gt;\nclass LRUCache {\n public:\n  LRUCache(int _capacity, T _find_failure)\n      : capacity(_capacity), find_failure(_find_failure) {}\n\n  T Get(int key) {\n    if (cache_map.find(key) == cache_map.end()) {\n      return this-&gt;find_failure;\n    }\n    cache_list.splice(cache_list.begin(), cache_list, cache_map[key]);\n    return cache_map[key]-&gt;value;\n  }\n\n  void Set(int key, T value) {\n    if (cache_map.find(key) == cache_map.end()) {\n      if (cache_list.size() == capacity) {\n        cache_map.erase(cache_list.back().key);\n        cache_list.pop_back();\n      }\n      cache_list.push_front(CacheNode(key, value));\n      cache_map[key] = cache_list.begin();\n    } else {\n      cache_map[key]-&gt;value = value;\n      cache_list.splice(cache_list.begin(), cache_list, cache_map[key]);\n      cache_map[key] = cache_list.begin();\n    }\n  }\n\n private:\n  struct CacheNode {\n    int key;\n    T value;\n    CacheNode() {}\n    CacheNode(int _key, int _value) : key(_key), value(_value) {}\n  };\n\n  int capacity;\n  T find_failure;\n  list&lt;CacheNode&gt; cache_list;\n  unordered_map&lt;int, typename list&lt;CacheNode&gt;::iterator&gt; cache_map;\n};\n</code></pre> <ul> <li> <p>CacheNode - \u952e\u503c\u5bf9\uff08\u94fe\u8868\u8282\u70b9\uff09</p> </li> <li> <p>cache\\_list - \u5185\u90e8\u94fe\u8868</p> </li> <li> <p>cache\\_map - \u4ece key \u5230\u94fe\u8868 cache\\_list \u8fed\u4ee3\u5668\u7684\u6620\u5c04</p> </li> </ul>"},{"location":"competitive_programming/data_structure/lru_cache/#_4","title":"\u6d4b\u8bd5","text":"<p>\u6d4b\u8bd5\u4ee3\u7801\uff1a <pre><code>using ll = long long;\n\nint main() {\n  LRUCache&lt;ll&gt; lru_cache = LRUCache&lt;ll&gt;(5, -1l);\n\n  for (int i = 0; i &lt; 5; i++) {\n    lru_cache.Set(i, 1l * i);\n    cout &lt;&lt; \"lru_cache.Set(\" &lt;&lt; i &lt;&lt; \", \" &lt;&lt; i &lt;&lt; \")\" &lt;&lt; endl;\n  }\n\n  cout &lt;&lt; \"--------------------\" &lt;&lt; endl;\n  for (int i = 0; i &lt; 5; i++) {\n    ll value = lru_cache.Get(i);\n    cout &lt;&lt; \"lru_cache.Get(\" &lt;&lt; i &lt;&lt; \"): \" &lt;&lt; value &lt;&lt; endl;\n  }\n\n  cout &lt;&lt; \"--------------------\" &lt;&lt; endl;\n  for (int i = 2; i &lt; 7; i++) {\n    lru_cache.Set(i, 1l * i);\n    cout &lt;&lt; \"lru_cache.Set(\" &lt;&lt; i &lt;&lt; \", \" &lt;&lt; i &lt;&lt; \")\" &lt;&lt; endl;\n  }\n\n  cout &lt;&lt; \"--------------------\" &lt;&lt; endl;\n  for (int i = 0; i &lt; 7; i++) {\n    ll value = lru_cache.Get(i);\n    cout &lt;&lt; \"lru_cache.Get(\" &lt;&lt; i &lt;&lt; \"): \" &lt;&lt; value &lt;&lt; endl;\n  }\n\n  return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>lru_cache.Set(0, 0)\nlru_cache.Set(1, 1)\nlru_cache.Set(2, 2)\nlru_cache.Set(3, 3)\nlru_cache.Set(4, 4)\n--------------------\nlru_cache.Get(0): 0\nlru_cache.Get(1): 1\nlru_cache.Get(2): 2\nlru_cache.Get(3): 3\nlru_cache.Get(4): 4\n--------------------\nlru_cache.Set(2, 2)\nlru_cache.Set(3, 3)\nlru_cache.Set(4, 4)\nlru_cache.Set(5, 5)\nlru_cache.Set(6, 6)\n--------------------\nlru_cache.Get(0): -1\nlru_cache.Get(1): -1\nlru_cache.Get(2): 2\nlru_cache.Get(3): 3\nlru_cache.Get(4): 4\nlru_cache.Get(5): 5\nlru_cache.Get(6): 6\n</code></pre></p>"},{"location":"competitive_programming/data_structure/lru_cache/#_5","title":"\u5178\u578b\u9002\u7528\u573a\u666f","text":"<p>\u5982\u5fae\u4fe1\u8868\u60c5\u5305\u5217\u8868\u7b49\u6ee1\u8db3\u7528\u6237\u4e60\u60ef\u6027\u8f93\u5165\u7684\u573a\u666f\u3002</p>"},{"location":"competitive_programming/data_structure/segment_tree/","title":"\u7ebf\u6bb5\u6811","text":"<p>\u76f8\u8f83Fenwick/BIT\uff0c\u7ebf\u6bb5\u6811\u9664\u4e86\u652f\u6301\u5728 O(\\log n) \u65f6\u95f4\u5185\u66f4\u65b0\u6307\u5b9a\u5143\u7d20\u548c\u8ba1\u7b97\u533a\u95f4\u548c\u4ee5\u5916\uff0c\u8fd8\u652f\u6301\u5728 O(\\log n) \u65f6\u95f4\u5185\u8ba1\u7b97\u533a\u95f4\u6700\u503c\uff0c\u4f46\u4e3a\u6b64\u591a\u4ed8\u51fa\u4e86 O(n) \u7684\u7a7a\u95f4\u5f00\u9500\u3002</p>"},{"location":"competitive_programming/data_structure/segment_tree/#_2","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217 a \uff0c\u8981\u6c42\u5728 O(\\log n) \u7684\u65f6\u95f4\u5185\u5b8c\u6210\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li> <p>Add(i, delta) - \u5728\u6307\u5b9a\u9879 a[i] \u4e0a\u589e\u52a0 delta</p> </li> <li> <p>QuerySum(l, r) - \u67e5\u8be2\u4f4d\u4e8e\u533a\u95f4 [l, r) \u7684\u5143\u7d20\u548c</p> </li> <li> <p>QueryMax(l, r) - \u67e5\u8be2\u4f4d\u4e8e\u533a\u95f4 [l, r) \u7684\u5143\u7d20\u6700\u5927\u503c</p> </li> <li> <p>QueryMin(l, r) - \u67e5\u8be2\u4f4d\u4e8e\u533a\u95f4 [l, r) \u7684\u5143\u7d20\u6700\u5c0f\u503c</p> </li> </ul>"},{"location":"competitive_programming/data_structure/segment_tree/#_3","title":"\u4ee3\u7801","text":"<pre><code>template &lt;typename T&gt;\nclass SGT {\n public:\n  SGT() {}\n\n  SGT(int _sz) : sz(_sz) {\n    sgt_sum = vector&lt;T&gt;(sz &lt;&lt; 1, 0);\n    sgt_max = vector&lt;T&gt;(sz &lt;&lt; 1, 0);\n    sgt_min = vector&lt;T&gt;(sz &lt;&lt; 1, 0);\n  }\n\n  SGT(vector&lt;T&gt; arr) : sz((int)arr.size()) {\n    sgt_sum = vector&lt;T&gt;(sz &lt;&lt; 1, 0);\n    sgt_max = vector&lt;T&gt;(sz &lt;&lt; 1, 0);\n    sgt_min = vector&lt;T&gt;(sz &lt;&lt; 1, 0);\n    for (int i = 0; i &lt; sz; i++) {\n      this-&gt;Add(i, arr[i]);\n    }\n  }\n\n  T QuerySum(int l, int r) {\n    T ans = 0;\n    for (l += sz, r += sz; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n      if (l &amp; 1) ans += sgt_sum[l++];\n      if (r &amp; 1) ans += sgt_sum[--r];\n    }\n    return ans;\n  }\n\n  T QueryMax(int l, int r) {\n    T ans = numeric_limits&lt;T&gt;::min();\n    for (l += sz, r += sz; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n      if (l &amp; 1) ans = max(ans, sgt_max[l++]);\n      if (r &amp; 1) ans = max(ans, sgt_max[--r]);\n    }\n    return ans;\n  }\n\n  T QueryMin(int l, int r) {\n    T ans = numeric_limits&lt;T&gt;::max();\n    for (l += sz, r += sz; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {\n      if (l &amp; 1) ans = min(ans, sgt_min[l++]);\n      if (r &amp; 1) ans = min(ans, sgt_min[--r]);\n    }\n    return ans;\n  }\n\n  void Add(int x, T val) {\n    x += sz;\n    for (sgt_sum[x] += val, sgt_max[x] += val, sgt_min[x] += val; x &gt; 1;\n         x &gt;&gt;= 1) {\n      sgt_sum[x &gt;&gt; 1] = sgt_sum[x] + sgt_sum[x ^ 1];\n      sgt_max[x &gt;&gt; 1] = max(sgt_max[x], sgt_max[x ^ 1]);\n      sgt_min[x &gt;&gt; 1] = min(sgt_min[x], sgt_min[x ^ 1]);\n    }\n  }\n\n private:\n  int sz;\n  vector&lt;T&gt; sgt_sum;\n  vector&lt;T&gt; sgt_max;\n  vector&lt;T&gt; sgt_min;\n};\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>int main() {\n  SGT&lt;int&gt; bit = SGT&lt;int&gt;(10);\n\n  for (int i = 0; i &lt; 10; i++) {\n    bit.Add(i, i * i);\n  }\n\n  cout &lt;&lt; \"Sum of a[2, 5) shoud be 29, result: \" &lt;&lt; bit.QuerySum(2, 5) &lt;&lt; endl;\n  cout &lt;&lt; \"Max of a[2, 5) shoud be 16, result: \" &lt;&lt; bit.QueryMax(2, 5) &lt;&lt; endl;\n  cout &lt;&lt; \"Min of a[2, 5) shoud be 4, result: \" &lt;&lt; bit.QueryMin(2, 5) &lt;&lt; endl;\n\n  bit.Add(7, -13);\n\n  cout &lt;&lt; \"Sum of a[4, 9] shoud be 177, result: \" &lt;&lt; bit.QuerySum(4, 9) &lt;&lt; endl;\n  cout &lt;&lt; \"Max of a[4, 9] shoud be 64, result: \" &lt;&lt; bit.QueryMax(4, 9) &lt;&lt; endl;\n  cout &lt;&lt; \"Min of a[4, 9] shoud be 16, result: \" &lt;&lt; bit.QueryMin(4, 9) &lt;&lt; endl;\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>Sum of a[2, 5) shoud be 29, result: 29\nMax of a[2, 5) shoud be 16, result: 16\nMin of a[2, 5) shoud be 4, result: 4\nSum of a[4, 9] shoud be 177, result: 177\nMax of a[4, 9] shoud be 64, result: 64\nMin of a[4, 9] shoud be 16, result: 16\n</code></pre>"},{"location":"competitive_programming/data_structure/segment_tree/#_4","title":"\u7b97\u6cd5","text":"<p>\u7ebf\u6bb5\u6811\u662f\u4e00\u9897\u6709\u5947\u6570\u4e2a\u8282\u70b9\u7684\u7684\u5b8c\u5168\u4e8c\u53c9\u6811:</p> <p></p> <p>\u7531\u4e8e\u7ebf\u6bb5\u6811\u7684\u540e\u534a\u6bb5\uff08\u53f6\u8282\u70b9\uff09\u5b58\u50a8\u4e86\u539f\u6570\u7ec4\u7684\u5185\u5bb9\uff0c\u6545\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u65e0\u8bba\u5efa\u7acb\u3001\u6c42\u548c\u6216\u8005\u66f4\u65b0\u503c\u90fd\u662f\u5148\u5b9a\u4f4d\u5230\u53f6\u8282\u70b9\u7136\u540e\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u533a\u95f4\u548c\u64cd\u4f5c\u662f\u5148\u5c06\u8868\u5f81\u5de6\u53f3\u7aef\u70b9\u6307\u9488\u5b9a\u4f4d\u5728\u53f6\u8282\u70b9\u76f8\u5e94\u4f4d\u7f6e\uff0c\u7136\u540e\u4e00\u6b65\u6b65\u4e0a\u79fb\u7d27\u7f29\uff0c\u8fc7\u7a0b\u6bcf\u5f53\u7aef\u70b9\u51fa\u73b0\u5947\u6570\u5219\u9700\u8981\u201c\u63a5\u6f0f\u201d\u2014\u2014\u5176\u4e2d\u5de6\u7aef\u662f\u95ed\u533a\u95f4\u6240\u4ee5\u5148\u52a0\u518d\u7f29\uff0c\u53f3\u7aef\u662f\u5f00\u533a\u95f4\u6240\u4ee5\u5148\u7f29\u518d\u52a0\u3002</p>"},{"location":"competitive_programming/data_structure/segment_tree/#_5","title":"\u8ba8\u8bba","text":"<ul> <li>\u4e3a\u4ec0\u4e48\u6570\u7ec4\u8868\u793a\u7684\u4e8c\u53c9\u6811\u4e00\u822c\u4e0b\u6807\u4ece 1 \u5f00\u59cb\uff0c\u800c\u4e0d\u662f 0</li> </ul> <p>\u56e0\u4e3a\u82e5\u4ece 0 \u5f00\u59cb\uff0c\u5219\u7236\u8282\u70b9\u7684\u7d22\u5f15\u89c4\u5219\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u800c\u4ece 1 \u5f00\u59cb\u5219\u4e0d\u7528\u3002\u5177\u4f53\u5730\uff0c\u4ece\u4e0a\u81f3\u4e0b\uff0c\u4ece\u5de6\u81f3\u53f3\u5bf9\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\u7f16\u53f7\uff0c\u5982\u6839\u8282\u70b9\u7f16\u53f7\u4e3a 1\uff0c\u5219\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u548c\u7236\u4eb2\u5206\u522b\u4e3a p &lt;&lt; 1, p &lt;&lt; 1 | 1, p &gt;&gt; 1\uff0c\u8282\u70b9\u4e4b\u95f4\u7684\u8f6c\u79fb\u53ef\u4ee5\u53ea\u901a\u8fc7\u4f4d\u8fd0\u7b97\u5b8c\u6210\u3002\u7136\u800c\u82e5\u6839\u8282\u70b9\u4ece\u5f00\u59cb\u7f16\u53f7\uff0c\u5219\u8282\u70b9p\u7684\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3a 2p + 1, 2p + 2\uff0c\u7236\u4eb2\u7684\u7d22\u5f15\u4e0e p \u7684\u5947\u5076\u6027\u6709\u5173\uff0c\u7d22\u5f15\u8f6c\u79fb\u56e0\u800c\u590d\u6742\u5f97\u591a\u3002</p>"},{"location":"competitive_programming/data_structure/skiplist/","title":"\u8df3\u8868","text":""},{"location":"competitive_programming/data_structure/skiplist/#_2","title":"\u95ee\u9898","text":"<p>\u5b9e\u73b0\u4e00\u79cd\u96c6\u5408\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a 1. \u63d2\u5165 / Insert 2. \u5220\u9664 / Delete 3. \u67e5\u627e / Search 4. \u6309\u5e8f\u904d\u5386</p> <p>\u663e\u7136\uff0c \u5e73\u8861\u6811\uff08\u5982\u7ea2\u9ed1\u6811\uff09\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u7ec4\u7ec7\u6570\u636e\u53ef\u4ee5\u6253\u6ee1\u8db3\u4e0a\u8ff0\u8981\u6c42\uff0c\u589e\u3001\u5220\u3001\u67e5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(\\log n)\uff0c\u800c\u987a\u5e8f\u8fed\u4ee3\u989d\u590d\u6742\u5ea6\u4e3a O(1) \u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4ec0\u4e48\u601d\u8def\uff1f</p>"},{"location":"competitive_programming/data_structure/skiplist/#_3","title":"\u8df3\u8868","text":"<p>\u901a\u8fc7\u5728\u6709\u5e8f\u94fe\u8868\u4e0a\u589e\u52a0\u82e5\u5e72\u7ea7\u7d22\u5f15\u5c42\u5b9e\u73b0\u4e0a\u8ff0\u9700\u6c42\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u5728\u6709\u5e8f\u94fe\u8868\u4e0a\u589e\u52a0\u7ed9\u5b9a\u5c42\u6570\u4e0a\u9650\u7684\u7d22\u5f15\uff0c\u5c06\u90e8\u5206\u4f4d\u4e8e\u4f4e\u5c42\u7684\u8282\u70b9\u6309\u7167\u6982\u7387\u4e0a\u79fb\u5f62\u6210\u5bf9\u4e0b\u7ea7\u7684\u7d22\u5f15\uff0c\u7531\u4e8e\u968f\u673a\u6027\u8df3\u8868\u7684\u6700\u7ec8\u5f62\u6001\u5f80\u5f80\u662f\u4e0d\u552f\u4e00\u7684\u3002</p>"},{"location":"competitive_programming/data_structure/skiplist/#c","title":"C++\u5b9e\u73b0","text":"<p>\u5b9e\u73b0\u6210\u5458\u4e3a<code>int</code>\u578b\u7684\u8df3\u8868<code>SkipList</code>\u7c7b\uff1a <pre><code>class Node {\n   public:\n    int key;\n    // Array to hold pointers to node of different level\n    Node **forward;\n    Node(int, int);\n};\n\nNode::Node(int key, int level) {\n    this-&gt;key = key;\n    // Allocate memory to forward\n    forward = new Node *[level + 1];\n    // Fill forward array with 0(NULL)\n    memset(forward, 0, sizeof(Node *) * (level + 1));\n};\n\nclass SkipList {\n   public:\n    SkipList(int, float);\n    friend ostream &amp;operator&lt;&lt;(ostream &amp;out, const SkipList &amp;src);\n\n    void Insert(int);\n    void Delete(int);\n    bool Search(int);\n\n   private:\n    int RandomLevel();\n    Node *CreateNode(int, int);\n\n    // Maximum level for this skip list\n    int MAXLVL;\n    // P is the fraction of the nodes with level\n    // i pointers also having level i+1 pointers\n    float P;\n    // current level of skip list\n    int level;\n    // pointer to header node\n    Node *header;\n};\n\nSkipList::SkipList(int MAXLVL, float P) {\n    this-&gt;MAXLVL = MAXLVL;\n    this-&gt;P = P;\n    level = 0;\n    // create header node and initialize key to -1\n    header = new Node(-1, MAXLVL);\n};\n\nint SkipList::RandomLevel() {\n    float r = (float)rand() / RAND_MAX;\n    int lvl = 0;\n    while (r &lt; P &amp;&amp; lvl &lt; MAXLVL) {\n        lvl++;\n        r = (float)rand() / RAND_MAX;\n    }\n    return lvl;\n};\n\nNode *SkipList::CreateNode(int key, int level) {\n    Node *n = new Node(key, level);\n    return n;\n};\n\nvoid SkipList::Insert(int key) {\n    Node *current = header;\n\n    // create update array and initialize it\n    Node *update[MAXLVL + 1];\n    memset(update, 0, sizeof(Node *) * (MAXLVL + 1));\n\n    /*    start from highest level of skip list\n        move the current pointer forward while key\n        is greater than key of node next to current\n        Otherwise inserted current in update and\n        move one level down and continue search\n    */\n    for (int i = level; i &gt;= 0; i--) {\n        while (current-&gt;forward[i] != NULL &amp;&amp; current-&gt;forward[i]-&gt;key &lt; key)\n            current = current-&gt;forward[i];\n        update[i] = current;\n    }\n\n    /* reached level 0 and forward pointer to\n       right, which is desired position to\n       insert key.\n    */\n    current = current-&gt;forward[0];\n\n    /* if current is NULL that means we have reached\n       to end of the level or current's key is not equal\n       to key to insert that means we have to insert\n       node between update[0] and current node */\n    if (current == NULL || current-&gt;key != key) {\n        // Generate a random level for node\n        int rlevel = RandomLevel();\n\n        /* If random level is greater than list's current\n           level (node with highest level inserted in\n           list so far), initialize update value with pointer\n           to header for further use */\n        if (rlevel &gt; level) {\n            for (int i = level + 1; i &lt; rlevel + 1; i++) update[i] = header;\n\n            // Update the list current level\n            level = rlevel;\n        }\n\n        // create new node with random level generated\n        Node *n = CreateNode(key, rlevel);\n\n        // insert node by rearranging pointers\n        for (int i = 0; i &lt;= rlevel; i++) {\n            n-&gt;forward[i] = update[i]-&gt;forward[i];\n            update[i]-&gt;forward[i] = n;\n        }\n        // cout &lt;&lt; \"Successfully Inserted key \" &lt;&lt; key &lt;&lt; \"\\n\";\n    }\n};\n\nvoid SkipList::Delete(int key) {\n    Node *current = header;\n\n    // create update array and initialize it\n    Node *update[MAXLVL + 1];\n    memset(update, 0, sizeof(Node *) * (MAXLVL + 1));\n\n    /*    start from highest level of skip list\n        move the current pointer forward while key\n        is greater than key of node next to current\n        Otherwise inserted current in update and\n        move one level down and continue search\n    */\n    for (int i = level; i &gt;= 0; i--) {\n        while (current-&gt;forward[i] != NULL &amp;&amp; current-&gt;forward[i]-&gt;key &lt; key)\n            current = current-&gt;forward[i];\n        update[i] = current;\n    }\n\n    /* reached level 0 and forward pointer to\n       right, which is possibly our desired node.*/\n    current = current-&gt;forward[0];\n\n    // If current node is target node\n    if (current != NULL and current-&gt;key == key) {\n        /* start from lowest level and rearrange\n           pointers just like we do in singly linked list\n           to remove target node */\n        for (int i = 0; i &lt;= level; i++) {\n            /* If at level i, next node is not target\n               node, break the loop, no need to move\n              further level */\n            if (update[i]-&gt;forward[i] != current) break;\n\n            update[i]-&gt;forward[i] = current-&gt;forward[i];\n        }\n\n        // Remove levels having no elements\n        while (level &gt; 0 &amp;&amp; header-&gt;forward[level] == 0) level--;\n        // cout &lt;&lt; \"Successfully deleted key \" &lt;&lt; key &lt;&lt; \"\\n\";\n    }\n};\n\n// Search for element in skip list\nbool SkipList::Search(int key) {\n    Node *current = header;\n\n    /*    start from highest level of skip list\n        move the current pointer forward while key\n        is greater than key of node next to current\n        Otherwise inserted current in update and\n        move one level down and continue search\n    */\n    for (int i = level; i &gt;= 0; i--) {\n        while (current-&gt;forward[i] &amp;&amp; current-&gt;forward[i]-&gt;key &lt; key)\n            current = current-&gt;forward[i];\n    }\n\n    /* reached level 0 and advance pointer to\n       right, which is possibly our desired node*/\n    current = current-&gt;forward[0];\n\n    // If current node have key equal to\n    // search key, we have found our target node\n    if (current and current-&gt;key == key)\n        return true;\n    else\n        return false;\n};\n\n// Display SkipList by overriding '&lt;&lt;' operator\nostream &amp;operator&lt;&lt;(ostream &amp;out, const SkipList &amp;src) {\n    cout &lt;&lt; \"\\n*****Skip List*****\"\n         &lt;&lt; \"\\n\";\n    for (int i = 0; i &lt;= src.level; i++) {\n        Node *node = src.header-&gt;forward[i];\n        cout &lt;&lt; \"Level \" &lt;&lt; i &lt;&lt; \": \";\n        while (node != NULL) {\n            cout &lt;&lt; node-&gt;key &lt;&lt; \" \";\n            node = node-&gt;forward[i];\n        }\n        cout &lt;&lt; \"\\n\";\n    }\n    return out;\n}\n</code></pre></p> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a <pre><code>int main() {\n    // Seed random number generator\n    srand((unsigned)time(0));\n\n    // create SkipList object with MAXLVL and P\n    SkipList lst(3, 0.5);\n\n    lst.Insert(3);\n    lst.Insert(6);\n    lst.Insert(7);\n    lst.Insert(9);\n    lst.Insert(12);\n    lst.Insert(19);\n    lst.Insert(17);\n    lst.Insert(26);\n    lst.Insert(21);\n    lst.Insert(25);\n    cout &lt;&lt; lst &lt;&lt; endl;\n\n    // Search for node 19\n    cout &lt;&lt; \"search 19: \";\n    cout &lt;&lt; lst.Search(19) &lt;&lt; endl;\n\n    // Delete node 19\n    lst.Delete(19);\n    cout &lt;&lt; lst &lt;&lt; endl;\n\n    // Search for node 19\n    cout &lt;&lt; \"search 19: \";\n    cout &lt;&lt; lst.Search(19) &lt;&lt; endl;\n}\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>*****Skip List*****\nLevel 0: 3 6 7 9 12 17 19 21 25 26 \nLevel 1: 3 7 9 19 21 \nLevel 2: 19 \n\nsearch 19: 1\n\n*****Skip List*****\nLevel 0: 3 6 7 9 12 17 21 25 26 \nLevel 1: 3 7 9 21 \n\nsearch 19: 0\n</code></pre></p>"},{"location":"competitive_programming/data_structure/union_find/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"competitive_programming/data_structure/union_find/#_2","title":"\u95ee\u9898","text":"<p>\u5bf9\u4e8e\u6709 n \u4e2a\u8282\u70b9\u7684\u56fe\uff0c\u8bbe\u8ba1\u4e00\u79cd\u7ef4\u62a4\u52a8\u6001\u8fde\u901a\u6027\u95ee\u9898\u7684\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li> <p>Find(i) - \u67e5\u8be2\u7f16\u53f7\u4e3a i \u7684\u8282\u70b9\u6240\u5c5e\u7684\u8fde\u901a\u5206\u91cf</p> </li> <li> <p>Union(i, j) - \u8fde\u63a5\u7f16\u53f7\u4e3a i \u548c j \u7684\u8282\u70b9\uff08\u4e8c\u8005\u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u8fde\u901a\uff09</p> </li> </ul>"},{"location":"competitive_programming/data_structure/union_find/#_3","title":"\u4ee3\u7801","text":"<pre><code>class UnionFind {\n public:\n  UnionFind(int _size) : size(_size) {\n    pre = vector&lt;int&gt;(size);\n    for (int i = 0; i &lt; size; i++) {\n      pre[i] = i;\n    }\n  }\n\n  int Find(int x) {\n    // Find root\n    int root = x;\n    while (root != pre[root]) {\n      root = pre[root];\n    }\n    // Path compress\n    while (x != root) {\n      int temp = pre[x];\n      pre[x] = root;\n      x = temp;\n    }\n    return root;\n  }\n\n  void Join(int x, int y) {\n    int root_x = Find(x), root_y = Find(y);\n    if (root_x != root_y) {\n      pre[root_x] = root_y;\n    }\n  }\n\n  int Size() { return size; }\n\n private:\n  int size;\n  vector&lt;int&gt; pre;\n};\n</code></pre>"},{"location":"competitive_programming/data_structure/union_find/#_4","title":"\u7b97\u6cd5","text":"<p>\u6570\u7ec4 pre \u8bb0\u5f55\u4e86\u6bcf\u4e2a\u8282\u70b9\u7684\u524d\u5bfc\u8282\u70b9\u3002</p> <p>\u5e76\u67e5\u96c6\u6bcf\u6b21<code>Union</code>\u64cd\u4f5c\u968f\u673a\u5c06\u4e00\u4e2a\u95e8\u6d3e\u7684\u638c\u95e8\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u95e8\u6d3e\u638c\u95e8\u7684\u76f4\u63a5\u4e0a\u7ea7\uff1b\u800c\u6bcf\u6b21<code>Find</code>\u64cd\u4f5c\u5728\u9010\u5c42\u5411\u4e0a\u627e\u5230\u638c\u95e8\u4e4b\u540e\u53c8\u5c06\u8def\u5f84\u4e2d\u6240\u6709\u8fc7\u7a0b\u8282\u70b9\u90fd\u6539\u6210\u638c\u95e8\u7684\u76f4\u63a5\u4e0b\u7ea7\u3002\u6240\u4ee5\u8bf4\uff0c\u5f53<code>Union</code>\u64cd\u4f5c\u7684\u589e\u591a\u4f1a\u5bfc\u81f4\u6811\u72b6\u6570\u636e\u7ed3\u6784\u8d8b\u4e8e\u4e0d\u5e73\u8861\uff0c\u800c<code>Find</code>\u64cd\u4f5c\u5f88\u591a\u7684\u65f6\u5019\uff0c\u5c06\u6700\u7ec8\u5bfc\u81f4\u6240\u6709\u8282\u70b9\u90fd\u4ee5\u638c\u95e8\u4e3a\u76f4\u63a5\u4e0a\u7ea7\uff08\u6c47\u62a5\u8ddd\u79bb\u53d8\u6210 1 \uff09\u3002 </p>"},{"location":"competitive_programming/graph_theory/bipartite_matching/","title":"\u4e8c\u5206\u56fe\u5339\u914d","text":"<p>\u672c\u9875\u9762\u90e8\u5206\u5b9a\u4e49\u5f15\u81ea\u672c\u79d1\u540c\u5b66renfei\u7684\u4e2a\u4eba\u535a\u5ba2\u3002</p>"},{"location":"competitive_programming/graph_theory/bipartite_matching/#_2","title":"\u95ee\u9898\uff08\u6700\u5927\u4e8c\u5206\u5339\u914d\uff09","text":"<p>\u7ed9\u5b9a\u4e8c\u5206\u56fe\uff0c\u6c42\u89e3\u5176\u6700\u5927\u5339\u914d\u7684\u5339\u914d\u8fb9\u6570</p>"},{"location":"competitive_programming/graph_theory/bipartite_matching/#_3","title":"\u4e8c\u5206\u56fe","text":"<p>\u4e8c\u5206\u56fe G=(V,E) \u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5176\u9876\u70b9\u96c6 V \u53ef\u5206\u89e3\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6 A, B\uff0c\u5bf9 \\forall e=(a, b) \\in E \u6709 a \\in A, b \\in B</p>"},{"location":"competitive_programming/graph_theory/bipartite_matching/#_4","title":"\u5339\u914d","text":"<p>\u5728\u56fe\u8bba\u4e2d\uff0c\u4e00\u4e2a\u300c\u5339\u914d\u300d\uff08matching\uff09\u662f\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u6ca1\u6709\u516c\u5171\u9876\u70b9\u3002</p> <ul> <li> <p>\u6700\u5927\u5339\u914d\uff1a\u4e00\u4e2a\u56fe\u7684\u6240\u6709\u5339\u914d\u4e2d\uff0c\u6240\u542b\u5339\u914d\u53d8\u6570\u6700\u591a\u7684\u5339\u914d\uff0c\u5219\u79f0\u5176\u4e3a\u4e00\u4e2a\u6700\u5927\u5339\u914d</p> </li> <li> <p>\u5b8c\u7f8e\u5339\u914d\uff1a\u5982\u679c\u4e00\u4e2a\u56fe\u7684\u6240\u6709\u5339\u914d\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u90fd\u662f\u5339\u914d\u70b9\uff0c\u5219\u79f0\u5176\u4e3a\u4e00\u4e2a\u5b8c\u7f8e\u5339\u914d</p> </li> </ul>"},{"location":"competitive_programming/graph_theory/bipartite_matching/#_5","title":"\u7b97\u6cd5","text":"<p>\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u95ee\u9898\u5728CLRS\u7684\u89e3\u6cd5\u662f\u7531\u6700\u5927\u7f51\u7edc\u6d41\u7684\u7b97\u6cd5\u89c4\u7ea6\u5f97\u5230\u3002\u4f46\u4e00\u79cd\u66f4\u7b80\u4fbf\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u4e0d\u65ad\u5bfb\u627e \u589e\u5e7f\u8def \u7684\u65b9\u5f0f\u5f97\u5230\uff0c\u8fd9\u79cd\u6c42\u6700\u5927\u5339\u914d\u7684\u7b97\u6cd5\u88ab\u79f0\u4e3a\u5308\u7259\u5229\u7b97\u6cd5\u3002</p>"},{"location":"competitive_programming/graph_theory/bipartite_matching/#_6","title":"\u4ea4\u66ff\u8def\u4e0e\u589e\u5e7f\u8def","text":"<ul> <li> <p>\u4ea4\u66ff\u8def\uff1a\u4ece\u4e00\u4e2a\u672a\u5339\u914d\u70b9\u51fa\u53d1\uff0c\u4f9d\u6b21\u7ecf\u8fc7\u975e\u5339\u914d\u8fb9\u3001\u5339\u914d\u8fb9\u3001\u975e\u5339\u914d\u8fb9\u2026\u5f62\u6210\u7684\u8def\u5f84\u53eb\u4ea4\u66ff\u8def\u3002</p> </li> <li> <p>\u589e\u5e7f\u8def\uff1a\u4ece\u4e00\u4e2a\u672a\u5339\u914d\u70b9\u51fa\u53d1\uff0c\u8d70\u4ea4\u66ff\u8def\uff0c\u5982\u679c\u9014\u5f84\u53e6\u4e00\u4e2a\u672a\u5339\u914d\u70b9\uff08\u51fa\u53d1\u7684\u70b9\u4e0d\u7b97\uff09\uff0c\u5219\u8fd9\u6761\u4ea4\u66ff\u8def\u79f0\u4e3a\u589e\u5e7f\u8def\uff08agumenting path\uff09</p> </li> </ul> <p>\u589e\u5e7f\u8def\u6709\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\uff1a\u975e\u5339\u914d\u8fb9\u6bd4\u5339\u914d\u8fb9\u591a\u4e00\u6761\u3002\u56e0\u6b64\uff0c\u7814\u7a76\u589e\u5e7f\u8def\u7684\u610f\u4e49\u662f\u6539\u8fdb\u5339\u914d\u3002\u53ea\u8981\u628a\u589e\u5e7f\u8def\u4e2d\u7684\u5339\u914d\u8fb9\u548c\u975e\u5339\u914d\u8fb9\u7684\u8eab\u4efd\u4ea4\u6362\u5373\u53ef\u3002\u7531\u4e8e\u4e2d\u95f4\u7684\u5339\u914d\u8282\u70b9\u4e0d\u5b58\u5728\u5176\u4ed6\u76f8\u8fde\u7684\u5339\u914d\u8fb9\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u4e0d\u4f1a\u7834\u574f\u5339\u914d\u7684\u6027\u8d28\u3002\u4ea4\u6362\u540e\uff0c\u56fe\u4e2d\u7684\u5339\u914d\u8fb9\u6570\u76ee\u6bd4\u539f\u6765\u591a\u4e86 1 \u6761\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u505c\u5730\u627e\u589e\u5e7f\u8def\u6765\u589e\u52a0\u5339\u914d\u4e2d\u7684\u5339\u914d\u8fb9\u548c\u5339\u914d\u70b9\u3002\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u65f6\uff0c\u8fbe\u5230\u6700\u5927\u5339\u914d\uff08\u8fd9\u662f\u589e\u5e7f\u8def\u5b9a\u7406\uff09\u3002\u5308\u7259\u5229\u7b97\u6cd5\u6b63\u662f\u8fd9\u4e48\u505a\u7684\u3002</p>"},{"location":"competitive_programming/graph_theory/bipartite_matching/#_7","title":"\u4ee3\u7801","text":"<pre><code>class Match {\n   public:\n    Match(int _n, int _m) : n(_n), m(_m) {\n        assert(0 &lt;= n &amp;&amp; 0 &lt;= m);\n        g.resize(n);\n    }\n\n    void Add(int from, int to) {\n        assert(0 &lt;= from &amp;&amp; from &lt;= n &amp;&amp; 0 &lt;= to &amp;&amp; to &lt;= m);\n        g[from].push_back(to);\n    }\n\n    int MaxMatchNum() {\n        int res = 0, iter = 0;\n        vector&lt;int&gt; pa(n, -1), pb(m, -1), was(n, 0);\n\n        while (1) {\n            iter++;\n            int add = 0;\n            function&lt;bool(int)&gt; Dfs = [&amp;](int v) {  // Find an augmenting path starting from v\n                was[v] = iter;\n                for (int u : g[v])\n                    if (pb[u] == -1) {\n                        pa[v] = u;\n                        pb[u] = v;\n                        return true;\n                    }\n                for (int u : g[v])\n                    if (was[pb[u]] != iter &amp;&amp; Dfs(pb[u])) {\n                        pa[v] = u;\n                        pb[u] = v;\n                        return true;\n                    }\n                return false;\n            };\n\n            for (int i = 0; i &lt; n; i++) if (pa[i] == -1 &amp;&amp; Dfs(i)) add++;\n            if (add == 0) break;\n            res += add;\n        }\n        return res;\n    }\n\n   private:\n    int n, m;\n    vector&lt;vector&lt;int&gt;&gt; g;\n};\n</code></pre> <ul> <li> <p>n, m - \u4e8c\u5206\u56fe\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u9876\u70b9\u96c6\u7684\u9876\u70b9\u6570</p> </li> <li> <p>g - \u4e8c\u5206\u56fe</p> </li> <li> <p>res - \u5f53\u524d\u5339\u914d\u6570</p> </li> <li> <p>pa - A \u4e2d\u9876\u70b9\u7684\u5339\u914d\u5bf9\u8c61\uff0c\u5931\u914d\u4e3a -1</p> </li> <li> <p>pb - B \u4e2d\u9876\u70b9\u7684\u5339\u914d\u5bf9\u8c61\uff0c\u5931\u914d\u4e3a -1</p> </li> <li> <p>iter - \u5f53\u524d\u8fed\u4ee3\u6b21\u6570</p> </li> <li> <p>was - A \u4e2d\u9876\u70b9\u6700\u8fd1\u88ab\u4fee\u6539\u7684\u8fed\u4ee3\u8f6e\u6b21\uff08\u5b9e\u73b0\u4e2d\u914d\u5408iter\u7528\u4e8e\u5bfb\u627e\u5f53\u524d\u8f6e\u6b21\u4e2d\u672a\u88ab\u4fee\u6539\u7684\u70b9\uff0c\u907f\u514d\u589e\u5e7f\u8def\u627e\u5230\u5df2\u7ecf\u88ab\u6539\u53d8\u7684\u70b9\u4e0a\uff09</p> </li> </ul>"},{"location":"competitive_programming/graph_theory/bipartite_matching/#_8","title":"\u8ba8\u8bba","text":"<p>Q: \u4e0a\u8ff0\u5b9e\u73b0\u4e2d\u6bcf\u6b21\u8fed\u4ee3\u90fd\u4ece\u5de6\u4fa7\u5f00\u59cb\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u8fd9\u6837\u6709\u6ca1\u6709\u53ef\u80fd\u6f0f\u6389\u4ece\u53f3\u4fa7\u5f00\u59cb\u7684\u589e\u5e7f\u8def\u5462\uff1f A: \u4e0d\u4f1a\uff0c\u56e0\u4e3a\u589e\u5e7f\u8def\u7684\u957f\u5ea6\u5fc5\u7136\u662f\u5947\u6570\u8df3\uff0c\u8fd9\u5bfc\u81f4\u8d77\u70b9\u7ec8\u70b9\u5fc5\u7136\u4f4d\u4e8e\u5206\u522b\u4f4d\u4e8e\u5de6\u53f3\u4e24\u4fa7\uff0c\u7531\u4e8c\u5206\u56fe\u7684\u65e0\u5411\u6027\uff0c\u4e0d\u59a8\u53d6\u5de6\u4fa7\u70b9\u4e3a\u8d77\u70b9\u3002</p>"},{"location":"competitive_programming/graph_theory/dijkstra/","title":"\u5355\u6e90\u6700\u77ed\u8def","text":""},{"location":"competitive_programming/graph_theory/dijkstra/#_2","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u5e26\u975e\u8d1f\u6743\u7684\u6709\u5411\u56fe g \u548c\u6e90\u9876\u70b9 s\uff0c\u6c42\u4eces\u51fa\u53d1\u5230\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002</p>"},{"location":"competitive_programming/graph_theory/dijkstra/#_3","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int INF = 2e9;\nconst int maxn = 10;\n\nint n;\nint g[maxn][maxn];\n\nbool vis[maxn];\nint dis[maxn];\nint pre[maxn];\n\nvoid Dijkstra(int s) {\n    for (int i = 0; i &lt; n; i++) {   // Init.\n        dis[i] = g[s][i];\n        vis[i] = i == s ? true : false;\n        pre[i] = dis[i] == INF ? -1 : s;\n    }\n\n    for (int i = 0; i &lt; n - 1; i++) {   // n - 1 steps.\n        int mn = INF;\n        int u = s;\n        for (int j = 0; j &lt; n; j++)     // Find the closest vertex u can be reached from s.\n            if (!vis[j] &amp;&amp; dis[j] &lt; mn)\n                u = j, mn = dis[j];\n        vis[u] = true;\n        for (int j = 0; j &lt; n; j++)     // Update distance according to u\n            if (!vis[j] &amp;&amp; g[u][j] &lt; INF)\n                if (dis[u] + g[u][j] &lt; dis[j])\n                    dis[j] = dis[u] + g[u][j], pre[j] = u;\n    }\n}\n</code></pre> <ul> <li> <p>g - \u90bb\u63a5\u77e9\u9635</p> </li> <li> <p>n - \u9876\u70b9\u6570\u91cf</p> </li> <li> <p>vis - \u5df2\u8bbf\u95ee\u9876\u70b9\u6807\u8bb0\uff08\u5df2\u8bbf\u95ee\u9876\u70b9\u96c6\u5408 U \uff09</p> </li> <li> <p>dis - \u6e90\u70b9 s \u5230\u5176\u4ed6\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6</p> </li> <li> <p>pre - \u6e90\u70b9 s \u5230\u5176\u4ed6\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u524d\u9a71\u7ed3\u70b9\uff08\u7528\u4e8e\u751f\u6210\u5177\u4f53\u8def\u5f84\uff09</p> </li> </ul>"},{"location":"competitive_programming/graph_theory/dijkstra/#_4","title":"\u7b97\u6cd5","text":"<p>Dijkstra\u7b97\u6cd5\u603b\u662f\u9009\u62e9\u5269\u4f59\u70b9\u96c6\u4e2d\u6700\u8fd1\u7684\u9876\u70b9\u52a0\u5165\u5230\u5df2\u8bbf\u95ee\u70b9\u96c6\uff0c\u5c5e\u4e8e\u8d2a\u5fc3\u6cd5\uff0c\u6b32\u8bc1\u660e\u5176\u6b63\u786e\u6027\u5373\u662f\u8bc1\u660e\u8d2a\u5fc3\u8fc7\u7a0b\u6bcf\u4e00\u6b65\u7684\u5c40\u90e8\u6700\u4f18\u5728\u8be5\u95ee\u9898\u4e2d\u5c31\u662f\u5168\u5c40\u6700\u4f18\u89e3\u3002</p> <p>\u7b97\u6cd5\u4e0a\u8ff0\u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(|V|^2) \uff0c\u9002\u5408\u7a20\u5bc6\u56fe\u3002\u7528\u57fa\u4e8e\u5806\u7ed3\u6784\u7684\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5df2\u8bbf\u95ee\u70b9\u96c6\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u4e4b\u3002\u7b97\u6cd5\u5171 |V| \u6b65\uff0c\u6bcf\u4e00\u6b65\u7684\u590d\u6742\u5ea6\u4e3a \u5bfb\u627e\u6700\u8fd1\u70b9 \u548c \u66f4\u65b0\u8ddd\u79bb \u590d\u6742\u5ea6\u4e4b\u548c\u3002\u6839\u636eCLRS\uff0c\u4e8c\u53c9\u5806\u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O((V+E)\\log E) \uff0c\u6590\u6ce2\u90a3\u5951\u5806\u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(V\\log V + E)\u3002</p>"},{"location":"competitive_programming/graph_theory/floyd/","title":"\u6240\u6709\u70b9\u5bf9\u95f4\u7684\u6700\u77ed\u8def\u5f84","text":""},{"location":"competitive_programming/graph_theory/floyd/#_2","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u5e26\u5b9e\u6570\u6743\u7684\u6709\u5411\u56fe g \uff0c\u6c42\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb</p>"},{"location":"competitive_programming/graph_theory/floyd/#_3","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int INF = 1e9;\nconst int maxn = 10;\n\nint n;\nint g[maxn][maxn];\n\nint d[maxn][maxn];\nint p[maxn][maxn];\n\nvoid Floyd() {\n    for (int i = 0; i &lt; n; i++)\n        for (int j = 0; j &lt; n; j++) d[i][j] = g[i][j], p[i][j] = -1;\n\n    for (int k = 0; k &lt; n; k++)\n        for (int i = 0; i &lt; n; i++)\n            for (int j = 0; j &lt; n; j++)\n                if (d[i][k] + d[k][j] &lt; d[i][j])\n                    d[i][j] = d[i][k] + d[k][j], p[i][j] = k;\n}\n</code></pre> <ul> <li> <p>g - \u90bb\u63a5\u77e9\u9635</p> </li> <li> <p>n - \u9876\u70b9\u6570\u91cf</p> </li> <li> <p>d - \u4efb\u610f\u4e24\u70b9\u95f4\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6</p> </li> <li> <p>p - \u4efb\u610f\u4e24\u70b9\u95f4\u6700\u77ed\u8def\u5f84\u7684\u4e2d\u8f6c\u70b9\uff08\u7528\u4e8e\u751f\u6210\u5177\u4f53\u8def\u5f84\uff09</p> </li> </ul>"},{"location":"competitive_programming/graph_theory/floyd/#_4","title":"\u7b97\u6cd5","text":"<p>Floyd\u7b97\u6cd5\u5c5e\u4e8e\u52a8\u6001\u89c4\u5212\uff0c \u91cd\u53e0\u5b50\u95ee\u9898 \u662f\u201c\u53ef\u4ee5\u4f7f\u7528\u524d k \u4e2a\u9876\u70b9\u4f5c\u4e3a\u4e2d\u8f6c\u70b9\u7684\u6700\u77ed\u8def\u5f84\u201d\u3002</p>"},{"location":"competitive_programming/graph_theory/minimum_spanning_tree/","title":"\u6700\u5c0f\u751f\u6210\u6811","text":""},{"location":"competitive_programming/graph_theory/minimum_spanning_tree/#_2","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u65e0\u5411\u8fde\u901a\u56fe g \uff0c\u627e\u5230\u4e00\u68f5\u751f\u6210\u6811\uff0c\u4f7f\u5f97\u8fb9\u7684\u603b\u6743\u91cd\u6700\u5c0f</p>"},{"location":"competitive_programming/graph_theory/minimum_spanning_tree/#i-prim","title":"\u7b97\u6cd5I - Prim","text":"<p>\u7ef4\u62a4\u4e00\u4e2aMST\u70b9\u96c6\uff0c\u521d\u59cb\u53ea\u6709\u4efb\u4e00\u70b9\uff08\u4e00\u822c\u53d6\u7f16\u53f7\u4e3a 0 \u7684\u70b9\uff09\uff0c\u6bcf\u6b21\u53d6\u6240\u6709\u4e00\u7aef\u5728MST\u70b9\u96c6\u5185\u90e8\u53e6\u4e00\u7aef\u5728MST\u70b9\u96c6\u5916\u90e8\u7684\u8fb9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u4e00\u6761\uff0c\u5c06\u8be5\u8fb9\u7684\u53e6\u4e00\u7aef\u52a0\u5165MST\u70b9\u96c6\u5e76\u8bb0\u5f55\u8be5\u8fb9\uff0c\u5219\u7ecf\u8fc7 n-1 \u6b65\u5f97\u5230\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>Prim\u7b97\u6cd5\u5c5e\u4e8e\u8d2a\u5fc3\u6cd5\uff0c\u5176\u6b63\u786e\u6027\u57fa\u4e8eMST\u6027\u8d28\uff1a \u5bf9\u4e8e\u4e00\u9897 \u6b63\u5728\u6784\u9020\u4e2d \u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8bbe U, V \u5206\u522b\u4e3a\u6811\u7684\u9876\u70b9\u96c6\u53ca\u5176\u8865\u96c6\u3002\u82e5\u8fb9 (u, v) \u4e3a\u4e00\u7aef\u5728\u5f53\u524d\u70b9\u96c6\u4e2d u \\in U \uff0c\u53e6\u4e00\u7aef\u4e0d\u5728\u5f53\u524d\u70b9\u96c6\u4e2d v \\in V \uff0c\u4e14\u6743\u91cd\u6700\u5c0f\u7684\u8fb9\uff0c\u5219\u5fc5\u7136\u5b58\u5728\u4e00\u9897\u5305\u542b\u8be5\u8fb9 (u, v) \u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p>"},{"location":"competitive_programming/graph_theory/minimum_spanning_tree/#_3","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nusing ll = long long;\n\nconst int maxn = 10;\nconst int INF = 2e9;\n\nint n;\nint G[maxn][maxn];\n\nint NextVertex(int low_cost[], bool mst_set[]) {\n    int mn = INF, mn_idx = -1;\n    for (int i = 0; i &lt; n; i++)\n        if (!mst_set[i] &amp;&amp; low_cost[i] &lt; mn) mn = low_cost[i], mn_idx = i;\n    return mn_idx;\n}\n\nll PrimMST() {\n    int par[n];       // Store which inner vertex to connect for outer vertexes.\n    int low_cost[n];  // lowest cost for outer vertexes to connect to a inner vertex.\n    bool mst_set[n];  // Mark inner vertices.\n\n    // Initially put the 1st vertex into mst_set.\n    mst_set[0] = true, par[0] = -1;\n    for (int i = 1; i &lt; n; i++)\n        low_cost[i] = G[0][i], mst_set[i] = false, par[i] = 0;\n\n    for (int i = 0; i &lt; n - 1; i++) {  // There are n - 1 steps to construct MST.\n        int u = NextVertex(low_cost, mst_set);\n        mst_set[u] = true;\n        for (int v = 0; v &lt; n; v++)\n            if (!mst_set[v] &amp;&amp; G[u][v] &lt; low_cost[v])\n                par[v] = u, low_cost[v] = G[u][v];\n    }\n\n    ll ans = 0;\n    for (int i = 1; i &lt; n; i++) ans += G[i][par[i]];\n    return ans;\n}\n</code></pre> <ul> <li> <p>G - \u90bb\u63a5\u77e9\u9635</p> </li> <li> <p>n - \u9876\u70b9\u6570\u91cf</p> </li> <li> <p>par - par[i] \u8868\u793a\u7f16\u53f7\u4e3a i \u7684\u9876\u70b9\u5728\u88ab\u52a0\u5165MST\u7684\u65f6\u5019\u6240\u8fde\u7684\u6b63\u5728\u751f\u6210\u4e2dMST\u4e0a\u7684\u9876\u70b9\uff08\u7528\u4e8e\u83b7\u53d6\u5177\u4f53\u751f\u6210\u6811\u7684\u8fb9\u96c6\uff0c par[1, n-1] \u5373\u4e3a\u6240\u6c42\uff09</p> </li> <li> <p>low_cost - \u5f53\u524d\u9636\u6bb5\u6b63\u5728\u751f\u6210\u4e2d\u7684MST\u4e4b\u5916\u7684\u70b9\u5230\u5f53\u524dMST\u7684\u6700\u77ed\u8ddd\u79bb</p> </li> <li> <p>$mst_set - \u5c5e\u4e8e\u6b63\u5728\u751f\u6210\u4e2d\u7684MST\u7684\u9876\u70b9\u6807\u8bb0</p> </li> </ul> <p>\u4ee5\u4e0a\u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(|V|^2) \u3002</p>"},{"location":"competitive_programming/graph_theory/minimum_spanning_tree/#2-kruskal","title":"\u7b97\u6cd52 - Kruskal","text":"<p>Kruskal\u7b97\u6cd5\u7684\u601d\u8def\u5f88\u6e05\u6670\uff0c\u5982\u4f7f\u7528\u5e76\u67e5\u96c6\uff0c\u53ef\u5c06\u6b65\u9aa4\u603b\u7ed3\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u65b0\u5efa\u56fe G \uff0c\u56fe G \u4e2d\u6709\u4e0e\u539f\u56fe\u76f8\u540c\u7684\u9876\u70b9\uff0c\u4f46\u6ca1\u6709\u8fb9\uff1b</p> </li> <li> <p>\u5c06\u539f\u56fe\u4e2d\u6240\u6709\u7684\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1b</p> </li> <li> <p>\u4ece\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u5f00\u59cb\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u9876\u70b9\u5728\u56fe G \u5185\u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5219\u6dfb\u52a0\u8fd9\u6761\u8fb9\u5230\u56fe G \u4e2d\uff1b</p> </li> <li> <p>\u91cd\u590d3\uff0c\u76f4\u5230\u56fe G \u53ea\u5269\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u3002 \uff08\u6ce8\uff1a\u8be5\u56fe\u53ea\u5173\u6ce8\u52a8\u6001\u8fde\u901a\u6027\uff0c\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\u5c31\u597d\u3002\uff09</p> </li> </ol>"},{"location":"competitive_programming/graph_theory/minimum_spanning_tree/#_4","title":"\u4f18\u5316","text":"<p>\u6839\u636eCLRS\uff0c\u5982\u679c\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u5806\uff0c\u5219\u53ef\u4ee5\u5c06Prim\u548cKruskal\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u9650\u5236\u5728 O(E\\log V) \uff0c\u5982\u679c\u4f7f\u7528\u6590\u6ce2\u90a3\u5951\u5806\uff0cPrim\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u5c06\u6539\u5584\u4e3a O(E+V\\log V) \u3002\u6b64\u8fd0\u884c\u65f6\u95f4\u5728 |V| \\ll |E|\uff08\u7a00\u758f\u56fe\uff09 \u7684\u60c5\u51b5\u4e0b\u8f83\u4e8c\u53c9\u5806\u6709\u76f8\u5f53\u5927\u7684\u6539\u8fdb\u3002</p>"},{"location":"competitive_programming/math/catalan_number/","title":"\u5361\u7279\u5170\u6570/Catalan","text":""},{"location":"competitive_programming/math/catalan_number/#_1","title":"\u95ee\u9898","text":"<p>n \u5bf9\u62ec\u53f7 <code>()</code> \u6784\u6210\u7684\u5e8f\u5217\uff0c\u6c42\u6ee1\u8db3\u62ec\u53f7\u5408\u6cd5\u5339\u914d\u7684\u6392\u5217\u6570\u91cf\u3002</p>"},{"location":"competitive_programming/math/catalan_number/#_2","title":"\u5206\u6790","text":"<ul> <li> <p>\u6392\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f <code>(</code> \u8bc1\u660e\uff1a\u5982\u679c\u9996\u5143\u662f <code>)</code> \u5219\u5176\u65e0\u6cd5\u88ab\u5339\u914d</p> </li> <li> <p>\u7ed9\u5b9a\u5408\u6cd5\u6392\u5217\uff0c\u5219\u5339\u914d\u65b9\u5f0f\u552f\u4e00</p> </li> </ul> <p>\u8bbe a_i \u8868\u793a\u7531 i \u5bf9\u62ec\u53f7\u7ec4\u6210\u7684\u5339\u914d\u6392\u5217\u7684\u6570\u91cf\uff0c\u663e\u7136 a_1 = 1\uff0c\u4ece\u4e0b\u9762\u7684\u9012\u63a8\u5f0f\u5206\u6790\u4e2d\u53ef\u4ee5\u770b\u51fa a_0 \u8d77\u5230\u4e86\u4e58\u6cd5\u5e7a\u5143\u7684\u4f5c\u7528\uff0c\u6545\u4ee4 a_0 = 1\u3002</p> <p>\u5bf9\u4e8e\u7531 n \u5bf9\u62ec\u53f7\u7ec4\u6210\u7684\u6392\u5217\uff0c\u8003\u8651\u4e0e\u9996\u4f4d <code>(</code> \u5339\u914d\u7684 <code>)</code> \u7684\u4f4d\u7f6e\uff0c\u5176\u5de6\u53f3\u5404\u6709\u4e00\u4e2a\u957f\u5ea6\u66f4\u77ed\u7684\u5339\u914d\u5e8f\u5217\uff0c\u9012\u63a8\u5f0f\u4e3a</p>  a_n = \\sum_{i=0}^{n-1} a_i a_{n - 1 - i}  <p>\u5982\u6b64\u53ef\u4ee5\u5728 O(n^2) \u7684\u65f6\u95f4\u5185\u5f97\u5230\u7ed3\u679c\u3002</p>"},{"location":"competitive_programming/math/catalan_number/#catalan_1","title":"Catalan\u6570","text":"<p>\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u6570\u5217 {a_1, a_2, ...} \u79f0\u4e3a Catalan\u6570\u5217 \u3002</p> <p>\u901a\u9879 a_n \u79f0\u4e3a Catalan\u6570</p>"},{"location":"competitive_programming/math/catalan_number/#_3","title":"\u901a\u9879\u516c\u5f0f","text":"<p>\u4e0a\u8ff0\u9012\u63a8\u5173\u7cfb\u7684\u89e3\u4e3a\uff1a</p>  a_0 = a_1 = 1   a_n = \\frac{C_{2n}^n}{n+1} (n \\geq 2, n \\in \\mathbb{N}_+)"},{"location":"competitive_programming/math/catalan_number/#catalan_2","title":"\u5173\u4e8e Catalan\u6570 \u7684\u5e38\u89c1\u516c\u5f0f","text":"a_n = \\begin{cases} \\sum_{i=1}^{n} a_{i-1} a_{n-i} &amp; n \\geq 2, n \\in \\mathbb{N_{+}}\\ 1 &amp; n = 0, 1 \\end{cases}   a_n = \\frac{a_{n-1} (4n-2)}{n+1}   a_n = C_{2n}^{n} - C_{2n}^{n-1}"},{"location":"competitive_programming/math/catalan_number/#catalan_3","title":"\u53ef\u7528Catalan\u6570\u5217\u5efa\u6a21\u7684\u95ee\u9898","text":"<ul> <li> <p>\u4e70\u7968\u627e\u96f6\uff1a 2n \u4e2a\u4eba\u4e70\u7968\uff0c\u7968\u4ef7 50\uff0c\u5176\u4e2d n \u4e2a\u4eba\u624b\u4e2d\u63e1\u6709 100 \u5143\u949e\u7968\uff0c n \u4e2a\u4eba\u624b\u4e2d\u63e1\u6709 50 \u5143\u949e\u7968\u3002\u5047\u8bbe\u5f00\u59cb\u65f6\u552e\u7968\u5904\u6ca1\u6709\u96f6\u94b1\uff0c\u8bf7\u95ee\u6709\u591a\u5c11\u79cd\u6392\u961f\u65b9\u5f0f\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u627e\u4e0d\u5f00\u94b1\u7684\u95ee\u9898\uff1f</p> </li> <li> <p>n \u4e2a\u8282\u70b9\u53ef\u6784\u9020\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u4e8c\u53c9\u6811</p> </li> <li> <p>\u591a\u8fb9\u5f62\u5212\u5206\u6210\u4e09\u89d2\u5f62\u7684\u95ee\u9898\uff1a\u6c42\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u533a\u57df\u5212\u5206\u6210\u4e09\u89d2\u5f62\u533a\u57df\u7684\u65b9\u6cd5\u6570</p> <ul> <li>\u7c7b\u4f3c\u9898\u76ee\uff1a\u5706\u4e0a\u7684 2n \u4e2a\u70b9\uff0c\u6210\u5bf9\u8fde\u63a5\u5f97\u5230 n \u6761\u7ebf\u6bb5\u4e0d\u60f3\u4ea4\uff0c\u6c42\u53ef\u884c\u7684\u65b9\u6cd5\u6570</li> </ul> </li> <li> <p>\u8def\u5f84\u8ba1\u6570\u95ee\u9898\uff1a</p> </li> </ul> <p>\u8003\u8651\u975e\u964d\u8def\u5f84</p> <ol> <li> <p>\u4ece (0, 0) \u5230 (m, n) \u7684\u975e\u964d\u8def\u5f84\u6570\u7b49\u4e8e m \u4e2a x \u548c n \u4e2a y \u7684\u6392\u5217\u6570\uff0c\u5373 C_{n + m}^m</p> </li> <li> <p>\u4ece 0, 0 \u5230 n, n \u7684\u9664\u7aef\u70b9\u5916\u4e0d\u63a5\u89e6\u76f4\u7ebf y = x \u7684\u975e\u964d\u8def\u5f84\u6570\uff1a</p> <p>\u5148\u8003\u8651 y=x \u4e0b\u65b9\u7684\u8def\u5f84\uff0c\u90fd\u662f\u4ece (0, 0) \u51fa\u53d1\uff0c\u7ecf\u8fc7 (1, 0) \u53ca (n, n-1) \u5230 (n,n) \uff0c\u53ef\u4ee5\u770b\u505a\u662f (1,0) \u5230 (n,n-1) \u4e0d\u63a5\u89e6 y=x \u7684\u975e\u964d\u8def\u5f84\u6570\u3002</p> <p>\u6240\u6709\u7684\u7684\u975e\u964d\u8def\u5f84\u6709 C_{2n-2}^{n-1} \u6761\u3002\u5bf9\u4e8e\u8fd9\u91cc\u9762\u4efb\u610f\u4e00\u6761\u63a5\u89e6\u4e86 y=x \u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u628a\u5b83\u6700\u540e\u79bb\u5f00\u8fd9\u6761\u7ebf\u7684\u70b9\u5230 (1,0) \u4e4b\u95f4\u7684\u90e8\u5206\u5173\u4e8e y=x \u5bf9\u79f0\u53d8\u6362\uff0c\u5c31\u5f97\u5230\u4ece (0,1) \u5230 (n,n-1) \u7684\u4e00\u6761\u975e\u964d\u8def\u5f84\u3002\u53cd\u4e4b\u4e5f\u6210\u7acb\u3002\u4ece\u800c y=x \u4e0b\u65b9\u7684\u975e\u964d\u8def\u5f84\u6570\u662f C_{2n-2}^{n-1} - C_{2n-2}^n \u3002\u6839\u636e\u5bf9\u79f0\u6027\u53ef\u77e5\u6240\u6c42\u7b54\u6848\u4e3a 2(C_{2n-2}^{n-1} - C_{2n-2}^n) \u3002</p> </li> </ol>"},{"location":"competitive_programming/math/combination/","title":"\u7ec4\u5408\u6570","text":""},{"location":"competitive_programming/math/combination/#_2","title":"\u95ee\u9898","text":"<p>\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\uff0c\u63d0\u4f9b\u8ba1\u7b97\u7ec4\u5408\u6570 C_x^y=\\frac{x!}{y!(x-y)!} \u7684\u65b9\u6cd5\uff0c\u7ed3\u679c\u5bf9 10^9 + 7 \u53d6\u6a21</p>"},{"location":"competitive_programming/math/combination/#_3","title":"\u4ee3\u7801","text":"<p>\u4ee5\u4e0b<code>Combination</code>\u63d0\u4f9b<code>int C(int x, int y)</code>\u65b9\u6cd5\u8ba1\u7b97\u7ec4\u5408\u6570C_x^y</p> <p>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u8981\u6c42 0 \\leq y \\leq x \\leq 2e5 \uff0c\u5e76\u63d0\u4f9b\u4e86\u4fee\u6539\u4e0a\u9650\u7684\u6784\u9020\u51fd\u6570\u3002</p> <pre><code>class Combination {\n   public:\n    Combination() { PreProcess(); }\n\n    Combination(int _mx) : mx(_mx) { PreProcess(); }\n\n    int C(int x, int y) {  // Choose y from x.\n        assert(0 &lt;= y), assert(y &lt;= x), assert(x &lt;= mx);\n        return 1ll * fac[x] * facinv[y] % mod * facinv[x - y] % mod;\n    }\n\n   private:\n    int mx = 2e5;\n    int mod = 1e9 + 7;\n    vector&lt;int&gt; fac, facinv;\n\n    int qpower(int a, int b) {\n        int ans = 1;\n        while (b) {\n            if (b &amp; 1) ans = 1ll * ans * a % mod;\n            a = 1ll * a * a % mod;\n            b &gt;&gt;= 1;\n        }\n        return ans;\n    }\n\n    void PreProcess() {\n        fac.resize(mx + 1), facinv.resize(mx + 1);\n        fac[0] = 1;\n        for (int i = 1; i &lt;= mx; i++) {\n            fac[i] = 1ll * fac[i - 1] * i % mod;\n        }\n        facinv[mx] = qpower(fac[mx], mod - 2);\n        for (int i = mx - 1; i &gt;= 0; i--) {\n            facinv[i] = 1ll * facinv[i + 1] * (i + 1) % mod;\n        }\n    }\n};\n</code></pre>"},{"location":"competitive_programming/math/combination/#_4","title":"\u7b97\u6cd5","text":"<p>\u6839\u636e\u7ec4\u5408\u6570\u8ba1\u7b97\u5f0f C_x^y=\\frac{x!}{y!(x-y)!}\uff0c\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u9884\u5904\u7406\u6c42\u51fa x \\in [0, x_{max}] \u8303\u56f4\u5185\u6240\u6709\u6570\u7684\u9636\u4e58 x! \u548c\u9636\u4e58\u7684\u4e58\u6cd5\u9006\u5143 (x!)^{-1} \u3002</p> <p>\u663e\u7136\uff0c\u9636\u4e58\u8868 x! \u53ef\u4ee5\u5728 O(n)\u65f6\u95f4\u5185\u5f97\u5230\u3002</p> <p>\u4e0b\u9762\u6c42\u9636\u4e58\u8868\u7684\u9006\u5143\u8868\uff1a</p> <p>\u7531</p>  ((x - 1)!)^{-1} = (x!)^{-1} \\cdot x  <p>\u53ef\u77e5\u9636\u4e58\u9006\u5143\u8868\u53ef\u964d\u5e8f\u751f\u6210\uff0c\u90a3\u4e48\u5982\u4f55\u83b7\u5f97\u521d\u59cb\u503c (x_{max}!)^{-1} \u5462\uff1f</p> <p>\u6839\u636e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a</p>  a^{p-1} \\equiv 1 \\pmod p  <p>\u53ef\u5f97</p>  a \\cdot a^{p-2} \\equiv 1 \\pmod p  <p>\u7531\u4e0a\u5f0f\u53ef\u77e5 a^{p-2} \u53ef\u4f5c\u4e3a a \u5728 \\pmod p \u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\u3002</p> <p>\u5373</p>  (x_{max}!)^{-1} = (x_{max}!)^{p-2} \\pmod p"},{"location":"competitive_programming/math/eratosthenes/","title":"\u57c3\u62c9\u6258\u8272\u5c3c\u7b5b/\u7d20\u6570\u7b5b","text":""},{"location":"competitive_programming/math/eratosthenes/#_2","title":"\u95ee\u9898","text":"<p>\u5bfb\u627e n \u4ee5\u5185\u6240\u6709\u7d20\u6570\u3002</p>"},{"location":"competitive_programming/math/eratosthenes/#_3","title":"\u7b97\u6cd5","text":"<p>\u521d\u59cb\u5316\u957f\u5ea6\u4e3a n \u7684\u7a7a\u8868\u672a\u88ab\u6807\u8bb0\uff0c\u4ece 2 \u5230 n \u9012\u589e\uff0c\u82e5\u5f53\u524d\u5143\u7d20\u672a\u88ab\u6807\u8bb0\uff0c\u5219\u8bb0\u5f55\u8be5\u5143\u7d20\u4e3a\u7d20\u6570\uff0c\u5e76\u6807\u8bb0\u8be5\u5143\u7d20\u5728 n \u4ee5\u5185\u7684\u6240\u6709\u500d\u6570\u4e3a\u5408\u6570\u3002</p> <p>\u6ce8\u610f\u5230 \u6807\u8bb0\u500d\u6570\u4e3a\u5408\u6570 \u7684\u64cd\u4f5c\u53ea\u5bf9 [2, \\sqrt{n}] \u8303\u56f4\u5185\u627e\u5230\u7684\u7d20\u6570\u64cd\u4f5c\u5373\u53ef\u3002</p> <p>\u53ef\u8bc1\u660e\u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n\\log \\log n)\u3002</p>"},{"location":"competitive_programming/math/eratosthenes/#_4","title":"\u4ee3\u7801","text":"<pre><code>const int N = 20;\nbool vis[N + 5];\nstd::vector&lt;int&gt; Eratosthenes_sieve() {\n    std::vector&lt;int&gt; primes;\n    for (int i = 2; i &lt;= N; i++) {\n        if (!vis[i]) primes.push_back(i);\n        for (int j = i * i; j &lt;= N; j += i)\n            if (!vis[j]) vis[j] = true;\n    }\n    return primes;\n}\n</code></pre>"},{"location":"competitive_programming/math/eratosthenes/#_5","title":"\u5e94\u7528","text":"<ol> <li>\u751f\u6210 n \u4ee5\u5185\u6240\u6709\u6574\u6570\u7684\u6700\u5c0f\u7d20\u56e0\u6570 \u5728\u6807\u8bb0 p \u7684\u6240\u6709\u500d\u6570\u7684\u8fc7\u7a0b\u4e2d p \u5373\u4e3a\u6240\u6709\u500d\u6570\u7684\u6700\u5c0f\u7d20\u56e0\u6570\u3002</li> </ol>"},{"location":"competitive_programming/math/greatest_common_devisor/","title":"\u6700\u5927\u516c\u7ea6\u6570","text":""},{"location":"competitive_programming/math/greatest_common_devisor/#euclid","title":"Euclid\u7b97\u6cd5","text":"<p>\u8ba1\u7b97 big \u548c small \uff08\u5176\u4e2d small \\leq big \uff09\u7684\u6700\u5927\u516c\u7ea6\u6570</p> <ul> <li>\u53ea\u8981 samll \u4e0d\u4e3a 0 \u5219\uff1a</li> </ul> <p>big\uff0csamll = small\uff0cbig \\pmod {small}</p> <ul> <li>\u5426\u5219\uff1a big \u4e3a\u6240\u6c42</li> </ul> <p>Euclid\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(max(big)) \u3002</p>"},{"location":"competitive_programming/math/greatest_common_devisor/#_2","title":"\u4ee3\u7801","text":"<p>\u8fed\u4ee3\u7248 <pre><code>int gcd(int big, int small) {\n    int tmp;\n    while (small != 0) tmp = small, small = big % small, big = small;\n    return big;\n}\n</code></pre></p> <p>\u9012\u5f52\u7248 <pre><code>int gcd(int big, int small) {\n    if (small == 0) return big;\n    return gcd(big % small, small);\n}\n</code></pre></p>"},{"location":"competitive_programming/math/inverse/","title":"\u4e58\u6cd5\u9006\u5143","text":""},{"location":"competitive_programming/math/inverse/#_2","title":"\u95ee\u9898","text":"<p>\u5728 O(n) \u65f6\u95f4\u5185\u6c42\u51fa 0 \u5230 n \u4e4b\u95f4\u6240\u6709\u6570\u5728 \\pmod p \u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\u3002</p>"},{"location":"competitive_programming/math/inverse/#_3","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nusing ll = long long;\n\nconst int maxn = 1000005;\nconst ll MOD = 1000000007;\n\nll qpw(ll a, ll b) {\n    ll ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = ans * a % MOD, b--;\n        a = a * a % MOD;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\n\nll inv[maxn + 1];\nvoid pre_process() {\n    inv[1] = 1;\n    for (int i = 2; i &lt;= maxn; i++)\n        inv[i] = (MOD - MOD / i) * inv[MOD % i] % MOD;\n}\n</code></pre>"},{"location":"competitive_programming/math/inverse/#_4","title":"\u7b97\u6cd5","text":"<p>\u5bf9\u4e8e\u4efb\u610f\u6b63\u6574\u6570 x \uff0c\u5728 \\pmod p\u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\u57fa\u4e8e\u975e\u9a6c\u5c0f\u5b9a\u7406\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u5728 O(\\log p) \u7684\u65f6\u95f4\u6c42\u51fa\uff0c\u5373</p>  x^{-1}=x^{p-2} \\pmod {p-2}  <p>\u66f4\u8fdb\u4e00\u6b65\uff0c\u5229\u7528 \u52a8\u6001\u89c4\u5212 \u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4 T(n) \u751f\u6210\u524d n \u4e2a\u6b63\u6574\u6570\u7684\u4e58\u6cd5\u9006\u5143\u8868\u3002</p> <p>\u5bf9\u4e8e x^{-1} \\pmod p\uff0c\u9996\u5148\u5c06 p \u5206\u6210 x \u7684\u4f59\u6570\u548c\u500d\u6570\u4e24\u90e8\u5206\uff1a</p>  \\begin{align}     p &amp;= (p\\%x) + \\lfloor \\frac{p}{x} \\rfloor \\times x \\\\       &amp;= a + bx  \\end{align}  <p>\u5176\u4e2d a=p\\%x, b=\\lfloor\\frac{p}{x}\\rfloor </p> <p>\u4e8e\u662f\u6709</p>  a + bx \\equiv 0 \\pmod p  <p>\u5c06 a \u79fb\u5230\u53f3\u8fb9\u5e76\u5728\u4e24\u8fb9\u540c\u65f6\u4e58 b^{-1}</p>  x \\equiv -b^{-1}a \\pmod p  <p>\u5bf9\u4e24\u8fb9\u53d6\u9006</p>  x^{-1} = (-b)a^{-1} \\pmod p  <p>\u5c06 -b=p-\\lfloor\\frac{p}{x}\\rfloor$ \u5e26\u5165\u4e0a\u5f0f\uff0c\u5f97\u5230</p>  x^{-1}=(p-\\lfloor\\frac{p}{x}\\rfloor)(p\\%x) \\pmod p  <p>\u81f3\u6b64\u5f97\u5230\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u7531\u4e8e (p%x) &lt; x\uff0c\u6545\u5728\u6c42\u89e3 x^{-1} \u65f6\uff0c (p\\%x)^{-1} \u662f\u5df2\u7ecf\u6c42\u89e3\u8fc7\u7684\u91cd\u53e0\u5b50\u95ee\u9898\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u7ed3\u679c\u3002</p>"},{"location":"competitive_programming/math/quick_power/","title":"\u5feb\u901f\u5e42","text":""},{"location":"competitive_programming/math/quick_power/#_2","title":"\u95ee\u9898","text":"<p>\u5728 O(\\log{b}) \u65f6\u95f4\u5185\u6c42\u5e42\u503c a^b \uff0c\u7ed3\u679c\u5bf9 MOD \u53d6\u4f59\u3002</p>"},{"location":"competitive_programming/math/quick_power/#_3","title":"\u4ee3\u7801","text":"<pre><code>const int MOD = 1000000007;\n\nint qpw(int a, int b) {  // Quick power for a^b.\n    int ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = 1ll * ans * a % MOD;\n        a = 1ll * a * a % MOD;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\n</code></pre>"},{"location":"competitive_programming/string/suffix_array/","title":"\u540e\u7f00\u6570\u7ec4","text":""},{"location":"competitive_programming/string/suffix_array/#_2","title":"\u4e00\u4e9b\u7ea6\u5b9a","text":"<p>\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u3002</p> <p>\u540e\u7f00 i \u8868\u793a\u4ee5\u4e0b\u6807 i \u7684\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\u3002</p>"},{"location":"competitive_programming/string/suffix_array/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u540e\u7f00\u6570\u7ec4\uff08Suffix Array\uff09\u4e3b\u8981\u662f\u4e24\u4e2a\u6570\u7ec4\uff1asa \u548c rk\u3002</p> <p>\u5176\u4e2d\uff0csa \u4e3a\u6240\u6709\u540e\u7f00\u6309\u5b57\u7b26\u4e32\u5e8f\u7684\u5347\u5e8f\u6392\u5217\uff0crk[i] \u8868\u793a\u540e\u7f00 i \u5728 sa \u4e2d\u7684\u4e0b\u6807\u3002</p>"},{"location":"competitive_programming/string/suffix_array/#_4","title":"\u751f\u6210\u65b9\u6cd5","text":""},{"location":"competitive_programming/string/suffix_array/#on2-log-non2-log-n","title":"\u6734\u7d20 O(n^2 \\log n) \u505a\u6cd5","text":"<p>\u57fa\u4e8e\u5b57\u7b26\u4e32\u6bd4\u8f83\u7684\u6734\u7d20\u6392\u5e8f\u5b9e\u73b0\uff0c\u5176\u4e2d\u6bd4\u4ef7\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u65f6\u95f4\u662f O(n) \u7684\uff0c\u6545\u6392\u5e8f\u603b\u65f6\u95f4\u662f O(n^2 \\log n)\u3002</p>"},{"location":"competitive_programming/string/suffix_array/#on-log2-non-log2-n","title":"\u57fa\u4e8e\u500d\u589e\u7684 O(n \\log^2 n) \u505a\u6cd5","text":"<p>\u4e00\u53e5\u8bdd\uff1a\u500d\u589e\u5b50\u4e32\u7684\u957f\u5ea6\u4e0a\u9650\uff0c\u7ef4\u62a4\u540d\u6b21\u6570\u7ec4 rk\uff0c\u76f4\u5230\u957f\u5ea6\u4e0a\u9650\u8fbe\u5230 n\u3002</p> <p>\u8be5\u8fc7\u7a0b\u8fdb\u884c \\log n \u6b21\u6392\u5e8f\uff0c\u6bcf\u6b21\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n \\log n)\u3002</p> <ul> <li> <p>\u521d\u59cb\u957f\u5ea6\u4e0a\u9650\u4e3a 1\uff0c\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u6392\u5e8f\uff0c\u5f97\u5230\u540d\u8bcd\u6570\u7ec4 rk_1\u3002</p> </li> <li> <p>\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u957f\u5ea6\u4e0a\u9650\u4e3a w \u7684\u5b50\u4e32\u6392\u540d rk_w\uff0c\u5219\u4e8c\u5143\u7ec4\u5e8f\u5217 p[i] = (rk_w[i], rk_w[i + w]) \u6392\u5e8f\u5f97\u5230\u7684\u540d\u8bcd\u6570\u7ec4\u5373\u4e3a\u957f\u5ea6\u4e0a\u9650\u4e3a 2w \u7684\u5b50\u4e32\u6392\u540d rk_{2w}\u3002 \u6ce8\uff1a\u82e5\u7b2c\u4e8c\u5173\u952e\u5b57\u4e0d\u5b58\u5728\uff08i + w \u8d8a\u754c\uff09\u5219\u53d6 -1 \u5373\u53ef\u3002</p> </li> <li> <p>\u5faa\u73af\u6267\u884c\u4e0a\u4e00\u6b65\u76f4\u5230\u957f\u5ea6\u4e0a\u9650\u5927\u4e8e\u7b49\u4e8e\u539f\u5b57\u7b26\u4e32\u957f\u5ea6 n\u3002</p> </li> </ul>"},{"location":"competitive_programming/string/suffix_array/#on-log-non-log-n","title":"\u5f15\u5165\u57fa\u6570\u6392\u5e8f\u548c\u8ba1\u6570\u6392\u5e8f\u4f18\u5316\u5230 O(n \\log n)","text":"<p>\u5728\u57fa\u4e8e\u500d\u589e\u7684 O(n \\log^2 n) \u505a\u6cd5\u4e2d\uff0c\u5355\u6b21\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u4e3a O(n \\log n)\u3002\u5982\u679c\u80fd O(n) \u6392\u5e8f\uff0c\u5c31\u80fd\u5c06\u603b\u590d\u6742\u5ea6\u4f18\u5316\u5230 O(n \\log n)\u3002</p> <p>\u7531\u4e8e\u5355\u6b21\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u5173\u952e\u5b57\u662f\u6392\u540d\uff0c\u503c\u57df\u4e3a O(n)\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u53cc\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\u4f18\u5316\u81f3 O(n)\u3002</p>"},{"location":"competitive_programming/string/suffix_array/#_5","title":"\u5e38\u6570\u4f18\u5316","text":""},{"location":"competitive_programming/string/suffix_array/#_6","title":"\u7b2c\u4e8c\u5173\u952e\u5b57\u65e0\u9700\u8ba1\u6570\u6392\u5e8f","text":""},{"location":"competitive_programming/string/suffix_array/#_7","title":"\u4f18\u5316\u8ba1\u6570\u6392\u5e8f\u7684\u503c\u57df","text":""},{"location":"competitive_programming/string/suffix_array/#rkidirkidi","title":"\u7f13\u5b58 rk[id[i]]\uff0c\u51cf\u5c11\u4e0d\u8fde\u7eed\u5185\u5b58\u8bbf\u95ee","text":""},{"location":"competitive_programming/string/suffix_array/#cmp","title":"\u7528<code>cmp</code>\u51fd\u6570\u6765\u8ba1\u7b97\u662f\u5426\u91cd\u590d","text":""},{"location":"competitive_programming/string/suffix_array/#_8","title":"\u4e00\u4e9b\u5e94\u7528","text":""},{"location":"competitive_programming/string/suffix_array/#height","title":"Height\u6570\u7ec4","text":""},{"location":"competitive_programming/string/suffix_array/#height_1","title":"Height\u6570\u7ec4\u7684\u5e94\u7528","text":""},{"location":"competitive_programming/string/suffix_automation/","title":"\u540e\u7f00\u81ea\u52a8\u673a","text":"<p>\u672c\u8282\u5185\u5bb9\u90e8\u5206\u6765\u81ea\u9648\u7acb\u67702012NOI\u51ac\u4ee4\u8425\u8bb2\u7a3f\uff0c\u5728\u6b64\u5bf9\u9648\u7acb\u6770\u5bf9SAM\u6240\u505a\u7684\u603b\u7ed3\u8868\u793a\u611f\u8c22\u3002</p> <p>\u672c\u8282\u5c06\u4ece\u6027\u8d28\u5206\u6790\u3001\u7ebf\u6027\u65f6\u95f4\u6784\u9020\u7b97\u6cd5\u4e24\u4e2a\u5c42\u9762\u6765\u8ba8\u8bba\u540e\u7f00\u81ea\u52a8\u673a\u3002</p>"},{"location":"competitive_programming/string/suffix_automation/#sam","title":"SAM\u5206\u6790","text":"<p>\u8bbe\u8981\u5206\u6790\u7684\u5b57\u7b26\u4e32\u4e3a\uff0cSAM\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u589e\u52a0\u4e86\u540e\u7f00\u94fe\u7684DFA\uff08\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff09\u3002\u5176\u72b6\u6001\u662f\u7684\u6240\u6709\u5b50\u4e32\u7684\u5206\u7ec4\uff0c\u5206\u7ec4\u7684\u4f9d\u636e\u662f\u5b50\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u96c6\u5408\uff08right\u96c6\u5408\uff09\u3002</p> <ul> <li> <p>\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u5176\u6240\u5305\u542b\u7684\u6240\u6709\u5b50\u4e32\u662f\u5176\u4e2d\u6700\u957f\u5b57\u7b26\u4e32\u7684\u4e00\u7cfb\u5217\u957f\u5ea6\u8fde\u7eed\u7684\u540e\u7f00\u3002</p> </li> <li> <p>\u4e0d\u540c\u72b6\u6001\u5bf9\u5e94\u7684right\u96c6\u5408\u8981\u4e48\u4e0d\u76f8\u4ea4\uff0c\u8981\u4e48\u76f8\u4e92\u771f\u5305\u542b\uff0c\u8fd9\u6761\u6027\u8d28\u4fdd\u8bc1\u4e86\u72b6\u6001\u6570\u662f\u7ebf\u6027\u7684\u3002</p> </li> <li> <p>\u4e0d\u540c\u72b6\u6001\u5bf9\u5e94\u7684right\u96c6\u5408\u4e4b\u95f4\u7684\u5305\u542b\u5173\u7cfb\u4e2a\u6784\u6210\u4e86\u4e00\u68f5\u6811\u72b6\u7ed3\u6784\uff0c\u5c06\u5176\u79f0\u4e3aparent\u6811\u3002</p> </li> </ul>"},{"location":"competitive_programming/string/suffix_automation/#sam_1","title":"SAM\u7684\u7ebf\u6027\u6784\u9020\u7b97\u6cd5","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001 st \uff0c\u8bb0\u5f55\u5176\u4e2d\u6700\u957f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 val \uff0c\u53e6\u5916\u8bb0\u5f55\u5176\u5728 parent \u6811\u4e0a\u7684\u7236\u4eb2\u5730\u5740\uff0c\u4ee5\u53ca\u5176\u5728 DFA \u4e2d\u7684\u8f6c\u79fb\u8fb9\u3002\u5219\u5176\u4e2d\u5305\u542b\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u533a\u95f4\u4e3a [st \\rightarrow par \\rightarrow val, st \\rightarrow val] \u3002\u91c7\u7528\u5982\u4e0b\u589e\u91cf\u6cd5\u5728\u7ebf\u6784\u9020\uff1a</p> <p>\u4ee4\u5f53\u524d\u4e32\u4e3a T \uff0c\u52a0\u5165\u5b57\u7b26 x </p> <ol> <li>\u4ee4 p=ST(T), Right(p)=\\{length(T)\\}\u7684\u8282\u70b9</li> <li>\u65b0\u5efa np=ST(Tx), Right(p)=\\{llength(T) + 1\\}\u7684\u8282\u70b9 </li> <li>\u5bf9\u4e8e p \u548c p \u6ca1\u6709\u6807\u53f7 x \u7684\u7956\u5148 v , trans(v, x)=np</li> <li>\u627e\u5230 p \u7684\u7b2c\u4e00\u4e2a\u5b58\u5728\u6807\u53f7 x \u7684\u8fb9\u7684\u7956\u5148 v_p \u3002\u5982\u679c\u8fd9\u6837\u7684 v_p \u4e0d\u5b58\u5728\uff0c\u90a3\u4e48 Parent(np)=root \uff0c\u7b97\u6cd5\u7ec8\u6b62</li> <li>\u4ee4 q=trans(v_p, x) \uff0c\u82e5 MAX(q)=MAX(v_p) + 1 \uff0c\u4ee4 Parent(np)=q \uff0c\u7b97\u6cd5\u7ec8\u6b62</li> <li>\u5426\u5219\u65b0\u5efa\u8282\u70b9 nq \uff0c\u4ee4 trans(nq, *)=trans(q, *) </li> <li>\u7528 nq \u66ff\u4ee3 q \u5728 parent \u6811\u4e2d\u7684\u4f4d\u7f6e\uff0c\u8ba9 q \u548c np \u90fd\u6210\u4e3a nq \u7684\u5b69\u5b50</li> <li> <p>Parent(nq)=Parent(q)</p> </li> <li> <p>Parent(q) = nq</p> </li> <li> <p>Parent(np)=nq</p> </li> <li>\u5bf9\u6240\u6709 trans(v, x)=q \u7684 p \u7684\u7956\u5148 v \uff0ctrans(v, x) \u6539\u6210 nq</li> </ol>"},{"location":"competitive_programming/string/suffix_automation/#_2","title":"\u4ee3\u7801","text":"<pre><code>struct State {\n    State *par, *trans[26];\n    int val;\n    State(int _val) : par(0), val(_val) { memset(trans, 0, sizeof trans); }\n};\n\nState *root, *last = new State(0);\n\nvoid extend(int w) {\n    State *p = last;\n    State *np = p ? new State(p-&gt;val + 1) : new State(1);\n    while (p &amp;&amp; p-&gt;trans[w] == 0) p-&gt;trans[w] = np, p = p-&gt;par;\n    if (p == 0)\n        np-&gt;par = root;\n    else {\n        State *q = p-&gt;trans[w];\n        if (p-&gt;val + 1 == q-&gt;val)\n            np-&gt;par = q;\n        else {\n            State *nq = new State(p-&gt;val + 1);\n            memcpy(nq-&gt;trans, q-&gt;trans, sizeof q-&gt;trans);\n            nq-&gt;par = q-&gt;par;\n            q-&gt;par = nq;\n            np-&gt;par = nq;\n            while (p &amp;&amp; p-&gt;trans[w] == q) p-&gt;trans[w] = nq, p = p-&gt;par;\n        }\n    }\n    last = np;\n}\n</code></pre>"},{"location":"competitive_programming/string/suffix_automation/#_3","title":"\u5e94\u7528","text":"<ol> <li>\u6c42\u5b57\u7b26\u4e32 s \u7684\u6240\u6709\u5faa\u73af\u79fb\u4f4d\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 \u6cbf s\\#s \u7684SAM\u6309\u7167\u5b57\u5178\u5e8f\u79fb\u52a8 len(s) \u6b21\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u4e3a\u6240\u6c42\uff0c\u65f6\u95f4\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f\u7ebf\u6027\u3002</li> <li>\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32 A, B \u7684LCS\uff08\u6700\u957f\u516c\u5171\u8fde\u7eed\u5b50\u4e32 \u5f85\u7eed...</li> </ol>"},{"location":"competitive_programming/string/trie/","title":"\u5b57\u5178\u6811","text":""},{"location":"competitive_programming/string/trie/#_2","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u5b57\u7b26\u96c6\uff0c\u8bbe\u8ba1\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b9e\u73b0\u5355\u8bcd\u96c6\u5408\uff0c\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li> <p>\u52a0\u5165/Add - \u5c06\u5355\u8bcd\u52a0\u5165\u96c6\u5408</p> </li> <li> <p>\u5220\u9664/Remove - \u5c06\u5355\u8bcd\u4ece\u96c6\u5408\u4e2d\u53bb\u9664</p> </li> <li> <p>\u67e5\u627e/Find - \u5224\u65ad\u76ee\u6807\u5355\u8bcd\u662f\u5426\u5728\u96c6\u5408\u4e2d</p> </li> </ul>"},{"location":"competitive_programming/string/trie/#_3","title":"\u4ee3\u7801","text":"<p>\u4e0b\u9762\u7684\u5b57\u5178\u6811\uff0c\u652f\u6301\u7531 26 \u4e2a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6784\u6210\u7684\u5355\u8bcd\u7684\u589e\u3001\u5220\u3001\u67e5\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5176\u4ed6\u5b57\u7b26\u96c6\uff0c\u53ea\u9700\u6539\u53d8\u7c7b\u4e2d\u4ece\u5b57\u7b26\u5230\u5176\u5728\u5b57\u7b26\u96c6\u4e2d\u7684\u5e8f\u53f7\u7684\u6620\u5c04\u5373\u53ef\u3002 <pre><code>class Trie {\n   public:\n    Trie() {}\n    virtual ~Trie() { RemoveTrie(root); }\n    void Add(string word) {\n        TrieNode *cur = root;\n        for (int i = 0; i &lt; word.size(); i++) {\n            if (cur-&gt;next[word[i] - 'a'] != nullptr)\n                cur = cur-&gt;next[word[i] - 'a'];\n            else {\n                TrieNode *tmp = new TrieNode(false);\n                cur-&gt;next[word[i] - 'a'] = tmp;\n                cur = tmp;\n            }\n            if (i == word.size() - 1) cur-&gt;isword = true;\n        }\n    }\n    void Remove(string word) {\n        TrieNode *cur = root;\n        for (int i = 0; i &lt; word.size(); i++) {\n            if (cur-&gt;next[word[i] - 'a'] == nullptr) {\n                cout &lt;&lt; \"\\\"\" &lt;&lt; word &lt;&lt; \"\\\" \"\n                     &lt;&lt; \"was not in Trie.\" &lt;&lt; endl;\n                return;\n            }\n            cur = cur-&gt;next[word[i] - 'a'];\n        }\n        cur-&gt;isword = false;\n    }\n    bool Find(string word) {\n        TrieNode *cur = root;\n        for (int i = 0; i &lt; word.size(); i++) {\n            if (cur-&gt;next[word[i] - 'a'] == nullptr) return false;\n            cur = cur-&gt;next[word[i] - 'a'];\n        }\n        return cur-&gt;isword;\n    }\n\n   private:\n    static const int alphabat_size = 26;\n    struct TrieNode {\n        bool isword;\n        TrieNode *next[alphabat_size];\n        TrieNode() {}\n        TrieNode(bool _isword) : isword(_isword) {\n            for (int i = 0; i &lt; alphabat_size; i++) next[i] = nullptr;\n        }\n    };\n    TrieNode *root = new TrieNode(false);\n    void RemoveTrie(TrieNode *cur) {\n        for (int i = 0; i &lt; alphabat_size; i++)\n            if (cur-&gt;next[i] != nullptr) RemoveTrie(cur-&gt;next[i]);\n        delete cur;\n    }\n};\n</code></pre></p> <p>\u9700\u8981\u6ce8\u610f</p> <ul> <li><code>Trie</code>\u7c7b\u4e2d\u7528\u94fe\u5f0f\u7ed3\u6784\u5728\u5185\u5b58\u4e2d\u7ef4\u62a4\u4e00\u68f5\u6811\uff0c\u6790\u6784\u51fd\u6570\u4e2d\u8981\u9012\u5f52\u5220\u9664\u3002</li> </ul>"},{"location":"competitive_programming/string/trie/#_4","title":"\u7b97\u6cd5","text":"<p>\u5b57\u5178\u6811\u662f\u4e00\u68f5\u5ea6\u6570\u7b49\u4e8e\u5b57\u7b26\u8868\u5927\u5c0f\u7684\u591a\u53c9\u6811\uff0c\u589e\u3001\u5220\u3001\u67e5\u7684\u590d\u6742\u5ea6\u90fd\u662f\u5355\u8bcd\u957f\u5ea6 l \u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5373 O(l) \u3002</p>"},{"location":"competitive_programming/string/trie/#_5","title":"\u5e94\u7528","text":"<ul> <li>\u4ece\u5b57\u5178\u6811\u7684\u7684\u6839\u8282\u70b9DFS\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u5355\u8bcd\u7684\u5b57\u5178\u5e8f\u6392\u5e8f\u3002</li> </ul>"},{"location":"competitive_programming/string/z-func/","title":"Z\u51fd\u6570\uff08\u6269\u5c55KMP\uff09","text":""},{"location":"competitive_programming/string/z-func/#_1","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u5b57\u7b26\u4e32 s\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32 z\uff0cz[i] \u662f s[i, n - 1] \u4e0e s \u7684LCP\uff08\u6700\u957f\u516c\u5171\u524d\u7f00\uff09\u7684\u957f\u5ea6\u3002</p>"},{"location":"competitive_programming/string/z-func/#_2","title":"\u4ee3\u7801","text":"<pre><code>vector&lt;int&gt; ZFunction(string s) {\n    int n = s.length();\n    vector&lt;int&gt; z(n);\n    for (int i = 1, l = 0, r = 0; i &lt; n; ++i) {\n        if (i &lt;= r) z[i] = min(z[i - l], r - i + 1);\n        while (i + z[i] &lt; n &amp;&amp; s[z[i]] == s[i + z[i]]) z[i]++;\n        if (i + z[i] - 1 &gt; r) l = i, r = i + z[i] - 1;\n    }\n    return z;\n}\n</code></pre>"},{"location":"competitive_programming/string/z-func/#_3","title":"\u7b97\u6cd5","text":"<p>\u7ef4\u62a4\u5df2\u53d1\u73b0\u7684\u6700\u9760\u53f3\u4fa7\u7684\u5339\u914d\u6bb5 [l ,r]\uff0c\u5373\u7b97\u6cd5\u5f53\u524d\u626b\u63cf\u5230\u7684\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\u3002</p> <p>\u6ce8\u610f\u5230\u7b97\u6cd5\u4e2d <code>for</code> \u5faa\u73af\u7684\u521d\u59cb\u4f4d\u7f6e\u4e3a 1 \uff0c\u5982\u679c\u521d\u59cb\u4f4d\u7f6e\u4e3a 0 \u5219\u7b2c\u4e00\u6b21\u6267\u884c\u5faa\u73af\u65f6 [l, r] \u88ab\u8bbe\u7f6e\u6210 [0, n - 1] \uff0c\u7b97\u6cd5\u8fdb\u800c\u9000\u5316\u6210\u6734\u7d20\u7684 O(n^2) \u7248\u672c\u3002</p>"},{"location":"competitive_programming/string/z-func/#_4","title":"\u590d\u6742\u5ea6","text":"<ul> <li>\u65f6\u95f4\u3000O(n) \u6ce8\u610f\u5230 <code>for</code> \u5faa\u73af\u6700\u591a\u6267\u884c n \u6b21\uff0c\u53ea\u9700\u8bc1\u660e\u5185\u5c42 <code>while</code> \u5faa\u73af\u7684\u6267\u884c\u6b21\u6570\u4e0a\u7ebf\u662f O(n) \u7684\u3002\u4e0d\u96be\u8bc1\u660e <code>while</code> \u6bcf\u6b21\u6267\u884c\u5fc5\u7136\u4f7f\u53f3\u8fb9\u754c <code>r</code> \u589e\u5927 1\u3002</li> </ul>"},{"location":"data_base/","title":"\u4e3a\u4ec0\u4e48\u7814\u7a76\u6570\u636e\u5e93","text":"<p>\u5404\u79cd\u5404\u6837\u7684\u7a0b\u5e8f\u90fd\u9700\u7ef4\u62a4\u5927\u91cf\u6570\u636e\uff0c\u968f\u7740\u6570\u636e\u91cf\u7684\u589e\u591a\u3001\u5404\u79cd\u5e94\u7528\u5728\u903b\u8f91\u5c42\u9762\u590d\u6742\u6027\u7684\u63d0\u9ad8\uff0c\u8ba9\u5e94\u7528\u81ea\u5df1\u6765\u7ba1\u7406\u6570\u636e\u662f\u4e00\u4ef6\u7e41\u91cd\u7684\u5de5\u4f5c\u3002\u6570\u636e\u5e93 \u4f5c\u4e3a\u4e00\u79cd\u4e13\u95e8\u7ba1\u7406\u6570\u636e\u7684\u8f6f\u4ef6\u5c31\u51fa\u73b0\u4e86\uff0c\u5e94\u7528\u4e0d\u9700\u8981\u81ea\u5df1\u7ba1\u7406\u6570\u636e\uff0c\u800c\u662f\u901a\u8fc7\u6570\u636e\u5e93\u8f6f\u4ef6 \u63d0\u4f9b\u7684\u63a5\u53e3 \u6765\u8bfb\u5199\u6570\u636e\u3002\u81f3\u4e8e\u6570\u636e\u5982\u4f55\u5b58\u50a8\u5230\u6587\u4ef6\uff0c\u5c31\u662f\u6570\u636e\u5e93\u8f6f\u4ef6\u7684\u5de5\u4f5c\uff0c\u5e94\u7528\u81ea\u5df1\u65e0\u987b\u5173\u5fc3\u3002</p>"},{"location":"economics/macro_economics/","title":"\u5b8f\u89c2\u7ecf\u6d4e\u5b66","text":""},{"location":"economics/micro_economics/","title":"\u5fae\u89c2\u7ecf\u6d4e\u5b66","text":""},{"location":"economics/micro_economics/#_2","title":"\u7ecf\u6d4e\u5b66\u5341\u5927\u539f\u7406","text":""},{"location":"economics/micro_economics/#_3","title":"\u4eba\u4eec\u5982\u4f55\u505a\u51fa\u51b3\u7b56","text":"<ol> <li> <p>\u4eba\u4eec\u9762\u4e34\u6743\u8861\u53d6\u820d\u3002</p> </li> <li> <p>\u67d0\u79cd\u4e1c\u897f\u7684\u6210\u672c\u662f\u4e3a\u4e86\u5f97\u5230\u4ed6\u6240\u653e\u5f03\u7684\u4e1c\u897f</p> </li> <li> <p>\u7406\u6027\u4eba\u8003\u8651\u8fb9\u9645\u91cf</p> </li> <li> <p>\u4eba\u4eec\u4f1a\u5bf9\u6fc0\u52b1\u505a\u51fa\u53cd\u5e94</p> </li> </ol>"},{"location":"economics/micro_economics/#_4","title":"\u4eba\u4eec\u5982\u4f55\u76f8\u4e92\u5f71\u54cd","text":"<ol> <li> <p>\u8d38\u6613\u53ef\u4ee5\u4f7f\u6bcf\u4e2a\u4eba\u7684\u72b6\u51b5\u90fd\u53d8\u5f97\u66f4\u597d</p> </li> <li> <p>\u5e02\u573a\u901a\u5e38\u662f\u7ec4\u7ec7\u7ecf\u6d4e\u4e92\u52a8\u7684\u4e00\u79cd\u597d\u65b9\u6cd5</p> </li> <li> <p>\u653f\u5e9c\u6709\u65f6\u53ef\u4ee5\u6539\u5584\u5e02\u573a\u7ed3\u679c</p> </li> </ol>"},{"location":"economics/micro_economics/#_5","title":"\u6574\u4f53\u7ecf\u6d4e\u5982\u4f55\u8fd0\u884c","text":"<ol> <li> <p>\u4e00\u56fd\u7684\u751f\u6d3b\u6c34\u5e73\u53d6\u51b3\u4e8e\u5b83\u751f\u4ea7\u7269\u54c1\u548c\u670d\u52a1\u7684\u80fd\u529b</p> </li> <li> <p>\u5f53\u653f\u5e9c\u53d1\u578b\u4e86\u8fc7\u591a\u8d27\u5e01\u65f6\uff0c\u7269\u4ef7\u4e0a\u5347</p> </li> <li> <p>\u793e\u4f1a\u9762\u4e34\u901a\u8d27\u81a8\u80c0\u548c\u5931\u4e1a\u4e4b\u95f4\u7684\u77ed\u671f\u6743\u8861\u53d6\u820d</p> </li> </ol>"},{"location":"economics/micro_economics/#_6","title":"\u7ecf\u6d4e\u5b66\u5bb6\u7684\u601d\u8003\u65b9\u5f0f","text":""},{"location":"economics/micro_economics/#_7","title":"\u4f5c\u4e3a\u79d1\u5b66\u5bb6","text":"<p>\u7ecf\u6d4e\u5b66\u5bb6\u4f7f\u7528\u201c\u89c2\u5bdf\u3001\u7406\u8bba\u548c\u8fdb\u4e00\u6b65\u89c2\u5bdf\u201d\u7684\u65b9\u6cd5\u7814\u7a76\u95ee\u9898</p> <p>\u7ecf\u6d4e\u5b66\u4f7f\u7528\u7b80\u5316\u6a21\u578b\u6765\u63cf\u8ff0\u95ee\u9898\uff0c\u4e3e\u4f8b\u6765\u8bf4</p> <ul> <li> <p>\u7b2c\u4e00\u4e2a\u6a21\u578b\uff1a\u5faa\u73af\u6d41\u91cf\u56fe</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u6a21\u578b\uff1a\u751f\u4ea7\u53ef\u80fd\u6027\u8fb9\u754c</p> </li> </ul>"},{"location":"economics/micro_economics/#_8","title":"\u4f5c\u4e3a\u653f\u7b56\u987e\u95ee","text":"<p>\u5b9e\u8bc1\u5206\u6790 \u63cf\u8ff0\u4e16\u754c\u662f\u4ec0\u4e48\u6837\u5b50 \u89c4\u8303\u5206\u6790 \u63cf\u8ff0\u4e16\u754c\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50</p> <p>\u4f5c\u4e3a\u987e\u95ee\u7684\u7ecf\u6d4e\u5b66\u5bb6\u7ecf\u5e38\u4f1a\u7ed9\u51fa\u622a\u7136\u4e0d\u540c\u7684\u653f\u7b56\u5efa\u8bae\uff0c\u800c\u653f\u7b56\u5236\u5b9a\u8005\u4e5f\u7ecf\u5e38\u4e0d\u4e88\u91c7\u7eb3\u3002</p> <p>\u79d1\u5b66\u5224\u65ad\u548c\u4e2a\u4eba\u4ef7\u503c\u89c2\u90fd\u4f1a\u5f71\u54cd\u7ecf\u6d4e\u5b66\u5bb6\u7ed9\u51fa\u7684\u89c2\u70b9\u548c\u610f\u89c1\u3002</p>"},{"location":"economics/micro_economics/#_9","title":"\u76f8\u4e92\u4f9d\u5b58\u6027\u548c\u8d38\u6613\u7684\u597d\u5904","text":""},{"location":"industry/fiscal/amazon/2019_annual_report/","title":"\u4e9a\u9a6c\u900a2019\u5e74\u62a5","text":"<p>\u5728\u7ebf\u6587\u6863 - \u4e9a\u9a6c\u900a2019\u5e74\u62a5</p>"},{"location":"industry/fiscal/apple/2019_annual_report/","title":"\u82f9\u679c2019\u5e74\u62a5","text":"<p>\u5728\u7ebf\u6587\u6863 - \u82f9\u679c2019\u5e74\u62a5</p>"},{"location":"industry/fiscal/google/2019_annual_report/","title":"\u8c37\u6b4c2019\u5e74\u62a5","text":"<p>\u5728\u7ebf\u6587\u6863 - \u8c37\u6b4c2019\u5e74\u62a5</p>"},{"location":"industry/fiscal/microsoft/2019_annual_report/","title":"\u5fae\u8f6f2019\u5e74\u62a5","text":"<p>\u5728\u7ebf\u6587\u6863 - \u5fae\u8f6f2019\u5e74\u62a5</p>"},{"location":"industry/fiscal/tencent/2019_annual_report/","title":"\u817e\u8baf2019\u5e74\u62a5","text":"<p>\u5728\u7ebf\u6587\u6863 - \u817e\u8baf2019\u5e74\u62a5</p>"},{"location":"industry/reading/on_china/","title":"\u8bba\u4e2d\u56fd","text":""},{"location":"industry/reading/reading_list/","title":"\u4e66\u5355","text":"<ul> <li>\u4ea8\u5229.\u57fa\u8f9b\u683c\uff0c\u300a\u8bba\u4e2d\u56fd\u300b</li> <li>\u585e\u7f2a\u5c14.\u4ea8\u5ef7\u987f\uff0c\u300a\u6587\u660e\u7684\u51b2\u7a81\u300b</li> <li>\u5c24\u74e6\u5c14.\u8d6b\u62c9\u5229\uff0c\u300a\u4eca\u65e5\u7b80\u53f2\u300b</li> <li>\u5e15\u62c9\u683c\u00b7\u5eb7\u7eb3\uff0c\u300a\u8d85\u7ea7\u7248\u56fe\u300b</li> <li>\u5e03\u83b1\u6069\u00b7\u963f\u745f\uff0c\u300a\u590d\u6742\u7ecf\u6d4e\u5b66\u300b</li> <li>\u4e54\u8212\u4e9a.\u5e93\u73c0.\u96f7\u9ed8\uff0c\u300a\u7b2c\u4e03\u611f\u300b</li> <li> <p>\u94b1\u7a46\uff0c\u300a\u8bba\u8bed\u65b0\u89e3\u300b</p> </li> <li> <p>\u5f3a\u4eba\u54f2\u5b66\uff1a     *\u300a\u963f\u5fb7\u52d2\u5fc3\u7406\u5b66\u300b\u3001\u300a\u88ab\u8ba8\u538c\u7684\u52c7\u6c14\u300b</p> </li> <li>\u7cfb\u7edf\u7406\u8bba\uff1a<ul> <li>\u300a\u7b2c\u4e94\u9879\u4fee\u70bc\u300b\u3001\u300a\u7cfb\u7edf\u4e4b\u7f8e\u300b\u3001\u300a\u7cfb\u7edf\u601d\u8003\u300b</li> </ul> </li> <li>\u7ea6\u675f\u7406\u8bba\uff1a<ul> <li>\u300a\u76ee\u6807\u300b\u3001\u300a\u9009\u62e9\u300b\u3001\u300a\u4f9d\u7136\u4e0d\u8db3\u591f\u300b\u3001\u300a\u5173\u952e\u94fe\u300b\u3001\u300a\u56fe\u89e3 TOC \u95ee\u9898\u89e3\u51b3\u6cd5\u300b</li> </ul> </li> <li>\u884c\u4e3a\u5fc3\u7406\u5b66\uff1a<ul> <li>\u300a\u6e05\u9192\u601d\u8003\u7684\u827a\u672f\u300b\u3001\u300a\u6e05\u9192\u601d\u8003\u7684\u7b56\u7565\u300b\u3001\u300a\u601d\u8003\u5feb\u8fd0\u6162\u300b</li> </ul> </li> <li>\u53cd\u8106\u5f31\uff1a<ul> <li>\u300a\u53cd\u8106\u5f31\u300b</li> </ul> </li> <li>\u6807\u5ea6\u7387\uff1a<ul> <li>\u300a\u89c4\u6a21\u300b \u300a\u5b59\u5b50\u5175\u6cd5\u300b\u3001\u300a\u8bba\u8bed\u65b0\u89e3\u300b\u3001\u300aPower base selling\u300b\u3001\u300a\u9500\u552e\u5de8\u4eba\u300b\u3001\u300a\u7ade\u4e89\u6027\u9500\u552e\u300b</li> </ul> </li> </ul>"},{"location":"languages/cpp/basic/","title":"C++\u57fa\u7840","text":""},{"location":"languages/cpp/basic/#_1","title":"\u53d8\u91cf\u5b9a\u4e49","text":""},{"location":"languages/cpp/basic/#auto","title":"<code>auto</code>\u53d8\u91cf","text":"<p>\u7531\u7f16\u8bd1\u5668\u6839\u636e\u4e0a\u4e0b\u6587\u81ea\u52a8\u786e\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u5982\uff1a <pre><code>auto i = 3;\nauto f = 4.0f;\n</code></pre></p>"},{"location":"languages/cpp/basic/#_2","title":"\u6307\u9488\u53d8\u91cf\u7684\u52a8\u6001\u751f\u6210\u548c\u5220\u9664","text":"<ul> <li>\u6307\u9488\u53d8\u91cf\u6240\u6307\u5185\u5b58\u53ef\u4ee5\u901a\u8fc7<code>new/delete</code>\u8fd0\u7b97\u7b26\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u751f\u6210\u548c\u5220\u9664\uff0c\u5982\uff1a <pre><code>int* ptr = new int;\nint* array = new int[10];\ndelete ptr;\ndelete[] array;\n</code></pre></li> </ul>"},{"location":"languages/cpp/basic/#_3","title":"\u5de6\u503c\u5f15\u7528","text":"<ul> <li> <p>\u5177\u540d\u53d8\u91cf\u7684\u522b\u540d\uff1a\u7c7b\u578b\u540d&amp; \u5f15\u7528\u540d \u53d8\u91cf\u540d <pre><code>int v0;\nint&amp; v1 = v0;\n</code></pre> \u8fd9\u91cc<code>v1</code>\u662f<code>v0</code>\u7684\u5f15\u7528\uff0c\u4ed6\u4eec\u5728\u5185\u5b58\u4e2d\u662f\u540c\u4e00\u5355\u5143\u7684\u4e24\u4e2a\u4e0d\u540c\u540d\u5b57</p> </li> <li> <p>\u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff08\u8d4b\u521d\u503c\uff09\u3002</p> </li> <li> <p>\u88ab\u5f15\u7528\u53d8\u91cf\u540d\u53ef\u4ee5\u662f\u7ed3\u6784\u53d8\u91cf\u6210\u5458\uff0c\u5982<code>s.m</code>\u3002</p> </li> <li> <p>\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u8868\u793a\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u6539\u53d8\u5f62\u53c2\u5c06\u6539\u53d8\u5b9e\u53c2\u3002 \u5982\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u5c06\u4ea4\u6362\u5b9e\u53c2\u503c\uff1a <pre><code>void swap(int&amp; a, int&amp; b) {\n    int tmp = b;\n    b = a;\n    a = tmp;\n}\n</code></pre></p> </li> <li> <p>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4f46\u4e0d\u80fd\u662f\u51fd\u6570\u7684\u4e34\u65f6\u53d8\u91cf\u3002</p> </li> </ul>"},{"location":"languages/cpp/basic/#c11","title":"\u53f3\u503c\u5f15\u7528\uff08C++11 \u5f15\u5165\uff09","text":"<ul> <li> <p>\u53f3\u503c\uff1a\u4e0d\u80fd\u53d6\u5730\u5740\u7684\u3001\u6ca1\u6709\u540d\u5b57\u7684\u5c31\u662f\u53f3\u503c</p> </li> <li> <p>\u533f\u540d\u53d8\u91cf\uff08\u4e34\u65f6\u53d8\u91cf\uff09\u7684\u522b\u540d\uff1a\u7c7b\u578b\u540d&amp;&amp; \u5f15\u7528\u540d \u8868\u8fbe\u5f0f\uff0c\u5982 <pre><code>int&amp;&amp; sum = 3 + 4;\nfloat&amp;&amp; res = ReturnRvalue(f1, f2);\n</code></pre></p> </li> <li> <p>\u53f3\u503c\u5f15\u7528\u7684\u5178\u578b\u5e94\u7528\u662f\u5728\u51fd\u6570\u53c2\u6570\u4e2d\uff0c\u76ee\u7684\u662f\u51cf\u5c11\u4e34\u65f6\u53d8\u91cf\u7684\u62f7\u8d1d\u5f00\u9500\uff0c\u4f8b\u5982\uff1a <pre><code>void AcceptRvalueRef(T&amp;&amp; s) {...}\n</code></pre></p> </li> </ul>"},{"location":"languages/cpp/basic/#_4","title":"\u53d8\u91cf\u521d\u59cb\u5316\u3001\u7c7b\u578b\u63a8\u5bfc\u3001\u57fa\u4e8e\u8303\u56f4\u7684\u5faa\u73af","text":""},{"location":"languages/cpp/basic/#_5","title":"\u521d\u59cb\u5316\u5217\u8868","text":"<ul> <li> <p>\u7528<code>{}``\u5305\u62ec\u8d77\u6765\u7684\u5143\u7d20\u5e8f\u5217\uff0c\u53ef\u4ee5\u7528\u6765\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5982 <pre><code>int a[] = {1, 3, 5};\nint a[] {1, 3, 5};\n</code></pre> \u521d\u59cb\u5316\u5217\u8868\u53ef\u4ee5\u518d</code>{}<code>\u4e4b\u524d\u4f7f\u7528</code>=`\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u3002</p> </li> <li> <p>\u53d8\u91cf\u7684\u521d\u59cb\u5316\u65b9\u5f0f <pre><code>int a = 3 + 5;\nint a = {3 + 5};\nint a(3 + 5);   // \u8c03\u7528int\u7684\u6784\u9020\u51fd\u6570\nint a{3 + 5};\nint* i = new int(10);\ndouble* d = new double{1.2f};   // \u521d\u59cb\u5316\u5217\u8868\n</code></pre></p> </li> </ul>"},{"location":"languages/cpp/basic/#_6","title":"\u7c7b\u578b\u63a8\u5bfc","text":"<p>\u4f7f\u7528<code>decltype</code>\u53ef\u4ee5\u5bf9\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\u7ed3\u679c\u7684\u7c7b\u578b\u8fdb\u884c\u63a8\u5bfc\uff0c\u5982 <pre><code>struct {\n    char* name;\n} anon_u;\n\nstruct {\n    int d;\n    decltype(anon_u) id;\n} anon_s[100];  // \u533f\u540d\u7684struct\u6570\u7ec4\n\nint main() {\n    decltype(anon_s) as;\n    cin &gt;&gt; as[0].id.name;\n}\n</code></pre></p>"},{"location":"languages/cpp/basic/#for","title":"\u57fa\u4e8e\u8303\u56f4\u7684<code>for</code>\u5faa\u73af\u8bed\u53e5","text":"<p>\u5728\u5faa\u73af\u5934\u7684\u5706\u62ec\u53f7\u4e2d\uff0c\u7531\u5192\u53f7<code>:</code>\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u9002\u7528\u4e8e\u8fed\u4ee3\u7684\u53d8\u91cf\uff0c\u7b2c\u4e8c\u90e8\u5206\u5219\u8868\u793a\u88ab\u8fed\u4ee3\u7684\u8303\u56f4\uff0c\u5982\uff1a <pre><code>int arr[3] = {1, 3, 5};\nfor (int e : arr)\n    //...\n</code></pre></p>"},{"location":"languages/cpp/basic/#_7","title":"\u51fd\u6570","text":""},{"location":"languages/cpp/basic/#_8","title":"\u51fd\u6570\u91cd\u8f7d","text":"<p>\u540c\u4e00\u540d\u79f0\u7684\u51fd\u6570\uff0c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u4e0d\u540c\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u88ab\u79f0\u4e3a\u201c\u51fd\u6570\u91cd\u8f7d\u201d\uff0c\u5982\uff1a <pre><code>void print(char* msg) {\n    cout &lt;&lt; \"message: \" &lt;&lt; msg &lt;&lt; endl;\n}\n\nvoid print(int score) {\n    cout &lt;&lt; \"score: \" &lt;&lt; score &lt;&lt; endl;\n}\n</code></pre></p> <p>\u51fd\u6570\u91cd\u8f7d\u8981\u6c42\u51fd\u6570\u5f62\u53c2\u4e0d\u540c\uff0c\u4e0d\u80fd\u51fa\u73b0\u4ec5\u4ec5\u8fd4\u56de\u503c\u4e0d\u540c\u7684\u60c5\u51b5\u3002\u7f16\u8bd1\u5668\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u5b9e\u53c2\u786e\u5b9a\u54ea\u4e00\u4e2a\u51fd\u6570\u88ab\u8c03\u7528\u3002</p> <p>\u591a\u4e2a\u540c\u540d\u51fd\u6570\u5b9e\u73b0\u4e4b\u95f4\uff0c\u5fc5\u987b\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u6709\u533a\u522b\u3002\u8fd4\u56de\u503c\u3001\u53c2\u6570\u540d\u79f0\u7b49\u4e0d\u80fd\u4f5c\u4e3a\u533a\u5206\u6807\u8bc6\u3002</p>"},{"location":"languages/cpp/basic/#_9","title":"\u51fd\u6570\u53c2\u6570\u7684\u7f3a\u7701\u503c","text":"<p>\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff08\u7f3a\u7701\u503c\uff09\uff0c\u8fd9\u6837\u5728\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u82e5\u4e0d\u63d0\u4f9b\u76f8\u5e94\u7684\u5b9e\u53c2\uff0c\u5219\u7f16\u8bd1\u5668\u81ea\u52a8\u5c06\u76f8\u5e94\u5f62\u53c2\u8bbe\u7f6e\u6210\u7f3a\u7701\u503c\uff0c\u5982\uff1a <pre><code>void print(char* msg = \"hello\") {\n    cout &lt;&lt; msg &lt;&lt; '#';\n}\n\nint main() {\n    print(\"Beijing...\");\n    print();\n    return 0;\n}\n</code></pre> \u8f93\u51fa\uff1a <pre><code>Beijing...#hello#\n</code></pre></p> <ul> <li>\u5e26\u7f3a\u7701\u503c\u7684\u51fd\u6570\u53c2\u6570\u5fc5\u987b\u653e\u5728\u6ca1\u6709\u7f3a\u7701\u503c\u7684\u51fd\u6570\u53c2\u6570\u540e\u9762\u3002</li> </ul>"},{"location":"languages/cpp/basic/#_10","title":"\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570","text":"<p>\u53ef\u4ee5\u5c06\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u7684\u4fe1\u606f\u653e\u5230\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u540e\u9762\u8fdb\u884c\u58f0\u660e\uff0c\u5982\uff1a</p> <ul> <li> <p>\u666e\u901a\u51fd\u6570\u58f0\u660e\u5f62\u5f0f\uff1a <pre><code>int func(char* ptr, int val);\n</code></pre></p> </li> <li> <p>\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570\u58f0\u660e\u5f62\u5f0f\uff1a <pre><code>auto func(char* ptr, int val) -&gt; int;\n</code></pre></p> </li> <li> <p>\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u5728\u539f\u672c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u4f4d\u7f6e\u4f7f\u7528<code>auto</code>\u5173\u952e\u5b57\u3002</p> </li> <li> <p>\u52a8\u673a\uff1a\u6709\u65f6\u51fd\u6570\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5e76\u4e0d\u80fd\u786e\u5b9a\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u800c\u9700\u8981\u901a\u8fc7<code>decl</code>\u83b7\u53d6\u53c2\u6570\u7684\u7c7b\u578b\u6765\u786e\u5b9a\u3002</p> </li> <li> <p>\u5e94\u7528\uff1a \u5728C++\u6a21\u677f\u7684\u5b9a\u4e49\u4e2d\uff0c\u6709\u65f6\u8fd4\u56de\u7c7b\u578b\u9700\u8981\u6839\u636e\u53c2\u6570\u7c7b\u578b\u7c7b\u786e\u5b9a\uff0c\u4f1a\u7528\u5230\u8fd9\u4e2a\u7279\u6027\u3002</p> </li> </ul>"},{"location":"languages/cpp/basic/#_11","title":"\u7c7b","text":""},{"location":"languages/cpp/basic/#_12","title":"\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u2014\u2014\u7c7b\uff1a","text":"<ul> <li> <p>\u4e00\u79cd\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\uff0c\u5305\u542b\u51fd\u6570\u4e0e\u6570\u636e\u7684\u7279\u6b8a\u201c\u7ed3\u6784\u4f53\u201d\uff0c\u6269\u5145C++\u8bed\u8a00\u7684\u7c7b\u578b\u4f53\u7cfb\u3002</p> </li> <li> <p>\u7c7b\u4e2d\u5305\u542b\u7684\u51fd\u6570\uff0c\u79f0\u4e3a \u6210\u5458\u51fd\u6570 \uff1b\u5305\u542b\u7684\u6570\u636e\uff0c\u79f0\u4e3a \u6570\u636e\u6210\u5458 \u3002</p> </li> <li> <p>\u7c7b\u4e2d\u51fd\u6570\u53ca\u53ef\u4ee5\u5728\u7c7b\u4e2d\u7ed9\u51fa\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5916\u7ed9\u51fa\u5b9a\u4e49\u3002</p> </li> <li> <p>\u7c7b\u7684\u6210\u5458\uff08\u51fd\u6570\u3001\u6570\u636e\uff09\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5206\u6210\u7ec4\uff0c\u4e0d\u540c\u7ec4\u8bbe\u7f6e\u4e0d\u540c\u7684\u8bbf\u95ee\u6743\u9650\u3002</p> </li> <li> <p>\u6743\u9650\u79cd\u7c7b\uff1a<code>public</code>, <code>private</code>, <code>protected</code>\u3002</p> </li> <li> <p>\u7c7b\u5b9a\u4e49\u540e\uff0c\u6838\u51fd\u6570\u5185\u5efa\u7684\u7c7b\u578b\u4e00\u6837\uff0c\u7528\u7c7b\u6765\u5b9a\u4e49\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u901a\u5e38\u88ab\u79f0\u4e3a \u5bf9\u8c61 \u3002</p> </li> <li> <p>\u901a\u8fc7\u201c\u5bf9\u8c61\u540d.\u6210\u5458\u540d\u201d\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\uff0c\u6216\u8c03\u7528\u5bf9\u8c61\u7684\u6570\u636e\u51fd\u6570\uff0c\u4f46\u4ec5\u9650\u4e8e\u8bbf\u95ee<code>public</code>\u6743\u9650\u7684\u6210\u5458\u3002</p> </li> <li> <p>\u5728\u7c7b\u5916\u5b9a\u4e49\u6210\u5458\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u540d\u524d\u8981\u52a0\u4e0a\u7c7b\u540d\u9650\u5b9a\uff0c\u683c\u5f0f\u4e3a\uff1a<code>\u7c7b\u540d::\u51fd\u6570\u540d</code>\uff0c\u5176\u4e2d<code>::</code>\u79f0\u4e3a \u57df\u8fd0\u7b97\u7b26 \u3002</p> </li> </ul> <p>\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7c7b<code>class</code></p> <pre><code>// matrix.h\n\n#ifndef MATRIX_H\n#define MATRIX_H\n\nclass Matrix {\n    int data[6][6];\n\n   public:\n    void fill(char dir);\n};\n\n#endif\n</code></pre> <p>\u5728\u5b9e\u73b0\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7c7b<code>class</code></p> <pre><code>// matrix.cpp\n\n#include \"matrix.h\"\n\nvoid Matrix::fill(char dir) {\n    //...\n}\n</code></pre> <ul> <li> <p>\u901a\u5e38\uff0c\u7c7b\u7684\u58f0\u660e\u653e\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u800c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u5219\u653e\u5728\u5b9e\u73b0\u6587\u4ef6\u4e2d\u3002</p> </li> <li> <p>\u4e3a\u4e86\u4fbf\u4e8e\u7ba1\u7406\u548c\u4ee3\u7801\u590d\u7528\uff0c\u4e00\u822c\u662f\u5c06\u4e0d\u540c\u7684\u7c7b\u5206\u522b\u4fdd\u5b58\u4e3a\u4e0d\u540c\u7684\u5934\u6587\u4ef6\u548c\u5b9e\u73b0\u6587\u4ef6\u3002</p> </li> </ul>"},{"location":"languages/cpp/basic/#_13","title":"\u6210\u5458\u51fd\u6570\u7684\u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f","text":"<p>\u53ef\u4ee5\u5728\u7c7b\u7684\u5b9a\u4e49\u5185\u90e8\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u7528<code>::</code>\u8fd0\u7b97\u7b26\u5728\u5916\u90e8\u5b9e\u73b0\u3002</p> <pre><code>class Matrix {\n    public:\n    void fill(char dir) {\n        //...\n    }\n};\n\nvoid Matrix::fill(char dir) {\n    //...\n};\n</code></pre>"},{"location":"languages/cpp/basic/#this","title":"<code>this</code>\u6307\u9488","text":"<p>\u6240\u6709\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u4e2d\uff0c\u9690\u542b\u7740\u4e00\u4e2a\u53ea\u60f3\u5f53\u524d\u5bf9\u8c61\u7684\u6307\u9488\u53d8\u91cf\u2014\u2014<code>this</code>\u3002</p> <ul> <li>\u8fd9\u4e5f\u662f \u6210\u5458\u51fd\u6570 \u4e0e \u666e\u901a\u51fd\u6570 \u7684\u91cd\u8981\u533a\u522b</li> </ul>"},{"location":"languages/cpp/basic/#_14","title":"\u8bbf\u95ee\u6743\u9650","text":"<p>C++\u89c4\u5b9a\u7c7b\u7684\u6210\u5458\u7f3a\u7701\u4e3a<code>private</code>\u6743\u9650\u3002</p> <ul> <li> <p>\u5bf9\u8c61\u4f7f\u7528<code>.</code>\u64cd\u4f5c\u7b26\u8bbf\u95ee\u5bf9\u8c61\u7684<code>public</code>\u6210\u5458\u3002</p> </li> <li> <p>\u5bf9\u8c61\u6307\u9488\u4f7f\u7528<code>-&gt;</code>\u64cd\u4f5c\u7b26\u8bbf\u95ee\u6240\u6307\u5bf9\u8c61\u7684\u516c\u6709\u6210\u5458\u3002</p> </li> </ul>"},{"location":"languages/cpp/basic/#_15","title":"\u53cb\u5143","text":"<p>\u6709\u65f6\u9700\u8981\u5141\u8bb8\u67d0\u4e9b\u51fd\u6570\u8bbf\u95ee\u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458\uff0c\u53ef\u4ee5\u901a\u8fc7\u58f0\u660e\u8be5 \u51fd\u6570 \u4e3a \u7c7b \u7684\u201c\u53cb\u5143\u201d\u6765\u5b9e\u73b0\u3002 <pre><code>class Test {\n    int id;\n\n   public:\n    friend void print(Test obj);\n    //...\n};\n\nvoid print(Test obj) { cout &lt;&lt; obj.id &lt;&lt; endl; }\n</code></pre> <code>Test</code>\u7c7b\u4e2d\u58f0\u660e\u4e86<code>Test</code>\u7c7b\u7684\u53cb\u5143\u51fd\u6570<code>print</code>\uff0c\u8be5\u51fd\u6570\u5728\u5b9e\u73b0\u65f6\u53ef\u4ee5\u8bbf\u95ee<code>Test</code>\u7c7b\u5b9a\u4e49\u7684\u51fd\u6570\u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458\u3002</p> <p>\u5de5\u7a0b\u4e2d\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u6cd5\u662f\u5c06UT\u4e2d\u7684\u6d4b\u8bd5\u51fd\u6570\u751f\u547d\u6210\u88ab\u6d4b\u8bd5\u7c7b\u7684\u53cb\u5143\uff0c\u4ee5\u4fbf\u5728\u6d4b\u8bd5\u51fd\u6570\u4e2d\u8bbf\u95ee\u88ab\u6d4b\u8bd5\u7c7b\u7684\u79c1\u6709\u6210\u5458\u3002</p>"},{"location":"languages/cpp/basic/#_16","title":"\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570","text":"<p>\u89e3\u91ca\u5982\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\uff1a <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Test {\n   public:\n    Test() { cout &lt;&lt; \"Test()\" &lt;&lt; endl; }\n    Test(const Test&amp; src) { cout &lt;&lt; \"Test(const Test&amp;)\" &lt;&lt; endl; }\n    ~Test() { cout &lt;&lt; \"~Test()\" &lt;&lt; endl; }\n};\n\nvoid func1(Test obj) { cout &lt;&lt; \"func1()...\" &lt;&lt; endl; }\n\nTest func2() {\n    cout &lt;&lt; \"func2()...\" &lt;&lt; endl;\n    return Test();\n}\n\nint main() {\n    cout &lt;&lt; \"main()...\" &lt;&lt; endl;\n    Test t;\n    func1(t);\n    t = func2();\n    return 0;\n}\n</code></pre></p> <p>\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u4f1a\u5728\u51fd\u6570\u7531\u5b9e\u53c2\u83b7\u5f97\u5f62\u53c2\u65f6\u8c03\u7528\u3002</p> <p>\u8f93\u51fa <pre><code>main()...\nTest()\nTest(const Test&amp;)\nfunc1()...\n~Test()\nfunc2()...\nTest()\n~Test()\n~Test()\n</code></pre></p>"},{"location":"languages/cpp/basic/#_17","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26 <code>=</code> \u91cd\u8f7d","text":"<p>\u89e3\u91ca\u5982\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Test {\n   public:\n    Test(int _id) : id(_id) { cout &lt;&lt; \"obj_\" &lt;&lt; id &lt;&lt; \"created\\n\"; }\n\n    Test&amp; operator= (const Test&amp; right) {\n        if (this == &amp;right) cout &lt;&lt; \"same obj!\\n\";\n        else {\n            cout &lt;&lt; \"obj_\" &lt;&lt; id &lt;&lt; \" = obj_\" &lt;&lt; right.id &lt;&lt; endl;\n        }\n        return *this;\n    }\n\n   private:\n    int id;\n};\n\nint main() {\n    Test a(1), b(2);\n\n    cout &lt;&lt; \"a = a: \";\n    a = a;\n\n    cout &lt;&lt; \"a = b: \";\n    a = b;\n\n    return 0;\n}\n}\n</code></pre></p> <p>\u8f93\u51fa <pre><code>obj_1created\nobj_2created\na = a: same obj!\na = b: obj_1 = obj_2\n</code></pre></p>"},{"location":"languages/cpp/basic/#_18","title":"\u6d41\u8fd0\u7b97\u7b26 <code>&lt;&gt;</code> \u91cd\u8f7d","text":"<p>\u89e3\u91ca\u5982\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Test {\n    int id;\n\n   public:\n    Test(int _id) : id(_id) {\n        cout &lt;&lt; \"obj_\" &lt;&lt; id &lt;&lt; \"created\\n\";\n    }\n\n    friend istream&amp; operator&gt;&gt; (istream&amp; in, Test&amp; dst);\n    friend ostream&amp; operator&lt;&lt; (ostream&amp; out, const Test&amp; src);\n};\n\nistream&amp; operator&gt;&gt; (istream&amp; in, Test&amp; dst) {\n    in &gt;&gt; dst.id;\n    return in;\n}\n\nostream&amp; operator&lt;&lt; (ostream&amp; out, const Test&amp; src) {\n    cout &lt;&lt; src.id &lt;&lt; endl;\n    return out;\n}\n\nint main() {\n    Test obj(1);\n    cout &lt;&lt; obj;\n\n    cin &gt;&gt; obj;\n    cout &lt;&lt; obj;\n\n    return 0;\n}\n</code></pre></p> <ul> <li> <p>\u5c06 \u6d41\u8fd0\u7b97\u7b26 \u58f0\u660e\u6210 Test \u7c7b\u7684\u53cb\u5143\uff0c\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u8bbf\u95ee\u5176\u79c1\u6709\u53d8\u91cf\u3002</p> </li> <li> <p>\u8fd4\u56de\u6d41\u5bf9\u8c61\u662f\u4e3a\u4e86\u652f\u6301\u6d41\u8fd0\u7b97\u7b26\u7684\u94fe\u5f0f\u64cd\u4f5c\u3002</p> </li> </ul> <p>\u8f93\u51fa\uff08\u4e2d\u95f4\u8f93\u5165\u6d41\u5185\u5bb9\u4e3a 2 \uff09 <pre><code>obj_1created\n1\n2\n2\n</code></pre></p>"},{"location":"languages/cpp/basic/#_19","title":"\u51fd\u6570\u8fd0\u7b97\u7b26 <code>()</code> \u91cd\u8f7d","text":"<p>\u89e3\u91ca\u5982\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Test {\n   public:\n    int operator()(int a, int b) {\n        cout &lt;&lt; \"operator() called. \" &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b &lt;&lt; endl;\n        return a + b;\n    }\n};\n\nint main() {\n    Test sum;\n    int s = sum(3, 4);\n    cout &lt;&lt; \"a + b = \" &lt;&lt; s &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre></p> <p>sum\u5bf9\u8c61\u770b\u4e0a\u53bb\u50cf\u4e00\u4e2a\u51fd\u6570\uff0c\u6545\u4e5f\u79f0\u201c\u51fd\u6570\u5bf9\u8c61\u201d\u3002</p> <p>\u8f93\u51fa <pre><code>operator() called. 3 4\na + b = 7\n</code></pre></p>"},{"location":"languages/cpp/basic/#-","title":"\u4e0b\u6807\u8fd0\u7b97\u7b26 <code>[]</code> \u548c <code>++/--</code> \u81ea\u589e\u51cf\u8fd0\u7b97\u7b26","text":""},{"location":"languages/cpp/basic/#_20","title":"\u4e0b\u6807\u8fd0\u7b97\u7b26","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\u4f53\u73b0\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u201c\u5305\u88c5\u201d\u7684\u601d\u60f3\uff0c\u8ba9\u539f\u672c\u53ea\u652f\u6301\u6570\u5b57\u7684<code>[]</code>\u8fd0\u7b97\u7b26\u5bf9\u5916\u652f\u6301\u5b57\u7b26\u4e32\u7c7b\u578b\u7d22\u5f15\u3002 <pre><code>#include &lt;iostream&gt;\n#include &lt;string.h&gt;\n\nusing namespace std;\n\nchar week_name[7][4] = {\"mon\", \"tu\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"};\n\nclass WeekTemp {\n   public:\n    int&amp; operator[](const char* name) {\n        for (int i = 0; i &lt; 7; i++) {\n            if (strcmp(week_name[i], name) == 0) return temp[i];\n        }\n    }\n\n   private:\n    int temp[7];\n};\n\nint main() {\n    WeekTemp beijing;\n    beijing[\"mon\"] = -3;\n    beijing[\"tu\"] = -1;\n    cout &lt;&lt; \"Monday Temperture: \" &lt;&lt; beijing[\"mon\"] &lt;&lt; endl;\n    return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa <pre><code>Monday Temperture: -3\n</code></pre></p>"},{"location":"languages/cpp/basic/#-_1","title":"\u524d\u7f00<code>++/--</code>\u4e0e\u540e\u7f00<code>++/--</code>","text":"<p>\u524d\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u58f0\u660e <pre><code>ReturnType operator++();\nReturnType operator--();\n</code></pre></p> <p>\u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u58f0\u660e <pre><code>ReturnType operator++(int dummy);\nReturnType operator--(int dummy);\n</code></pre></p> <p>\u901a\u8fc7\u5728\u51fd\u6570\u53c2\u6570\u4e2d\u7684\u54d1\u5143\u53c2\u6570<code>dummy</code>\u6765\u533a\u5206\u524d\u7f00\u548c\u540e\u7f00\u7684\u540c\u540d\u91cd\u8f7d\u3002</p> <p>\u54d1\u5143\uff1a\u51fd\u6570\u4f53\u8bed\u53e5\u4e2d\u6ca1\u6709\u4f7f\u7528\u8be5\u53c2\u6570\u3002</p>"},{"location":"languages/cpp/basic/#_21","title":"\u9759\u6001\u6210\u5458\u548c\u5e38\u91cf\u6210\u5458","text":""},{"location":"languages/cpp/basic/#_22","title":"\u9759\u6001\u6210\u5458","text":"<p><code>static</code>\u4fee\u9970\u7684\u6570\u636e\u6210\u5458\u96b6\u5c5e\u4e8e\u7c7b\u3002</p> <ul> <li> <p>\u9759\u6001\u6570\u636e\u6210\u5458\u88ab\u8be5\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff08\u5373\u6240\u6709\u5bf9\u8c61\u4e2d\u7684\u8fd9\u4e2a\u6570\u636e\u57df\u5904\u4e8e\u540c\u4e00\u5185\u5b58\u4f4d\u7f6e\uff09</p> </li> <li> <p>\u9759\u6001\u6570\u636e\u6210\u5458\u8981\u5728 \u5b9e\u73b0\u6587\u4ef6 \u4e2d\u8d4b\u521d\u503c\uff0c\u683c\u5f0f\u4e3a\uff1a <code>Type ClassName::static_var = Value;</code></p> </li> </ul> <p>\u5bf9\u4e8e\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4e0d\u63d0\u4f9b\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5b83\u4eec\u4e0d\u80fd\u8c03\u7528\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u3002</p> <p>\u7c7b\u7684\u9759\u6001\u6210\u5458\u65e2\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u6765\u8bbf\u95ee\u3002</p> <p>\u89e3\u91ca\u5982\u4e0b\u4ee3\u7801\u884c\u4e3a\uff1a</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Test {\n   public:\n    Test() { count++; }\n    ~Test() { count--; }\n    static int how_many() { return count; }\n\n   private:\n    static int count;\n};\n\nint Test::count = 0;\n\nvoid print(Test t) { cout &lt;&lt; \"in print(), Test#: \" &lt;&lt; t.how_many() &lt;&lt; endl; }\n\nint main() {\n    Test t1;\n    cout &lt;&lt; \"Test#: \" &lt;&lt; Test::how_many() &lt;&lt; endl;\n\n    Test t2 = t1;\n    cout &lt;&lt; \"Test#: \" &lt;&lt; Test::how_many() &lt;&lt; endl;\n\n    print(t2);\n\n    cout &lt;&lt; \"Test#: \" &lt;&lt; t1.how_many() &lt;&lt; \", \" &lt;&lt; t2.how_many() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa <pre><code>Test#: 1\nTest#: 1\nin print(), Test#: 1\nTest#: 0, 0\n</code></pre></p> <p>\u6ce8\u610f\u5230 <code>t2 = t1;</code> \u6b64\u5904\u8c03\u7528\u7684\u662f<code>=</code>\u8fd0\u7b97\u7b26\uff0c\u800c<code>print(t2);</code>\u8c03\u7528\u7684\u662f \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \uff0c\u4f46\u5728<code>Test</code>\u91cc\u9762\u5747\u672a\u5b9a\u4e49\u884c\u4e3a\u3002\u4f46 <code>print(t2);</code> \u8fd4\u56de\u65f6\u8c03\u7528\u4e86 \u6790\u6784\u51fd\u6570 \uff0c\u6545\u6700\u540e\u4e00\u884c\u9759\u6001\u6210\u5458<code>count</code>\u53d8\u6210\u4e860\u3002</p>"},{"location":"languages/cpp/basic/#_23","title":"\u5e38\u91cf\u6210\u5458","text":"<p><code>const</code>\u4fee\u9970\u7684\u6570\u636e\u6210\u5458\uff0c\u79f0\u4e3a\u7c7b\u7684\u5e38\u91cf\u6570\u636e\u6210\u5458\uff0c\u5728\u5bf9\u8c61\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u91cc\u4e0d\u53ef\u6539\u53d8\u3002</p> <ul> <li>\u5e38\u91cf\u6570\u636e\u6210\u5458\u53ea\u80fd\u5728\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u88ab\u8bbe\u7f6e\uff0c\u4e0d\u80fd\u5728\u51fd\u6570\u4f53\u4e2d\u901a\u8fc7\u8d4b\u503c\u8bbe\u7f6e\u3002</li> </ul> <p><code>const</code>\u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff0c\u5219\u8be5\u6210\u5458\u51fd\u6570\u5728\u5b9e\u73b0\u65f6\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6570\u636e\u6210\u5458 \u2014\u2014\u2014\u2014 \u5373\u9759\u6001\u51fd\u6570\u4e0d\u80fd\u6539\u53d8\u5bf9\u8c61\u72b6\u6001\u3002</p> <ul> <li>\u82e5\u5bf9\u8c61\u88ab\u5b9a\u4e49\u4e3a\u5e38\u91cf\uff0c\u5219\u5b83\u53ea\u80fd\u8c03\u7528\u4ee5<code>const</code>\u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff0c\u5176\u4ed6\u666e\u901a\u6210\u5458\u51fd\u6570\u5219\u4e0d\u5141\u8bb8\u8c03\u7528\u3002</li> </ul> <p>\u89e3\u91ca\u5982\u4e0b\u4ee3\u7801\u884c\u4e3a</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Test {\n   public:\n    Test(int id) : ID(id) {}\n    int MyID() const { return ID; }\n    int Who() { return ID; }\n\n   private:\n    const int ID;\n};\n\nint main() {\n    Test obj1(12231031);\n    cout &lt;&lt; \"ID_1 = \" &lt;&lt; obj1.MyID() &lt;&lt; endl;\n    cout &lt;&lt; \"ID_2 = \" &lt;&lt; obj1.Who() &lt;&lt; endl;\n\n    const Test obj2(1602401);\n    cout &lt;&lt; \"id_1: \" &lt;&lt; obj2.MyID() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa <pre><code>ID_1 = 12231031\nID_2 = 12231031\nid_1: 1602401\n</code></pre></p>"},{"location":"languages/cpp/basic/#_24","title":"\u5bf9\u8c61\u7ec4\u5408","text":"<p>\u53ef\u4ee5\u5728\u7c7b\u4e2d\u4f7f\u7528\u5176\u4ed6\u7c7b\u6765\u5b9a\u4e49\u6570\u636e\u6210\u5458\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u5b50\u5bf9\u8c61\u201d\u3002\u8fd9\u79cd\u5305\u542b\u5173\u7cfb\u79f0\u4e3a \u7ec4\u5408 \uff0c\u7ec4\u5408\u5173\u7cfb\u53ef\u4ee5\u5d4c\u5957\u3002</p> <p>\u5b50\u5bf9\u8c61\u6784\u9020\u65f6\u82e5\u9700\u8981\u53c2\u6570\uff0c\u5219\u5e94\u5728\u5f53\u524d\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684 \u521d\u59cb\u5316\u5217\u8868 \u4e2d\u8fdb\u884c\u3002\u82e5\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6765\u6784\u9020\u5b50\u5bf9\u8c61\u5219\u4e0d\u7528\u505a\u4efb\u4f55\u5904\u7406\u3002</p> <p>\u5bf9\u8c61\u6784\u9020\u4e0e\u6790\u6784\u6b21\u5e8f\uff1a\u7a7f\u8131\u539f\u7406</p> <ul> <li>\u5148\u5b8c\u6210\u5b50\u5bf9\u8c61\u6784\u9020\uff0c\u518d\u5b8c\u6210\u5f53\u524d\u5bf9\u8c61\u6784\u9020</li> <li>\u5148\u5bf9\u5916\u5c42\u5bf9\u8c61\u6790\u6784\uff0c\u518d\u5bf9\u5185\u5c42\u5bf9\u8c61\u6790\u6784</li> </ul> <p>\u89e3\u91ca\u5982\u4e0b\u4ee3\u7801\u884c\u4e3a</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass C1 {\n   public:\n    C1(int id) : ID(id) { cout &lt;&lt; \"C1(int)\" &lt;&lt; endl; }\n    ~C1() { cout &lt;&lt; \"~C1()\" &lt;&lt; endl; }\n\n   private:\n    int ID;\n};\n\nclass C2 {\n   public:\n    C2() { cout &lt;&lt; \"C2()\" &lt;&lt; endl; }\n    ~C2() { cout &lt;&lt; \"~C2()\" &lt;&lt; endl; }\n};\n\nclass C3 {\n   public:\n    C3() : num(0), sub_obj1(123) { cout &lt;&lt; \"C3()\" &lt;&lt; endl; }\n    C3(int n) : num(n), sub_obj1(123) { cout &lt;&lt; \"C3(int)\" &lt;&lt; endl; }\n    C3(int n, int k) : num(n), sub_obj1(k) { cout &lt;&lt; \"C3(int, int)\" &lt;&lt; endl; }\n    ~C3() { cout &lt;&lt; \"~C3()\" &lt;&lt; endl; }\n\n   private:\n    int num;\n    C1 sub_obj1;\n    C2 sub_obj2;\n};\n\nint main() {\n    C3 a, b(1), c(2), d(3, 4);\n    return 0;\n}\n</code></pre> <p><code>C1</code>\u3001<code>C2</code>\u662f<code>C3</code>\u7684\u5b50\u5bf9\u8c61\uff0c\u5176\u4e2d<code>C2</code>\u63d0\u4f9b\u4e86\u7f3a\u7701\u6784\u9020\u51fd\u6570\uff0c\u6545\u5728<code>C3</code>\u4e2d\u4e0d\u7528\u663e\u5f0f\u521d\u59cb\u5316\uff1b\u4f46<code>C1</code>\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6545\u5fc5\u987b\u5728<code>C3</code>\u7684 \u521d\u59cb\u5316\u5217\u8868 \u91cc\u9762\u5b8c\u6210\u521d\u59cb\u5316\u3002</p> <p>\u8f93\u51fa <pre><code>C1(int)\nC2()\nC3()\nC1(int)\nC2()\nC3(int)\nC1(int)\nC2()\nC3(int)\nC1(int)\nC2()\nC3(int, int)\n~C3()\n~C2()\n~C1()\n~C3()\n~C2()\n~C1()\n~C3()\n~C2()\n~C1()\n~C3()\n~C2()\n~C1()\n</code></pre></p> <p>\u4ece\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\u6784\u9020\u94fe\u4ece\u5185\u5230\u5916\uff0c\u800c\u6790\u6784\u94fe\u4ece\u5916\u5411\u5185\u3002</p>"},{"location":"languages/cpp/basic/#c-11","title":"\u79fb\u52a8\u6784\u9020\u51fd\u6570 (C++ 11\u5f15\u5165)","text":"<p>\u8bed\u6cd5\uff1a<code>ClassName(ClassName&amp;&amp;);</code></p> <p>\u76ee\u7684</p> <ul> <li> <p>\u7528\u6765\u5077\u201c\u4e34\u65f6\u53d8\u91cf\u201d\u4e2d\u7684\u8d44\u6e90\uff08\u5982\u5185\u5b58\uff09\u3002</p> </li> <li> <p>\u4e34\u65f6\u53d8\u91cf\u88ab\u7f16\u8bd1\u5668\u8bbe\u7f6e\u4e3a\u5e38\u91cf\u5f62\u5f0f\uff0c\u4f7f\u7528\u201c\u62f7\u8d1d\u6784\u9020\u201d\u51fd\u6570\u65e0\u6cd5\u5c06\u8d44\u6e90\u201c\u5077\u201d\u51fa\u6765\uff08\u6539\u52a8\u4e86\u5143\u5bf9\u8c61\uff0c\u8fdd\u53cd\u5e38\u91cf\u7684\u9650\u5236\uff09\u3002</p> </li> <li> <p>\u57fa\u4e8e \u53f3\u503c\u5f15\u7528 \u5b9a\u4e49\u7684 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u652f\u6301\u63a5\u53d7\u4e34\u65f6\u53d8\u91cf\uff0c\u80fd\u201c\u5077\u201d\u51fa\u4e34\u65f6\u53d8\u91cf\u4e2d\u7684\u8d44\u6e90\u3002</p> </li> </ul> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Test {\n   public:\n    int* buf;\n    Test() {\n        buf = new int(3);\n        cout &lt;&lt; \"Test(): this-&gt;buf @ \" &lt;&lt; hex &lt;&lt; buf &lt;&lt; endl;\n    }\n\n    ~Test() {\n        cout &lt;&lt; \"~Test(): this-&gt;buf @ \" &lt;&lt; hex &lt;&lt; buf &lt;&lt; endl;\n        if (buf) delete buf;\n    }\n\n    Test(Test&amp; t) : buf(new int(*t.buf)) {\n        cout &lt;&lt; \"Test(const Test&amp;) called. this-&gt;buf @ \" &lt;&lt; hex &lt;&lt; buf &lt;&lt; endl;\n        t.buf = nullptr;\n    }\n\n    Test(Test&amp;&amp; t) : buf(t.buf) {\n        cout &lt;&lt; \"Test(Test&amp;&amp;) called. this-&gt;buf @ \" &lt;&lt; hex &lt;&lt; buf &lt;&lt; endl;\n        t.buf = nullptr;\n    }\n};\n\nTest GetTemp() {\n    Test tmp;\n    cout &lt;&lt; \"GetTemp(): tmp.buf @ \" &lt;&lt; hex &lt;&lt; tmp.buf &lt;&lt; endl;\n    return tmp;\n}\n\nvoid fun(Test t) { cout &lt;&lt; \"fun(Test t): t.buf @ \" &lt;&lt; hex &lt;&lt; t.buf &lt;&lt; endl; }\n\nint main() {\n    Test a = GetTemp();\n    cout &lt;&lt; \"main() : a.buf @ \" &lt;&lt; hex &lt;&lt; a.buf &lt;&lt; endl;\n\n    fun(a);\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa <pre><code>Test(): this-&gt;buf @ 0x558bd1e13e70\nGetTemp(): tmp.buf @ 0x558bd1e13e70\nmain() : a.buf @ 0x558bd1e13e70\nTest(const Test&amp;) called. this-&gt;buf @ 0x558bd1e142a0\nfun(Test t): t.buf @ 0x558bd1e142a0\n~Test(): this-&gt;buf @ 0x558bd1e142a0\n~Test(): this-&gt;buf @ 0\n</code></pre></p> <p>\u5728\u5982\u4e0a\u7ed3\u679c\u4e2d\u6ca1\u6709\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u6b32\u6267\u884c\u8be5\u51fd\u6570\uff0c\u9700\u8981\u589e\u52a0\u7f16\u8bd1\u9009\u9879\uff0c\u7981\u6b62\u7f16\u8bd1\u5668\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316</p> <pre><code>g++ main.cpp --std=c++11 -fno-elide-constructors -o main\n</code></pre> <p>\u8f93\u51fa <pre><code>Test(): this-&gt;buf @ 0x560b6f4dce70\nGetTemp(): tmp.buf @ 0x560b6f4dce70\nTest(Test&amp;&amp;) called. this-&gt;buf @ 0x560b6f4dce70\n~Test(): this-&gt;buf @ 0\nTest(Test&amp;&amp;) called. this-&gt;buf @ 0x560b6f4dce70\n~Test(): this-&gt;buf @ 0\nmain() : a.buf @ 0x560b6f4dce70\nTest(const Test&amp;) called. this-&gt;buf @ 0x560b6f4dd2a0\nfun(Test t): t.buf @ 0x560b6f4dd2a0\n~Test(): this-&gt;buf @ 0x560b6f4dd2a0\n~Test(): this-&gt;buf @ 0\n</code></pre></p> <p>\u53ef\u89c1\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\u8c03\u7528\u7684\u662f\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002</p> <p>\u5982\u679c\u5c06<code>Test</code>\u7c7b\u4e2d\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u53bb\u6389\uff0c\u540c\u6837\u7981\u7528\u7f16\u8bd1\u4f18\u5316\uff0c\u5219\u7f16\u8bd1\u62a5\u9519\uff1a <pre><code>main.cpp: In function \u2018int main()\u2019:\nmain.cpp:38:21: error: cannot bind non-const lvalue reference of type \u2018Test&amp;\u2019 to an rvalue of type \u2018Test\u2019\n     Test a = GetTemp();\n              ~~~~~~~^~\nmain.cpp:18:5: note:   initializing argument 1 of \u2018Test::Test(Test&amp;)\u2019\n     Test(Test&amp; t) : buf(new int(*t.buf)) {\n     ^~~~\n</code></pre></p>"},{"location":"languages/cpp/basic/#default-c-11","title":"default\u4fee\u9970\u7b26 (C++ 11\u5f15\u5165)","text":""},{"location":"languages/cpp/basic/#_25","title":"\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u6210\u5458\u51fd\u6570","text":"<p>\u5982\u679c\u4ee5\u4e0b\u6210\u5458\u51fd\u6570\u7528\u6237\u90fd\u6ca1\u6709\u4e3a\u7c7b\u5b9e\u73b0\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4e3a\u7c7b\u751f\u6210\u5b83\u4eec\u7684\u7f3a\u7701\u5b9e\u73b0</p> <ul> <li> <p>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 - \u7a7a\u51fd\u6570\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a</p> </li> <li> <p>\u6790\u6784\u51fd\u6570 - \u7a7a\u51fd\u6570\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a</p> </li> <li> <p>\u62f7\u8d1d\u6784\u9020\u51fd\u6570 - \u6309bit\u4f4d\u8d4b\u503c\u5bf9\u8c61\u6240\u5360\u5185\u5b58\u5185\u5bb9</p> </li> <li> <p>\u79fb\u52a8\u6784\u9020\u51fd\u6570 - \u4e0e\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e00\u6837</p> </li> <li> <p>\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d - \u4e0e\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e00\u6837</p> </li> </ul> <p>\u5982\u679c\u7528\u6237\u5b9a\u4e49\u4e86\u4e0a\u8ff0\u67d0\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u5219\u7f16\u8bd1\u5668\u4e0d\u518d\u81ea\u52a8\u63d0\u4f9b\u76f8\u5e94\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002</p>"},{"location":"languages/cpp/basic/#default","title":"<code>=default</code>\u663e\u5f0f\u7f3a\u7701","text":"<p>\u5728\u9ed8\u8ba4\u51fd\u6570\u5b9a\u4e49\u6216\u58f0\u660e\u52a0\u4e0a<code>=default</code>\uff0c\u53ef\u663e\u5f0f\u7684\u53ea\u662f\u7f16\u8bd1\u5668\u751f\u6210\u8be5\u51fd\u6570\u7684\u9ed8\u8ba4\u7248\u672c\u3002</p> <pre><code>class T {\n   public:\n    T() = default;\n    T(int i) : data(i) {}\n\n   private:\n    int data;\n};\n</code></pre>"},{"location":"languages/cpp/basic/#_26","title":"\u7ee7\u627f","text":"<p>\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u201c\u7ee7\u627f\u201d\u6765\u5b9a\u4e49\u65b0\u7684\u7c7b\uff0c\u5b9e\u73b0\u5bf9\u5df2\u6709\u4ee3\u7801\u7684\u590d\u7528\u3002</p> <p>\u5e38\u89c1\u7684\u7ee7\u627f\u65b9\u5f0f\uff1a<code>public</code>, <code>private</code></p> <ul> <li> <p><code>class Derived: [private] Base {...};</code> \u7f3a\u7701\u7ee7\u627f\u65b9\u5f0f\u662f<code>private</code>\u7ee7\u627f\u3002</p> </li> <li> <p><code>class Derived: public Base {...};</code></p> </li> </ul> <p>\u57fa\u7c7b/\u7236\u7c7b - base class - \u88ab\u7ee7\u627f\u7684\u5df2\u6709\u7c7b</p> <p>\u6d3e\u751f\u7c7b/\u5b50\u7c7b/\u6269\u5c55\u7c7b - derived class - \u901a\u8fc7\u7ee7\u627f\u5f97\u5230\u7684\u65b0\u7c7b</p>"},{"location":"languages/cpp/basic/#_27","title":"\u5b50\u7c7b\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784\u8fc7\u7a0b","text":"<p>\u57fa\u7c7b\u4e2d\u7684\u6570\u636e\u6210\u5458\u901a\u8fc7\u7ee7\u627f\u6210\u4e3a\u5b50\u7c7b\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u9700\u8981\u5728\u6784\u9020\u5b50\u7c7b\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\u8c03\u7528\u79ef\u7d2f\u7684\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u3002</p> <ul> <li> <p>\u82e5\u6ca1\u6709\u663e\u5f0f\u8c03\u7528\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5bf9\u57fa\u7c7b\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528</p> </li> <li> <p>\u82e5\u91c7\u7528\u663e\u5f0f\u8c03\u7528\uff0c\u5219\u53ea\u80fd\u5728\u5b50\u7c7b\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c</p> </li> </ul> <p>\u5148\u6267\u884c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u7ee7\u627f\u6765\u7684\u6570\u636e\uff0c\u518d\u6267\u884c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002</p> <p>\u5bf9\u8c61\u6790\u6784\u65f6\uff0c\u5148\u6267\u884c\u5b50\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u6267\u884c\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\u7684\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002</p>"},{"location":"languages/cpp/basic/#_28","title":"\u7ee7\u627f\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570","text":"<p>\u4ee5\u5982\u4e0b\u4ee3\u7801\u4e3a\u4f8b</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Base {\n   public:\n    Base(int _data) : data(_data) { cout &lt;&lt; \"Base::Base(\" &lt;&lt; _data &lt;&lt; \")\\n\"; }\n\n   private:\n    int data;\n};\n\nclass Derive : public Base {\n   public:\n    using Base::Base;\n    void print() { cout &lt;&lt; \"data = \" &lt;&lt; data &lt;&lt; endl; }\n\n   private:\n    int data{2020};\n};\n\nint main() {\n    Derive obj(356);\n    obj.print();\n    return 0;\n}\n</code></pre> <p><code>Derive</code>\u4e2d\u4f7f\u7528<code>using Base::Base;</code>\u5c06<code>Base</code>\u4e2d\u7684\u6240\u6709\u6784\u9020\u51fd\u6570\u90fd\u7ee7\u627f\u4e86\u8fc7\u6765\u3002\u6545\u53ef\u4ee5\u8c03\u7528\u5e26\u4e00\u4e2a<code>int</code>\u578b\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002</p> <pre><code>Base::Base(356)\ndata = 2020\n</code></pre> <p>\u867d\u7136\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u4e0d\u4f1a\u88ab\u5b50\u7c7b\u7ee7\u627f\uff0c\u4f46\u7531\u9ed8\u8ba4\u53c2\u6570\u5bfc\u81f4\u7684\u591a\u4e2a\u6784\u9020\u51fd\u6570\u7248\u672c\u90fd\u4f1a\u88ab\u5b50\u7c7b\u7ee7\u627f\u3002</p> <p>\u5982\u679c\u57fa\u7c7b\u7684\u67d0\u4e2a\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u6210\u79c1\u6709\u6210\u5458\u51fd\u6570\uff0c\u5219\u4e0d\u80fd\u5728\u5b50\u7c7b\u4e2d\u58f0\u660e\u7ee7\u627f\u8be5\u6784\u9020\u51fd\u6570\u3002</p> <p>\u5982\u679c\u5b50\u7c7b\u4f7f\u7528\u4e86\u7ee7\u627f\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u518d\u4e3a\u5b50\u7c7b\u751f\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002</p>"},{"location":"languages/cpp/basic/#override","title":"\u51fd\u6570\u91cd\u5199 (override)","text":""},{"location":"languages/cpp/basic/#_29","title":"\u5b50\u7c7b\u4e2d\u7684\u57fa\u7c7b\u6210\u5458","text":"<p>\u5b50\u7c7b\u5bf9\u8c61\u5305\u542b\u4ece\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6570\u636e\u6210\u5458\uff0c\u5b83\u4eec\u6784\u6210\u4e86\u201c\u57fa\u7c7b\u5b50\u5bf9\u8c61\u201d\u3002</p> <p>\u57fa\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\uff0c\u4e0d\u5141\u8bb8\u5728\u5b50\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u88ab\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u5141\u8bb8\u5b50\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\u5b83\u4eec\u3002</p> <ul> <li>\u771f\u6b63\u4f53\u73b0\u201c\u57fa\u7c7b\u79c1\u6709\u201d\uff0c\u5bf9\u5b50\u7c7b\u4e5f\u4e0d\u5f00\u653e\u5176\u6743\u9650</li> </ul> <p>\u57fa\u7c7b\u4e2d\u7684\u516c\u6709\u6210\u5458\uff1a</p> <ul> <li> <p>\u82e5\u4f7f\u7528<code>public</code>\u7ee7\u627f\u65b9\u5f0f\uff0c\u5219\u6210\u4e3a\u5b50\u7c7b\u7684\u516c\u6709\u6210\u5458\uff0c\u65e2\u53ef\u4ee5\u5728\u5b50\u7c7b\u6210\u5458\u4e2d\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5b50\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\uff1b</p> </li> <li> <p>\u82e5\u4f7f\u7528<code>private</code>\u7ee7\u627f\u65b9\u5f0f\uff0c\u5219\u53ea\u80fd\u4f9b\u5b50\u7c7b\u6210\u5458\u51fd\u6570\u7684\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u5b50\u7c7b\u5bf9\u8c61\u8bbf\u95ee\u3002</p> </li> </ul> <p>\u8003\u8651\u5982\u4e0b\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass B {\n   public:\n    void f() { cout &lt;&lt; \"in B::f()...\" &lt;&lt; endl; }\n};\n\nclass D1 : public B {};\n\nclass D2 : private B {\n   public:\n    void g() {\n        cout &lt;&lt; \"in D2::g(), calling f()...\" &lt;&lt; endl;\n        f();\n    }\n};\n\nint main() {\n    cout &lt;&lt; \"in main()...\" &lt;&lt; endl;\n\n    D1 obj1;\n    cout &lt;&lt; \"calling obj1.f()...\" &lt;&lt; endl;\n    obj1.f();\n\n    D2 obj2;\n    cout &lt;&lt; \"calling obj2.g()...\" &lt;&lt; endl;\n    obj2.g();\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>in main()...\ncalling obj1.f()...\nin B::f()...\ncalling obj2.g()...\nin D2::g(), calling f()...\nin B::f()...\n</code></pre> <p>\u5982\u679c\u79c1\u6709\u7ee7\u627f\u7684\u5b50\u7c7b<code>D2</code>\u8c03\u7528\u7236\u7c7b\u7684\u5171\u6709\u51fd\u6570\uff0c\u5219\u4f1a\u62a5\u9519\uff1a</p> <pre><code>error: \u2018B\u2019 is not an accessible base of \u2018D2\n</code></pre> <p>\u8fd9\u91cc\u57fa\u7c7b\u63a5\u53e3\u4e0d\u8bb8\u5b50\u7c7b\u5bf9\u8c61\u8c03\u7528\u3002</p>"},{"location":"languages/cpp/basic/#_30","title":"\u5b50\u7c7b\u91cd\u5199\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570","text":"<p>\u57fa\u7c7b\u5df2\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\uff0c\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\uff0c\u8fd9\u88ab\u79f0\u4e3a\u201c\u51fd\u6570\u91cd\u5199\u201d\uff08override\uff09</p> <p>\u91cd\u5199\u53d1\u751f\u65f6\uff0c\u57fa\u7c7b\u4e2d\u8be5\u6210\u5458\u51fd\u6570\u7684\u5176\u4ed6\u91cd\u8f7d\u51fd\u6570\u90fd\u5c06\u88ab\u5c4f\u853d\u6389\uff0c\u4e0d\u80fd\u63d0\u4f9b\u7ed9\u5b50\u7c7b\u5bf9\u8c61\u4f7f\u7528\u3002</p> <p>\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u901a\u8fc7<code>using \u7c7b\u540d::\u6210\u5458\u51fd\u6570\u540d;</code>\u5728\u5b50\u7c7b\u4e2d\u201c=\u6062\u590d\u201d\u6307\u5b9a\u7684\u57fa\u7c7b\u6210\u5458\u51fd\u6570\uff08\u53bb\u6389\u5c4f\u853d\uff09\uff0c\u4f7f\u4e4b\u91cd\u65b0\u53ef\u7528\u3002</p> <p>\u8003\u8651\u5982\u4e0b\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass T {};\n\nclass B {\n   public:\n    void f() { cout &lt;&lt; \"B::f()\\n\"; }\n    void f(int i) { cout &lt;&lt; \"B::f(\" &lt;&lt; i &lt;&lt; \")\\n\"; }\n    void f(double d) { cout &lt;&lt; \"B::f(\" &lt;&lt; d &lt;&lt; \")\\n\"; }\n    void f(T) { cout &lt;&lt; \"B::f(T)\\n\"; }\n};\n\nclass D1 : public B {\n   public:\n    void f(int i) { cout &lt;&lt; \"D1::f(\" &lt;&lt; i &lt;&lt; \")\\n\"; }\n};\n\nint main() {\n    D1 d;\n    d.f(10);\n    d.f(4.9);\n    // d.f();\n    // d.f(T())\n};\n</code></pre> <p>\u6ce8\u610f<code>d.f(4.9);</code>\u8fd9\u4e00\u53e5\u7f16\u8bd1\u4f1a\u51fa\u8b66\u544a\uff0c\u7f16\u8bd1\u5668\u6267\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4f7f\u7528\u6574\u578b\u53c2\u6570\u7684\u51fd\u6570\u7248\u672c\u3002 \u800c\u88ab\u6ce8\u91ca\u7684\u4e24\u4e2a\u8bed\u53e5\u5219\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff0c\u56e0\u4e3a\u91cd\u5199\u5bfc\u81f4\u5176\u4ed6\u91cd\u8f7d\u51fd\u6570\u88ab\u5c4f\u853d\u6389</p> <p>\u8f93\u51fa</p> <pre><code>D1::f(10)\nD1::f(4)\n</code></pre> <p>\u4f7f\u7528<code>using</code>\u6062\u590d\u57fa\u7c7b\u51fd\u6570</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass T {};\n\nclass B {\n   public:\n    void f() { cout &lt;&lt; \"B::f()\\n\"; }\n    void f(int i) { cout &lt;&lt; \"B::f(\" &lt;&lt; i &lt;&lt; \")\\n\"; }\n    void f(double d) { cout &lt;&lt; \"B::f(\" &lt;&lt; d &lt;&lt; \")\\n\"; }\n    void f(T) { cout &lt;&lt; \"B::f(T)\\n\"; }\n};\n\nclass D1 : public B {\n   public:\n    using B::f;\n    void f(int i) { cout &lt;&lt; \"D1::f(\" &lt;&lt; i &lt;&lt; \")\\n\"; }\n};\n\nint main() {\n    D1 d;\n    d.f(10);\n    d.f(4.9);\n    d.f();\n    d.f(T());\n    return 0;\n};\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>D1::f(10)\nB::f(4.9)\nB::f()\nB::f(T)\n</code></pre>"},{"location":"languages/cpp/basic/#_31","title":"\u865a\u51fd\u6570","text":""},{"location":"languages/cpp/basic/#_32","title":"\u5411\u4e0a\u6620\u5c04\u548c\u5411\u4e0b\u6620\u5c04","text":"<p>\u5b50\u7c7b\u5bf9\u8c61\u8f6c\u6362\u6210\u57fa\u7c7b\u5bf9\u8c61\uff0c\u79f0\u4e3a\u5411\u4e0a\u6620\u5c04\u3002\u800c\u57fa\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b50\u7c7b\u5bf9\u8c61\uff0c\u6210\u4e3a\u5411\u4e0b\u6620\u5c04\u3002</p> <p>\u5411\u4e0a\u6620\u5c04\u53ef\u4ee5\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5b8c\u6210\uff0c\u662f\u4e00\u79cd\u9690\u5f0f\u7684\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002</p> <p>\u6240\u6709\u63a5\u53d7\u57fa\u7c7b\u5bf9\u8c61\u7684\u5730\u65b9\uff08\u5982\u51fd\u6570\u53c2\u6570\uff09\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b50\u7c7b\u5bf9\u8c61\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u5b50\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u7c7b\u5bf9\u8c61\u4ee5\u4fbf\u4f7f\u7528\u3002</p> <p>\u5728\u5982\u4e0b\u4ee3\u7801\u4e2d\uff0c\u5b50\u7c7b\u91cd\u5199\u4e86\u57fa\u7c7b\u7684<code>print</code>\u51fd\u6570\uff0c\u5c06\u5b50\u7c7b\u5bf9\u8c61\u4f20\u7ed9\u4ee5\u57fa\u7c7b\u4f5c\u4e3a\u5f62\u53c2\u7684\u51fd\u6570\uff0c\u5b50\u7c7b\u88ab\u9690\u5f0f\u8f6c\u6362\u4e3a\u57fa\u7c7b\uff0c\u6545\u51fd\u6570\u5185\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u7684<code>print</code>\u51fd\u6570\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Base {\n   public:\n    void print() { cout &lt;&lt; \"Base::print()\" &lt;&lt; endl; }\n};\n\nclass Derive : public Base {\n   public:\n    void print() { cout &lt;&lt; \"Derive::print()\" &lt;&lt; endl; }\n};\n\nvoid fun(Base obj) {\n    obj.print();\n}\n\nint main() {\n    Derive d;\n    d.print();\n    fun(d);\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>Derive::print()\nBase::print()\n</code></pre>"},{"location":"languages/cpp/basic/#_33","title":"\u865a\u51fd\u6570","text":"<p>\u5bf9\u4e8e\u88ab\u5b50\u7c7b\u91cd\u5199\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u5b83\u5728\u57fa\u7c7b\u4e2d\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff08\u5982\u4e0b\u6240\u793a\uff09\uff0c\u5219\u901a\u8fc7\u79ef\u7d2f\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u8be5\u51fd\u6570\u6210\u5458\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u6839\u636e\u6240\u6307\uff08\u6216\u5f15\u7528\uff09\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u662f\u8c03\u7528\u79ef\u7d2f\u4e2d\u7684\u51fd\u6570\uff0c\u8fd8\u662f\u8c03\u7528\u5b50\u7c7b\u91cd\u5199\u7684\u51fd\u6570\u3002</p> <pre><code>class Base {\n    public:\n    virtual \u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u540d(\u5f62\u53c2);\n    ...\n};\n</code></pre> <p>\u82e5\u67d0\u6210\u5458\u51fd\u6570\u5728\u57fa\u7c7b\u4e2d\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5f53\u5b50\u7c7b\u91cd\u5199\u5b83\u65f6\uff0c\u65e0\u8bba\u662f\u5426\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u8be5\u6210\u5458\u51fd\u6570\u4ecd\u7136\u662f\u865a\u51fd\u6570\u3002</p> <p>\u5c06\u4e0a\u4e00\u8282\u7684\u4f8b\u5b50\u4e2d\u57fa\u7c7b\u7684<code>print</code>\u51fd\u6570\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u800c\u51fd\u6570<code>fun</code>\u7684\u5f62\u53c2\u6539\u4e3a\u57fa\u7c7b\u7684\u5f15\u7528\u7c7b\u578b\uff0c\u5219\u8c03\u7528\u7684\u5c31\u662f\u865a\u51fd\u6570\u5728\u5b50\u7c7b\u4e2d\u7684\u5b9e\u73b0\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Base {\n   public:\n    virtual void print() { cout &lt;&lt; \"Base::print()\" &lt;&lt; endl; }\n};\n\nclass Derive : public Base {\n   public:\n    void print() { cout &lt;&lt; \"Derive::print()\" &lt;&lt; endl; }\n};\n\nvoid fun(Base&amp; obj) {\n    obj.print();\n}\n\nint main() {\n    Derive d;\n    d.print();\n    fun(d);\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa <pre><code>Derive::print()\nDerive::print()\n</code></pre></p>"},{"location":"languages/cpp/basic/#_34","title":"\u865a\u6790\u6784\u51fd\u6570","text":"<p>\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u603b\u662f\u8981\u88ab\u58f0\u660e\u6210<code>virtual</code>\u7684\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5b50\u7c7b\u5b9a\u4e49\u7684\u6790\u6784\u51fd\u6570\u603b\u80fd\u88ab\u6267\u884c\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6700\u597d\u7684\u505a\u6cd5\u662f\uff1a\u4efb\u4f55\u7c7b\u7684\u6790\u6784\u51fd\u6570\u90fd\u5e94\u8be5\u88ab\u58f0\u660e\u6210<code>virtual</code>\u7684\uff0c\u56e0\u4e3a\u8c01\u53c8\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u7c7b\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7684\u7c7b\u7ee7\u627f\u5462\uff1f</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass B {\n   public:\n    virtual void show() { cout &lt;&lt; \"B.show()\\n\"; }\n    virtual ~B() { cout &lt;&lt; \"~B()\\n\"; }\n};\n\nclass D : public B {\n   public:\n    void show() { cout &lt;&lt; \"D.show()\\n\"; }\n    ~D() { cout &lt;&lt; \"~D()\\n\"; }\n};\n\nvoid test(B* ptr) { ptr-&gt;show(); }\n\nint main() {\n    B* ptr = new D;\n    test(ptr);\n    delete ptr;\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>D.show()\n~D()\n~B()\n</code></pre> <p>\u4ece\u8f93\u51fa\u53ef\u89c1\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u662f \u5148\u8c03\u7528\u5b50\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 \u3002</p> <p>\u5982\u679c\u5220\u9664\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u524d\u7684<code>virtual</code>\u5173\u952e\u5b57\uff0c\u5219\u8f93\u51fa\u4e3a</p> <pre><code>D.show()\n~B()\n</code></pre> <p>\u6b64\u65f6\u5982\u679c\u5b50\u7c7b\u4e2d\u72ec\u6709\u7684\u6570\u636e\u6210\u5458\uff0c\u5219\u4ed6\u4eec\u4e0d\u4f1a\u88ab\u91ca\u653e\uff0c\u8fdb\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002</p>"},{"location":"languages/cpp/basic/#final-c-11","title":"\u7981\u6b62\u91cd\u5199\u7684\u865a\u51fd\u6570<code>final</code> (c++ 11\u5f15\u5165)","text":"<p>\u4f7f\u7528<code>final</code>\u7ba1\u554a\u67b6\u5b50\u4fee\u9970\u7684\u865a\u51fd\u6570\uff0c\u5b50\u7c7b\u4e0d\u53ef\u5bf9\u5b83\u8fdb\u884c\u91cd\u5199 \u2014\u2014 \u6539\u53d8\u51fd\u6570\u7684\u5b9a\u4e49\u3002</p> <p>\u5728\u6d3e\u751f\u8fc7\u7a0b\u4e2d\uff0c<code>final</code>\u53ef\u4ee5\u518d\u7ee7\u627f\u5173\u7cfb\u94fe\u7684<code>\u4e2d\u9014</code>\u8fdb\u884c\u8bbe\u5b9a\uff0c\u7981\u6b62\u540e\u7eed\u5b50\u7c7b\u5bf9\u6307\u5b9a\u865a\u51fd\u6570\u91cd\u5199\u3002</p> <p>\u4e0b\u5c5e\u4ee3\u7801\u4e2d\uff0c<code>class C</code>\u7684\u5b9e\u73b0\u662f\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u7684\u3002</p> <pre><code>class A {\n   public:\n    virtual void fun() = 0;\n};\n\nclass B : public A {\n   public:\n    void fun() final;\n};\n\nclass C : public B {\n   public:\n    void fun();\n};\n</code></pre> <p><code>class A</code>\u4e2d\u7684<code>virtual void fun() = 0;</code>\u5c06<code>fun()</code>\u5b9a\u4e49\u4e3a\u4e00\u4e2a \u7eaf\u865a\u51fd\u6570 \u3002<code>A</code>\u7531\u6b64\u6210\u4e3a\u4e00\u4e2a \u62bd\u8c61\u7c7b \u3002</p> <p>C++\u4e2d\u62bd\u8c61\u7c7b\u4e0d\u80fd\u7528\u4e8e\u5b9a\u4e49\u5bf9\u8c61\uff0c\u8fd9\u6837\u7684\u7c7b\u4e00\u822c\u7528\u4e8e \u5b9a\u4e49\u63a5\u53e3 \u3002</p>"},{"location":"languages/cpp/basic/#_35","title":"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362","text":""},{"location":"languages/cpp/basic/#-_2","title":"\u65b9\u6cd5\u4e00 - \u5728\u6e90\u7c7b\u4e2d\u5b9a\u4e49\u201c\u76ee\u6807\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u201d","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Dst {\n   public:\n    Dst() { cout &lt;&lt; \"Dst::Dst()\" &lt;&lt; endl; }\n};\n\nclass Src {\n   public:\n    Src() { cout &lt;&lt; \"Src::operator Dst() called\" &lt;&lt; endl; }\n\n    operator Dst() const {\n        cout &lt;&lt; \"Src::operator Dst() called\" &lt;&lt; endl;\n        return Dst();\n    }\n};\n</code></pre>"},{"location":"languages/cpp/basic/#-_3","title":"\u65b9\u6cd5\u4e8c - \u5728\u76ee\u6807\u7c7b\u4e2d\u5b9a\u4e49\u201c\u6e90\u7c7b\u5bf9\u8c61\u505a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u201d","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Src;\n\nclass Dst {\n   public:\n    Dst() { cout &lt;&lt; \"Dst::Dst()\" &lt;&lt; endl; }\n    Dst(const Src&amp; s) { cout &lt;&lt; \"Dst::Dst(const Src&amp;)\" &lt;&lt; endl; }\n};\n\nclass Src {\n   public:\n    Src() { cout &lt;&lt; \"Src::Src()\" &lt;&lt; endl; }\n};\n</code></pre> <p>\u6ce8\uff1a <code>class Src;</code>\u8fd9\u4e00\u884c\u662f\u4e00\u4e2a\u524d\u7f6e\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u56e0\u4e3a\u5728<code>Dst</code>\u7684\u5b9a\u4e49\u4e2d\u8981\u7528\u5230<code>Src</code>\u7c7b\u3002</p>"},{"location":"languages/cpp/basic/#_36","title":"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u4e3e\u4f8b","text":"<p>\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff08\u9690\u5f0f\u8f6c\u6362\uff09</p> <pre><code>void Func(Dst d) {}\n\nint main() {\n    Src s;\n    Dst d1(s);  // \u8fd9\u662f\u76f4\u63a5\u6784\u9020\uff0c\u4e0d\u662f\u7c7b\u578b\u8f6c\u6362\n\n    Dst d2 = s; // \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff0c\u4e0d\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    Func(s);    // \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\n\n    return 0\uff1b\n}\n</code></pre> <p>\u6ce8\u610f\uff1a\u4e24\u79cd\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff0c\u53ea\u6709\u5728\u4e0a\u8ff0\u65b9\u6cd5\u4e00\u548c\u65b9\u6cd5\u4e8c\u4f7f\u7528\u4e14\u4f7f\u7528\u4e00\u4e2a\u7684\u524d\u63d0\u4e0b\u624d\u80fd\u7f16\u8bd1\u901a\u8fc7\u3002</p>"},{"location":"languages/cpp/basic/#_37","title":"\u7981\u6b62\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362","text":""},{"location":"languages/cpp/basic/#-explicit","title":"\u65b9\u6cd5\u4e00 - <code>explicit</code>\u5173\u952e\u5b57","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Src;\n\nclass Dst {\n   public:\n    Dst() { cout &lt;&lt; \"Dst::Dst()\" &lt;&lt; endl; }\n\n    explicit  // &lt;1&gt; \u4e0d\u51c6\u7528\u4e8e\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\n    Dst(const Src&amp; s) {\n        cout &lt;&lt; \"Dst::Dst(const Src&amp;)\" &lt;&lt; endl;\n    }\n};\n\nclass Src {\n   public:\n    Src() { cout &lt;&lt; \"Src::Src()\" &lt;&lt; endl; }\n\n    explicit  // &lt;2&gt; \u4e0d\u51c6\u7528\u4e8e\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\n    operator Dst() const {\n        cout &lt;&lt; \"Src::operator Dst() called\" &lt;&lt; endl;\n        return Dst();\n    }\n};\n</code></pre> <p>&lt;1&gt; - \u8be5\u51fd\u6570\u53ea\u7528\u4e8e\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u7528\u4e8e\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u4e0d\u80fd\u81ea\u52a8\u8c03\u7528\uff09</p> <p>&lt;2&gt; - \u8be5\u51fd\u6570\u53ea\u7528\u4e8e\u7c7b\u578b\u8f6c\u6362\uff0c\u4e0d\u7528\u4e8e\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u4e0d\u80fd\u81ea\u52a8\u8c03\u7528\uff09</p> <p>\u4e3a\u6b64\uff0c\u5982\u60f3\u8ba9\u4e0b\u65b9\u4ee3\u7801\u901a\u8fc7\uff0c\u4e0a\u65b9\u4ee3\u7801\u4e2d\u4e24\u5904<code>explicit</code>\u5fc5\u987b\u4fdd\u7559\u4e14\u4ec5\u4fdd\u7559\u4e00\u5904\u3002</p> <pre><code>void Func(Dst d) {}\n\nint main() {\n    Src s;\n    Dst d1(s);\n\n    Dst d2 = s;\n    Func(s);\n\n    return 0;\n}\n</code></pre>"},{"location":"languages/cpp/basic/#-delete-c-11","title":"\u65b9\u6cd5\u4e8c - <code>=delete</code>\u9650\u5b9a (C++ 11 \u5f15\u5165)","text":"<p>\u4f7f\u7528<code>=delete</code>\u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u5141\u8bb8\u88ab\u8c03\u7528\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass T {\n   public:\n    T(int) {}\n    T(char) = delete;   // \u53ef\u6d88\u9664\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u5e26\u6765\u7684\u9690\u60a3\uff0c\u5982\u6ca1\u6709` = delete`\u4fee\u9970\u7b26\uff0c\u5219\u4e3b\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\u90fd\u80fd\u7f16\u8bd1\u901a\u8fc7\u3002\n};\n\nvoid Fun(T t) {}\n\nint main() {\n    Fun(1);\n    // Fun('X');    \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u5931\u8d25\uff0c\u7f16\u8bd1\u4e0d\u901a\u8fc7\n\n    T ci(1);\n    // T cc('X');   \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u5931\u8d25\uff0c\u7f16\u8bd1\u4e0d\u901a\u8fc7\n\n    return 0;\n}\n</code></pre> <ul> <li><code>=delete</code>\u4fee\u9970\u4e00\u4e2a\u51fd\u6570 \u548c \u4e0d\u5199\u8fd9\u4e2a\u51fd\u6570 \u7684\u533a\u522b:</li> </ul>"},{"location":"languages/cpp/basic/#_38","title":"\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff08\u663e\u5f0f\u8f6c\u6362\uff09","text":"<p><code>dynamic_cast&lt;Dst_type&gt;(Src_var)</code> - \u7528\u4e8e\u5728\u7c7b\u7684\u96c6\u6210\u4f53\u7cfb\u4e2d\u505a\u8f6c\u6362</p> <ul> <li> <p><code>Src_var</code>\u5fc5\u987b\u662f\u5f15\u7528\u6216\u6307\u9488\u7c7b\u578b\uff0c<code>Dst_Type</code>\u7c7b\u4e2d\u542b\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u6709\u7f16\u8bd1\u9519\u8bef</p> </li> <li> <p>\u82e5\u76ee\u6807\u7c7b\u4e0e\u539f\u7c7b\u4e4b\u95f4\u6ca1\u6709\u53ca\u9648\u9aa8\u5e72\u897f\uff0c\u8f6c\u6362\u5931\u8d25\uff0c\u8fd4\u56de\u7a7a\u6307\u9488\uff08\u6ce8\uff1a\u5931\u8d25\u4e0d\u5bfc\u81f4\u8fd0\u884c\u5d29\u6e83\uff09</p> </li> </ul> <p><code>static_cast&lt;Dst_Type&gt;(Src_var)</code></p> <ul> <li> <p>\u57fa\u7c7b\u5bf9\u8c61\u4e0d\u80fd\u8f6c\u6362\u6210\u5b50\u7c7b\u5bf9\u8c61\uff0c\u4f46\u57fa\u7c7b\u6307\u9488\u53ef\u4ee5\u8f6c\u6362\u6210\u5b50\u7c7b\u6307\u9488</p> </li> <li> <p>\u5b50\u7c7b\u5bf9\u8c61\uff08\u6307\u9488\uff09\u53ef\u4ee5\u8f6c\u6362\u6210\u57fa\u7c7b\u5bf9\u8c61\uff08\u6307\u9488\uff09</p> </li> <li> <p>\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\uff0c\u5fc5\u987b\u5177\u6709\u8f6c\u6362\u9014\u5f84\u624d\u80fd\u8fdb\u884c\u8f6c\u6362\uff08\u81ea\u5b9a\u4e49\u6216\u8005\u8bed\u8a00\u8bed\u6cd5\u539f\u751f\u652f\u6301\uff09</p> </li> </ul> <p>\u4ee5\u5982\u4e0b\u4ee3\u7801\u4e3a\u4f8b</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass B {\n    public : virtual void f() {}\n};\n\nclass D : public B {};\n\nclass E {};\n\nint main() {\n    D d1;\n    B b1;\n\n    // d1 = static_cast&lt;D&gt;(b1); /// Error: \u4ece\u57fa\u7c7b\u65e0\u6cd5\u8f6c\u6362\u56de\u5b50\u7c7b\n    b1 = static_cast&lt;B&gt;(d1);    /// OK: \u53ef\u4ee5\u4ece\u5b50\u7c7b\u8f6c\u6362\u5230\u57fa\u7c7b\n    // b1 - dynamic_cast&lt;B&gt;(d1);    /// ERROR: \u88ab\u8f6c\u6362\u7684\u5fc5\u987b\u662f\u5f15\u7528\u6216\u6307\u9488\n\n    B* pb1 = new B();\n    D* pd1 = static_cast&lt;D*&gt;(pb1);\n    if (pd1) {\n        cout &lt;&lt; \"static_cast, B* --&gt; D*: OK\" &lt;&lt; endl;\n    }\n    pd1 = dynamic_cast&lt;D*&gt;(pb1);\n    if (pd1) {\n        cout &lt;&lt; \"dynamic_cast, B* --&gt; D*: OK\" &lt;&lt; endl;\n    }\n\n    D* pd2 = new D();\n    B* pb2 = static_cast&lt;B*&gt;(pd2);\n    if (pb2) {\n        cout &lt;&lt; \"static_cast, D* --&gt; B*: OK\" &lt;&lt; endl;\n    }\n    pb2 = dynamic_cast&lt;B*&gt;(pd2);\n    if (pb2) {\n        cout &lt;&lt; \"dynamic_cast, D* --&gt; B*: OK\" &lt;&lt; endl;\n    }\n\n    E* pe = dynamic_cast&lt;E*&gt;(pb1);\n    if (!pe) {\n        cout &lt;&lt; \"dynamic_cast, B* --&gt; E*: FAILED\" &lt;&lt; endl;\n    }\n    // pe = static_cast&lt;E*&gt;(pb1);   /// ERROR: \u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u4e0d\u80fd\u8f6c\u6362\n    // E e = static_cast&lt;E&gt;(b1);    /// ERROR\uff1a\u6ca1\u6709\u63d0\u4f9b\u8f6c\u6362\u9014\u5f84\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>static_cast, B* --&gt; D*: OK\nstatic_cast, D* --&gt; B*: OK\ndynamic_cast, D* --&gt; B*: OK\ndynamic_cast, B* --&gt; E*: FAILED\n</code></pre>"},{"location":"languages/cpp/basic/#_39","title":"\u51fd\u6570\u6a21\u677f","text":"<p>\u6709\u4e9b\u7b97\u6cd5\u5b9e\u73b0\u4e0e\u7c7b\u578b\u65e0\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u4e5f\u5b9a\u4e49\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u201c\u53c2\u6570\u201d\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u201c\u51fd\u6570\u6a21\u677f\u201d\u3002</p> <p>\u5b9a\u4e49\u51fd\u6570\u6a21\u677f\u7684\u65b9\u6cd5 <pre><code>template &lt;typename T&gt;\n\u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u540d(\u51fd\u6570\u53c2\u6570)\uff1b\n</code></pre></p> <p>\u4f8b\u5982\uff0c\u4efb\u610f\u4e24\u4e2a\u53d8\u91cf\u76f8\u52a0\u7684\u201c\u51fd\u6570\u6a21\u677f\u201d <pre><code>template &lt;typename T&gt;\nT sum(T a, T b) { return a + b; }\n</code></pre></p> <p>\u51fd\u6570\u6a21\u677f\u5728\u8c03\u7528\u65f6\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u80fd\u81ea\u52a8\u63a8\u5bfc\u51fa\u5b9e\u9645\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\uff0c\u5f62\u5f0f\u4e0a\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\u4e0e\u666e\u901a\u51fd\u6570\u6ca1\u6709\u533a\u522b\uff0c\u5982</p> <pre><code>int main() {\n    int a = 3, b = 4;\n    cout &lt;&lt; sum(a, b);\n    float c = 1.3, d = 1.9;\n    cout &lt;&lt; sum(c, d);\n}\n</code></pre> <p>\u51fd\u6570\u6a21\u677f\u53c2\u6570\u4e5f\u53ef\u4ee5\u8d4b\u9ed8\u8ba4\u503c\uff08\u7f3a\u7701\u503c\uff09\uff0c\u5982</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntemplate&lt;typename T0 = float, typename T1, typename T2 = float, typename T3, typename T4&gt;\nT0 func(T1 v1, T2 v2 = 0, T3 v3, T4 v4) {...}\n\nfunc(1, 2, 3, 4);\nfunc('a', 'b', \"cde\", 5);\n</code></pre>"},{"location":"languages/cpp/basic/#_40","title":"\u7c7b\u6a21\u677f","text":"<p>\u5728\u5b9a\u4e49\u7c7b\u65f6\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e9b\u7c7b\u578b\u4fe1\u606f\u62bd\u53d6\u51fa\u6765\uff0c\u7528\u6a21\u677f\u53c2\u6570\u6765\u66ff\u6362\uff0c\u4ece\u800c\u4f7f\u7c7b\u66f4\u5177\u6709\u901a\u7528\u6027\u3002\u8fd9\u79cd\u7c7b\u88ab\u79f0\u4e3a\u201c\u7c7b\u6a21\u677f\u201d\u3002</p> <pre><code>template &lt;typename T&gt;\nclass A {\n   public:\n    void print() { cout &lt;&lt; data &lt;&lt; endl; }\n\n   private:\n    T data;\n};\n</code></pre> <p>\u7c7b\u6a21\u677f \u2192 \u7c7b \u2192 \u5bf9\u8c61</p> <p>\u7c7b\u6a21\u677f\u7684\u201c\u6a21\u677f\u53c2\u6570\u201d</p> <ul> <li> <p>\u7c7b\u578b\u53c2\u6570\uff1a\u4f7f\u7528<code>typename</code>\u6216<code>class</code>\u6807\u8bb0</p> </li> <li> <p>\u975e\u7c7b\u578b\u53c2\u6570\uff1a\u6574\u6570\uff0c\u679a\u4e3e\uff0c\u6307\u9488\uff08\u6307\u5411\u5bf9\u8c61\u6216\u51fd\u6570\uff09\uff0c\u5f15\u7528\uff08\u5f15\u7528\u5bf9\u8c61\u6216\u5f15\u7528\u51fd\u6570\uff09\u3002\u5176\u4e2d\u6574\u6570\u7c7b\u578b\u662f\u6bd4\u8f83\u5e38\u7528\u7684\uff0c\u5982 <pre><code>template&lt;typename T, unsigned size&gt;\nclass Array {\n    T elems[size];\n    ...\n};\nArray &lt;char, 10&gt; array;\n</code></pre></p> </li> <li> <p>\u6a21\u677f\u53c2\u6570\u662f\u53e6\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u5982\u4e0b\u6240\u793a\uff1a <pre><code>template&lt;typename T, template&lt;typename TT0, typename TT1&gt; class A&gt;\nstruct Foo {\n    A&lt;T, T&gt; bar;\n};\n</code></pre></p> </li> </ul>"},{"location":"languages/cpp/basic/#_41","title":"\u6210\u5458\u51fd\u6570\u6a21\u677f","text":"<p>\u666e\u901a\u7c7b\u4e2d\u5b9a\u4e49\u6210\u5458\u51fd\u6570\u6a21\u677f</p> <pre><code>class NormalClass {\n    public:\n    int value;\n    template&lt;typename T&gt; void set(T const&amp; v) {\n        value = int(v);\n    }\n    template&lt;typename T&gt; T get();\n};\n\ntemplate&lt;typename T&gt;\nT NormalClass::get() {\n    return valuel;\n}\n</code></pre> <p>\u7c7b\u6a21\u677f\u4e2d\u5b9a\u4e49\u6210\u5458\u51fd\u6570\u6a21\u677f</p> <pre><code>template&lt;typename T0&gt;\nclass A {\n    public:\n    T0 value;\n    template&lt;typename T1&gt; void set(T1 const&amp; v) {\n        value = T0(v);\n    }\n    template&lt;typename T1&gt; T1 get();\n};\n\ntemplate&lt;typename T0&gt; template&lt;typename T1&gt;\nT1 A::get() {\n    return T1(value);\n}\n</code></pre> <p>\u5bf9\u4e8e\u7c7b\u6a21\u677f\u5916\u9762\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\u6a21\u677f\uff0c\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef <pre><code>% g++ main.cpp -std=c++11 -o main\n\nmain.cpp:16:4: error: \u2018template&lt;class T0&gt; class A\u2019 used without template parameters\n T1 A::get() {\n    ^\nmain.cpp:16:4: error: too many template-parameter-lists\n</code></pre></p>"},{"location":"languages/cpp/basic/#_42","title":"\u6a21\u677f\u7279\u5316","text":"<p>\u6a21\u677f\u53c2\u6570\u7684\u5177\u4f53\u5316/\u7279\u6b8a\u5316</p> <p>\u6709\u65f6\uff0c\u6709\u4e9b\u7c7b\u578b\u5e76\u4e0d\u9002\u7528\uff0c\u5219\u9700\u8981\u5bf9\u6a21\u677f\u8fdb\u884c\u7279\u6b8a\u5316\u5904\u7406\uff0c\u8fd9\u79f0\u4e3a\u201c\u6a21\u677f\u7279\u5316\u201d\u3002</p> <p>\u5bf9\u4e8e\u51fd\u6570\u6a21\u677f\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6a21\u677f\u53c2\u6570\uff0c\u5219\u7279\u5316\u65f6\u5fc5\u987b\u63d0\u4f9b\u6240\u6709\u53c2\u6570\u7684\u7279\u4f8b\u7c7b\u578b\uff0c \u4e0d\u80fd\u90e8\u5206\u7279\u5316 \u3002</p> <p>\u5982 <code>char* Sum(char* char*);</code></p> <ul> <li> <p>\u5728\u51fd\u6570\u540d\u540e\u7528&lt;&gt;\u62ec\u53f7\u6269\u8d77\u5177\u4f53\u7c7b\u578b <pre><code>template&lt;&gt;\nchar* Sum&lt;char*&gt;(char* a, char* b) {...}\n</code></pre></p> </li> <li> <p>\u7531\u7f16\u8bd1\u5668\u63a8\u5bfc\u51fa\u5177\u4f53\u7c7b\u578b\uff0c\u51fd\u6570\u540d\u4e3a\u666e\u901a\u5f62\u5f0f <pre><code>template&lt;&gt;\nchar* Sum(char* a, char* b) {...}\n</code></pre></p> </li> </ul>"},{"location":"languages/cpp/basic/#_43","title":"\u6a21\u677f\u7684\u90e8\u5206\u7279\u5316\uff08\u504f\u7279\u5316\uff09","text":"<ul> <li> <p>\u5bf9\u4e8e\u7c7b\u6a21\u677f\uff0c\u5141\u8bb8\u90e8\u5206\u7279\u5316\uff0c\u5373\u90e8\u5206\u9650\u5236\u6a21\u677f\u7684\u901a\u7528\u6027\uff0c\u5982\uff1a <pre><code>// \u901a\u7528\u6a21\u677f\u7c7b\ntemplate&lt;class T1, class T2&gt; class A {...};\n// \u90e8\u5206\u7279\u5316\u7684\u6a21\u677f\u7c7b\uff1a\u7b2c\u4e8c\u4e2a\u7c7b\u578b\u53c2\u6570\u6307\u5b9a\u4e3a int\ntemplate&lt;class T1&gt; class A&lt;T1m int&gt; {...};\n</code></pre></p> </li> <li> <p>\u82e5\u6307\u5b9a\u6240\u6709\u7c7b\u578b\uff0c\u5219&lt;&gt;\u5185\u5c06\u4e3a\u7a7a <pre><code>tempalte&lt;&gt; class A&lt;int, int&gt; {...};\n</code></pre></p> </li> </ul> <p>\u51fd\u6570\u6a21\u677f\u7279\u5316\u793a\u4f8b <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\ntemplate&lt;typename T&gt;\nT Sum(T a, T b) {\n    return a + b;\n}\n\ntemplate&lt;&gt;\nchar* Sum(char* a, char* b) {\n    char* p = new char[strlen(a), strlen(b) + 1];\n    strcpy(p, a);\n    strcpy(p + strlen(a), b);\n    return p;\n}\n\nint main() {\n    cout &lt;&lt; Sum(3, 4) &lt;&lt; ' ' &lt;&lt; Sum(5.1, 13.8) &lt;&lt; endl;\n\n    char str1[] = \"Hello, \", str2[] = \"world\";\n    cout &lt;&lt; Sum(str1, str2) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa <pre><code>7 18.9\nHello, world\n</code></pre></p> <p>\u7c7b\u6a21\u677f\u7279\u5316\u793a\u4f8b</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\ntemplate &lt;typename T&gt;\nclass Sum {\n   public:\n    Sum(T op1, T op2) : a(op1), b(op2) {}\n    T DoIT() { return a + b; }\n\n   private:\n    T a, b;\n};\n\ntemplate &lt;&gt;\nclass Sum&lt;char*&gt; {\n   public:\n    Sum(char* s1, char* s2) : str1(s1), str2(s2) {}\n    char* DoIT() {\n        char* tmp = new char[strlen(str1) + strlen(str2) + 1];\n        strcpy(tmp, str1);\n        strcat(tmp + strlen(str1), str2);\n        return tmp;\n    }\n\n   private:\n    char *str1, *str2;\n};\n\nint main() {\n    Sum&lt;int&gt; obj1(3, 4);\n    cout &lt;&lt; obj1.DoIT() &lt;&lt; endl;\n\n    char s1[] = \"Hello\", s2[] = \"THU\";\n    Sum&lt;char*&gt; obj2(s1, s2);\n    cout &lt;&lt; obj2.DoIT() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa\uff1a <pre><code>7\nHelloTHU\n</code></pre></p>"},{"location":"languages/cpp/concurrency/","title":"\u5e76\u53d1\u7f16\u7a0b","text":""},{"location":"languages/cpp/concurrency/#_2","title":"\u7ebf\u7a0b\u6c60","text":"<p>github\u4e0a\u7684\u5f00\u6e90\u7ebf\u7a0b\u6c60</p> <ul> <li>progschj/ThreadPool</li> <li>mtrebi/thread-pool</li> </ul>"},{"location":"languages/cpp/concurrency/#_3","title":"\u7ebf\u7a0b\u6570\u91cf\u56fa\u5b9a\u7684\u7ebf\u7a0b\u6c60","text":"<p>\u7ebf\u7a0b\u6c60\u53ef\u4ee5\u62e5\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u5de5\u4f5c\u7ebf\u7a0b\uff08\u901a\u5e38\u5de5\u4f5c\u7ebf\u7a0b\u6570\u91cf\u4e0e <code>std::thread::hardware_concurrency()</code> \u76f8\u540c\uff09\u3002</p> mtrebi/thread-pool \u7684\u7ebf\u7a0b\u6c60\u5b9e\u73b0 <pre><code>#include &lt;bits/stdc++.h&gt;\n\n// Thread safe implementation of a Queue using an std::queue\ntemplate &lt;typename T&gt;\nclass SafeQueue {\npublic:\n  SafeQueue() {}\n\n  SafeQueue(SafeQueue&amp; other) {\n    // TODO:\n  }\n\n  ~SafeQueue() {}\n\n  bool Empty() {\n    std::unique_lock&lt;std::mutex&gt; lock(mutex_);\n    return queue_.empty();\n  }\n\n  int Size() {\n    std::unique_lock&lt;std::mutex&gt; lock(mutex_);\n    return queue_.size();\n  }\n\n  void Enqueue(T&amp; t) {\n    std::unique_lock&lt;std::mutex&gt; lock(mutex_);\n    queue_.push(t);\n  }\n\n  bool Dequeue(T&amp; t) {\n    std::unique_lock&lt;std::mutex&gt; lock(mutex_);\n\n    if (queue_.empty()) {\n      return false;\n    }\n    t = std::move(queue_.front());\n\n    queue_.pop();\n    return true;\n  }\n\nprivate:\n  std::queue&lt;T&gt; queue_;\n  std::mutex mutex_;\n};\n\nclass ThreadPool {\npublic:\n  ThreadPool(const int threads_num)\n      : threads_(std::vector&lt;std::thread&gt;(threads_num)), shutdown_flag_(false) {}\n\n  ThreadPool(const ThreadPool&amp;) = delete;\n  ThreadPool(ThreadPool&amp;&amp;) = delete;\n\n  ThreadPool&amp; operator=(const ThreadPool&amp;) = delete;\n  ThreadPool&amp; operator=(ThreadPool&amp;&amp;) = delete;\n\n  // Inits thread pool\n  void Init() {\n    for (int i = 0; i &lt; threads_.size(); ++i) {\n      threads_[i] = std::thread(ThreadWorker(this, i));\n    }\n  }\n\n  // Waits until threads finish their current task and shutdowns the pool\n  void Shutdown() {\n    shutdown_flag_ = true;\n    conditional_lock_.notify_all();\n\n    for (int i = 0; i &lt; threads_.size(); ++i) {\n      if (threads_[i].joinable()) {\n        threads_[i].join();\n      }\n    }\n  }\n\n  // Submit a function to be executed asynchronously by the pool\n  template &lt;typename F, typename... Args&gt;\n  auto Submit(F&amp;&amp; f, Args&amp;&amp;... args) -&gt; std::future&lt;decltype(f(args...))&gt; {\n    // Create a function with bounded parameters ready to execute\n    std::function&lt;decltype(f(args...))()&gt; func =\n        std::bind(std::forward&lt;F&gt;(f), std::forward&lt;Args&gt;(args)...);\n    // Encapsulate it into a shared ptr in order to be able to copy construct /\n    // assign\n    auto task_ptr =\n        std::make_shared&lt;std::packaged_task&lt;decltype(f(args...))()&gt;&gt;(func);\n\n    // Wrap packaged task into void function\n    std::function&lt;void()&gt; wrapper_func = [task_ptr]() { (*task_ptr)(); };\n\n    // Enqueue generic wrapper function\n    task_queue_.Enqueue(wrapper_func);\n\n    // Wake up one thread if its waiting\n    conditional_lock_.notify_one();\n\n    // Return future from promise\n    return task_ptr-&gt;get_future();\n  }\n\nprivate:\n  class ThreadWorker {\n  public:\n    ThreadWorker(ThreadPool* pool, const int id) : host_pool_(pool), m_id(id) {}\n\n    void operator()() {\n      std::function&lt;void()&gt; func;\n      bool dequeued;\n      while (!host_pool_-&gt;shutdown_flag_) {\n        {\n          std::unique_lock&lt;std::mutex&gt; lock(host_pool_-&gt;conditional_mutex_);\n          if (host_pool_-&gt;task_queue_.Empty()) {\n            host_pool_-&gt;conditional_lock_.wait(lock);\n          }\n          dequeued = host_pool_-&gt;task_queue_.Dequeue(func);\n        }\n        if (dequeued) {\n          func();\n        }\n      }\n    }\n\n  private:\n    int m_id;\n    ThreadPool* host_pool_;\n  };\n\n  bool shutdown_flag_;\n  SafeQueue&lt;std::function&lt;void()&gt;&gt; task_queue_;\n  std::vector&lt;std::thread&gt; threads_;\n  std::mutex conditional_mutex_;\n  std::condition_variable conditional_lock_;\n};\n\nstd::random_device rd;\nstd::mt19937 mt(rd());\nstd::uniform_int_distribution&lt;int&gt; dist(-1000, 1000);\nauto rnd = std::bind(dist, mt);\n\n\nvoid simulate_hard_computation() {\n  std::this_thread::sleep_for(std::chrono::milliseconds(2000 + rnd()));\n}\n\n// Simple function that adds multiplies two numbers and prints the result\nvoid multiply(const int a, const int b) {\n  simulate_hard_computation();\n  const int res = a * b;\n  std::cout &lt;&lt; a &lt;&lt; \" * \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; res &lt;&lt; std::endl;\n}\n\n// Same as before but now we have an output parameter\nvoid multiply_output(int &amp; out, const int a, const int b) {\n  simulate_hard_computation();\n  out = a * b;\n  std::cout &lt;&lt; a &lt;&lt; \" * \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; out &lt;&lt; std::endl;\n}\n\n// Same as before but now we have an output parameter\nint multiply_return(const int a, const int b) {\n  simulate_hard_computation();\n  const int res = a * b;\n  std::cout &lt;&lt; a &lt;&lt; \" * \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; res &lt;&lt; std::endl;\n  return res;\n}\n\n\nvoid example() {\n  // Create pool with 3 threads\n  ThreadPool pool(3);\n\n  // Initialize pool\n  pool.Init();\n\n  // Submit (partial) multiplication table\n  for (int i = 1; i &lt; 3; ++i) {\n    for (int j = 1; j &lt; 10; ++j) {\n      pool.Submit(multiply, i, j);\n    }\n  }\n\n  // Submit function with output parameter passed by ref\n  int output_ref;\n  auto future1 = pool.Submit(multiply_output, std::ref(output_ref), 5, 6);\n\n  // Wait for multiplication output to finish\n  future1.get();\n  std::cout &lt;&lt; \"Last operation result is equals to \" &lt;&lt; output_ref &lt;&lt; std::endl;\n\n  // Submit function with return parameter \n  auto future2 = pool.Submit(multiply_return, 5, 3);\n\n  // Wait for multiplication output to finish\n  int res = future2.get();\n  std::cout &lt;&lt; \"Last operation result is equals to \" &lt;&lt; res &lt;&lt; std::endl;\n\n  pool.Shutdown();\n}\n\nint main() {\n  example();\n}\n</code></pre> <p>\u6ce8\u610f\u6b64\u5904\u7f16\u8bd1\u9700\u8981\u52a0\u4e0a<code>-pthread</code>\u7f16\u8bd1\u9009\u9879\u3002</p> \u6d4b\u8bd5\u7ed3\u679c <pre><code>1 * 1 = 1\n1 * 2 = 2\n1 * 3 = 3\n1 * 6 = 6\n1 * 4 = 4\n1 * 5 = 5\n1 * 7 = 7\n1 * 8 = 8\n2 * 1 = 2\n1 * 9 = 9\n2 * 3 = 6\n2 * 2 = 4\n2 * 5 = 10\n2 * 4 = 8\n2 * 6 = 12\n2 * 7 = 14\n2 * 9 = 18\n2 * 8 = 16\n5 * 6 = 30\nLast operation result is equals to 30\n5 * 3 = 15\nLast operation result is equals to 15\n</code></pre>"},{"location":"languages/cpp/effective_cpp/","title":"Effective C++","text":""},{"location":"languages/java/","title":"\u6982\u8ff0","text":""},{"location":"languages/java/#java","title":"\u4e3a\u4ec0\u4e48\u5b66\u4e60 Java","text":"<p>TOBIE\u7f16\u7a0b\u8bed\u8a00\u6392\u884c\u699c\u8fd1\u4e8c\u5341\u5e74\u5386\u53f2\u4e2d\u7a33\u5c45Top2\uff08\u53e6\u4e00\u4e2a\u662fC\u8bed\u8a00\uff09\uff0c\u4e14\u6709\u8d85\u8fc7\u4e00\u534a\u7684\u65f6\u95f4\u6392\u540d\u7b2c\u4e00\uff0c\u8fd9\u53cd\u6620\u51faJava\u5728\u5de5\u4e1a\u754c\u6709\u6301\u7eed\u7684\u751f\u547d\u529b\u548c\u5f71\u54cd\u529b\uff0c\u65e9\u5e74\u4f7f\u7528Java\u505a\u67b6\u6784\u7684\u516c\u53f8\u6700\u7ec8\u8d70\u5f97\u66f4\u5feb\u66f4\u8fdc\u3002</p>"},{"location":"languages/java/basic/class_package_interface/","title":"\u7c7b\u3001\u5305\u548c\u63a5\u53e3","text":""},{"location":"languages/java/basic/class_package_interface/#_2","title":"\u7c7b\u3001\u5b57\u6bb5\u3001\u65b9\u6cd5","text":"<p>\u7c7b \u662f Java \u7a0b\u5e8f\u4e2d\u6700\u8fd1\u672c\u7684\u8981\u7d20\uff0c\u662f\u4e00\u7c7b\u5bf9\u8c61\u7684\u539f\u578b\uff0c\u5b83 \u5c01\u88c5 \u4e86\u4e00\u7c7b\u5bf9\u8c61\u7684\u72b6\u6001\u548c\u65b9\u6cd5\u3002</p> <p>\u4ece\u5f62\u5f0f\u4e0a\u8bb2\uff0c\u76f8\u5f53\u4e8e\u8bb2 \u53d8\u91cf\u548c\u51fd\u6570 \u5c01\u88c5\u5230\u4e00\u4e2a \u7c7b \u5f53\u4e2d\u3002</p> <pre><code>class Person{\n    String name;\n    int age;\n    void sayHello() {\n        System.out.println(\"Hello! My name is \" + name);\n    }\n}\n</code></pre> <p>\u5b57\u6bb5\uff08field\uff09 \u662f\u7c7b\u7684\u5c5e\u6027\uff0c\u662f\u7528 \u53d8\u91cf \u6765\u8868\u793a\u7684\u3002</p> <p>\u5b57\u6bb5\u4e5f\u79f0\u4e3a \u57df\u3001\u57df\u53d8\u91cf\u3001\u5c5e\u6027\u3001\u6210\u5458\u53d8\u91cf \u7b49\u3002</p> <p>\u65b9\u6cd5\uff08method\uff09 \u662f\u7c7b\u7684\u529f\u80fd\u548c\u64cd\u4f5c\uff0c\u7528 \u51fd\u6570 \u6765\u8868\u793a\u3002</p> <p>\u6784\u9020\u65b9\u6cd5\uff08constructor\uff09 \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u521d\u59cb\u5316\u8be5\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\u3002\u6784\u9020\u65b9\u6cd5\u4e0e\u7c7b\u540c\u540d\uff0c\u800c\u4e14\u4e0d\u5199\u8fd4\u56de\u7c7b\u578b\uff1a <pre><code>Person(String _name, int _age) {\n    name = _name;\n    age = _age;\n}\n</code></pre> \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u7c7b\u6709\u4e00\u81f3\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u65b9\u6cd5\uff0c\u7cfb\u7edf\u81ea\u52a8\u4ea7\u751f\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u79f0\u4e3a\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\uff08default constructor\uff09\u3002\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\u4e0d\u5e26\u53c2\u6570\uff0c\u800c\u4e14\u65b9\u6cd5\u4f53\u4e3a\u7a7a\u3002</p> <p>\u8bbf\u95ee\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u7528 <code>.</code> \u8fd0\u7b97\u7b26\uff1a <pre><code>Person p = new Person();\nSystem.out.println(p.name);\np.sayHello();\n</code></pre> \u8fd9\u79cd\u4f7f\u7528\u65b9\u5f0f\u7684\u597d\u5904\u662f\uff1a\u5c01\u88c5\u6027 \u548c \u5b89\u5168\u6027\uff08\u901a\u8fc7\u5f15\u7528\u8bbf\u95ee\u4fdd\u8bc1\u4e0d\u4f1a\u8bbf\u95ee\u975e\u6cd5\u5730\u5740\uff09\u3002</p> <p>\u65b9\u6cd5\u91cd\u8f7d\uff08override\uff09\uff1a\u591a\u4e2a\u65b9\u6cd5\u6709\u76f8\u540c\u7684\u540d\u5b57\uff0c\u7f16\u8bd1\u671f \u80fd\u8bc6\u522b\u51fa\u6765\u3002</p> <p>\u8fd9\u4e9b\u65b9\u6cd5\u7684 \u7b7e\u540d\uff08signature\uff09 \u4e0d\u540c\uff0c\u5373\u5177\u6709\u4e0d\u540c\u7684\u53c2\u6570\u5217\u8868\u3002</p> <p>\u901a\u8fc7\u65b9\u6cd5\u91cd\u8f7d\u53ef\u4ee5\u5b9e\u73b0 \u591a\u6001\uff08polymorphism\uff09\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#this","title":"this \u7684\u4f7f\u7528\uff1a","text":"<ul> <li>\u5728\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528 <code>this</code> \u6765\u8bbf\u95ee\u5b57\u6bb5\u53ca\u65b9\u6cd5\u3002\u6b64\u65f6 <code>this</code> \u8868\u793a\u5f53\u524d\u5b9e\u4f8b\u672c\u8eab\u3002</li> <li><code>this</code> \u7ecf\u5e38\u7528\u4e8e\u89e3\u51b3\u5c40\u90e8\u53d8\u91cf\u4e0e\u7c7b\u53d8\u91cf\u540c\u540d\u7684\u95ee\u9898\uff0c\u4f8b\u5982\uff1a <pre><code>Person(int age, String name) {\n    this.age = age;\n    this.name = name;\n}\n</code></pre></li> <li>\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u7528 <code>this</code> \u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5982\uff1a <pre><code>Person() {\n    this(0, \"\");\n    //...\n}\n</code></pre> \u6ce8\uff1a\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u8fd9\u6761\u8c03\u7528\u8bed\u53e5 \u5fc5\u987b\u653e\u5728\u7b2c\u4e00\u53e5\u3002</li> </ul>"},{"location":"languages/java/basic/class_package_interface/#_3","title":"\u7c7b\u7684\u7ee7\u627f","text":"<p>\u7ee7\u627f\uff08inheritance\uff09 \u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u6700\u4e3a \u91cd\u8981\u7684\u7279\u6027\u4e4b\u4e00\u3002</p> <p>Java \u4e2d\u5173\u4e8e\u7ee7\u627f\u6709\uff1a\u5b50\u7c7b\uff08subclass\uff09 \u548c \u7236\u7c7b/\u8d85\u7c7b\uff08superclass\uff09 \u7684\u6982\u5ff5\u3002</p> <p>Java \u53ea\u652f\u6301\u5355\u7ee7\u627f\uff0c\u5373 \u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u76f4\u63a5\u7684\u7236\u7c7b\u3002</p> <p>\u5b50\u7c7b\u5728\u7ee7\u627f\u7236\u7c7b\u7684\u72b6\u6001\u548c\u884c\u4e3a\u7684\u540c\u65f6\uff0c\u53ef\u4ee5 \u4fee\u6539 \u7236\u7c7b\u7684\u72b6\u6001\u6216\u91cd\u8f7d\u7236\u7c7b\u7684\u884c\u4e3a\uff0c\u4e5f\u53ef\u4ee5 \u589e\u52a0 \u65b0\u7684\u72b6\u6001\u548c\u884c\u4e3a\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a</p> <ul> <li>\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u62bd\u8c61\u7a0b\u5ea6</li> <li>\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff0c\u63d0\u5347\u5f00\u53d1\u6548\u7387\u597d\u53ef\u7ef4\u62a4\u6027 </li> </ul> <p>Java \u4e2d\u7ee7\u627f\u662f\u901a\u8fc7 <code>extends</code> \u5173\u952e\u5b57\u6765\u5b9e\u73b0\u7684\uff1a <pre><code>class Student extends Person {\n    //...\n}\n</code></pre> \u7f3a\u7701 <code>extends</code> \u8868\u793a\u4ece <code>java.lang.Object</code> \u7c7b\u7ee7\u627f\u3002</p> <p>\u6240\u6709\u7684\u7c7b\u90fd\u662f\u901a\u8fc7\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627f <code>java.lang.Object</code> \u5f97\u5230\u7684\u3002</p> <p>\u7528 UML \u56fe\u8868\u793a\u7ee7\u627f\u5173\u7cfb\uff1a</p> <p></p> <pre><code>class Student extends Person {\n    String school;\n    int score;\n    boolean isGood() { return score &gt; 80; }\n    //...\n}\n</code></pre> <p>JDK1.5 \u4e4b\u540e\u53ef\u4ee5\u7528 <code>@override</code> \u6ce8\u8bb0 \u6765\u8868\u793a\u51fd\u6570\u7684 \u8986\u76d6\uff08override\uff09\uff0c\u800c\u4e0d\u7528\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a <pre><code>void sayHello() {\n    System.out.println(\"Hello! My name is \" + name + \" from \" + school);\n}\n</code></pre></p> <p>\u4e00\u4e2a\u7c7b\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u540c\u540d\u7684\u65b9\u6cd5\uff0c\u8fd9\u79f0\u4e3a\u65b9\u6cd5\u7684 \u91cd\u8f7d\uff08overload\uff09 \u3002\u5f53\u91cd\u8f7d\u7236\u7c7b\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u672c\u8d28\u4e0a\u662f\u589e\u52a0\u65b0\u7684\u65b9\u6cd5\uff1a <pre><code>void sayHello(Student another) {\n    System.out.println(\"Hi!\");\n    if (school.equals(another.school)) {\n        System.out.println(\"Schoolmate!\");\n    }\n}\n</code></pre></p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>super</code> \u6765\u8bbf\u95ee\u7236\u7c7b\u7684\u57df\u548c\u65b9\u6cd5\u3002</p> <p>\u6ce8\u610f\u65e0\u8bba\u662f <code>this</code> \u8fd8\u662f <code>super</code> \u90fd\u662f\u5f53\u524d\u5bf9\u8c61\u5b9e\u4f8b\u7684\u6307\u9488\uff0c\u5e76\u4e0d\u4f1a\u56e0\u4e3a <code>super</code> \u7684\u4f7f\u7528\u4f7f\u5f97\u5185\u5b58\u4e2d\u591a\u51fa\u4e00\u4e2a\u7236\u7c7b\u7684\u5bf9\u8c61\u3002</p> <p><code>super</code> \u7684\u5b58\u5728\u4f7f\u5f97\u5b50\u7c7b\u5728 \u8986\u76d6 \u7236\u7c7b\u65b9\u6cd5\u7684\u540c\u65f6\uff0c\u53c8 \u53ef\u4ee5\u4f7f\u7528 \u539f\u6765\u5b9a\u4e49\u5728\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#_4","title":"\u7236\u7c7b\u5bf9\u8c61\u4e0e\u5b50\u7c7b\u5bf9\u8c61\u7684\u8f6c\u6362\uff1a","text":"<ul> <li>\u5b50\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5176\u7236\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61</li> <li>\u7236\u7c7b\u5bf9\u8c61\u4e0d\u80fd\u88ab\u5f53\u505a\u5176\u67d0\u4e00\u4e2a\u5b50\u7c7b\u7684\u5bf9\u8c61\uff08\u5982\u679c\u7528\u5b50\u7c7b\u6307\u9488\u6307\u5411\u7236\u7c7b\u5b9e\u4f8b\uff0c\u7f16\u8bd1\u80fd\u901a\u8fc7\uff0c\u4f46\u8fd0\u884c\u4f1a\u629b\u5f02\u5e38\uff09</li> <li>\u7236\u7c7b\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\u53ef\u4ee5\u4f20\u4e00\u4e2a\u5b50\u7c7b\u5b9e\u53c2</li> <li>\u5982\u679c\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528\u6307\u5411\u7684\u5b9e\u9645\u662f\u4e00\u4e2a\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7236\u7c7b\u7684\u60f3\u7684\u5f15\u7528\u53ef\u4ee5\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff08casting\uff09\u6210\u5b50\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528\uff1a <pre><code>Person p = new Student(\"Desmond\", 12);\nStudent s = (Student)p;\n</code></pre></li> </ul>"},{"location":"languages/java/basic/class_package_interface/#_5","title":"\u5305\u7684\u4f7f\u7528","text":""},{"location":"languages/java/basic/class_package_interface/#package","title":"package","text":"<p>\u5305\u53ca\u5b50\u5305\u7684\u5b9a\u4e49\uff0c\u5b9e\u8d28\u4e0a\u662f\u4e00\u79cd\u547d\u540d\u7a7a\u95f4\uff0c\u4e3a\u4e86\u89e3\u51b3\u547d\u540d\u51b2\u7a81\u3002</p> <p><code>package pkg1.pkg2.pkg3</code></p> <p>\u5b83\u4e0e\u7c7b\u7684\u7ee7\u627f\u6ca1\u6709\u5173\u7cfb\u3002\u5b9e\u9645\u4e0a\uff0c\u5b50\u7c7b\u548c\u7236\u7c7b\u53ef\u4ee5\u4f4d\u4e8e\u4e0d\u540c\u7684\u5305\u4e2d\u3002</p> <p>\u5305\u6709\u4e24\u4e2a\u5c42\u9762\u7684\u542b\u4e49\uff1a</p> <ul> <li>\u4e00\u4e2a\u662f \u547d\u540d\u7a7a\u95f4\u3001\u5b58\u50a8\u8def\u5f84</li> <li>\u4e00\u4e2a\u662f \u53ef\u8bbf\u95ee\u6027\uff0c\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u5404\u4e2a\u7c7b\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ef\u4ee5\u76f8\u4e92\u8bbf\u95ee</li> </ul> <p>\u5305\u5c42\u6b21\u7684\u6839\u76ee\u5f55\u662f\u7531\u73af\u5883\u53d8\u91cf <code>CLASSPATH</code> \u6765\u786e\u5b9a\u7684\u3002</p> <p>\u5bf9\u4e8e\u6ca1\u6709 <code>package</code> \u8bed\u53e5\u7684\u6587\u4ef6\uff0c\u79f0\u4e3a\u9ed8\u8ba4\u5305\uff0c\u9ed8\u8ba4\u5728\u6839\u76ee\u5f55\u4e0b\u3002</p> <p>JDK \u4e2d\u63d0\u4f9b\u4e86\u5f88\u591a\u5305\uff0c\u5982\uff1a<code>java.applet</code>, <code>java.awt</code>, <code>java.awt.image</code>, <code>java.awt,peer</code>, <code>java.io</code>, <code>java.lang</code>, <code>java.net</code>, <code>java.util</code>, <code>java.swing</code> \u7b49\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#import","title":"import","text":"<p>\u4e3a\u4e86\u80fd\u4f7f\u7528 Java \u4e2d\u5df2\u7ecf\u63d0\u4f9b\u7684\u7c7b\uff0c\u9700\u8981\u7528 <code>import</code> \u8bed\u53e5\u6765\u5bfc\u5165\u6240\u9700\u8981\u7684\u7c7b\uff1a<code>import pkg1.pkg2.pkg3.Class</code></p> <p>Java \u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5bfc\u5165 <code>java.lang.*</code></p>"},{"location":"languages/java/basic/class_package_interface/#-public-private-protected","title":"\u8bbf\u95ee\u63a7\u5236\u7b26 - public, private, protected","text":"<p>Java \u4e2d\u6709\u4e24\u79cd\u4fee\u9970\u7b26\uff08modifier\uff09\uff1a\u8bbf\u95ee\u4fee\u9970\u7b26\uff08\u5982 public/private\uff09 \u548c \u5176\u4ed6\u4fee\u9970\u7b26\uff08\u5982 abstract\uff09\u3002\u4fee\u9970\u7b26\u53ef\u4ee5\u4fee\u9970\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u4fee\u9970\u7c7b\u7684\u6210\u5458\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#_6","title":"\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u7b26","text":"<p> \u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u7b26</p>"},{"location":"languages/java/basic/class_package_interface/#_7","title":"\u7c7b\u7684\u8bbf\u95ee\u63a7\u5236\u7b26","text":"<p>\u88ab <code>public</code> \u4fee\u9970\u7684\u7c7b\u53ef\u4ee5\u88ab \u5176\u4ed6\u7c7b \u6240\u8bbf\u95ee\uff0c\u800c\u9ed8\u8ba4\u7684\u8bbf\u95ee\u63a7\u5236\u6743\u9650\u662f \u540c\u5305 \u8bbf\u95ee\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#setter-getter","title":"setter \u548c getter","text":"<p>\u5c06\u5b57\u6bb5\u7528 <code>private</code> \u4fee\u9970\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5c06\u4fe1\u606f\u8fdb\u884c \u5c01\u88c5\u548c\u9690\u85cf \u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a</p> <ul> <li>\u5c5e\u6027\u7528 <code>private</code> \u66f4\u597d\u5730\u5c01\u88c5\u548c\u9690\u85cf\uff0c\u5916\u90e8\u7c7b\u4e0d\u80fd\u968f\u610f\u5b58\u53d6\u548c\u4fee\u6539\u3002</li> <li>\u5728\u65b9\u6cd5\u5b9a\u4e49\u4e2d\u53ef\u4ee5\u68c0\u9a8c \u53c2\u6570\u7684\u5408\u6cd5\u6027</li> <li>\u65b9\u6cd5\u53ef\u4ee5\u7ed9\u51fa\u7ecf\u8fc7\u8ba1\u7b97\u540e\u7684\u503c</li> <li>\u65b9\u6cd5\u53ef\u4ee5\u5b8c\u6210\u5176\u4ed6\u5fc5\u8981\u5de5\u4f5c\uff08\u5982\u6e05\u7406\u8d44\u6e90\u3001\u8bbe\u5b9a\u72b6\u6001 \u7b49\uff09</li> <li>\u53ea\u63d0\u4f9b <code>getXXX</code> \u4e0d\u63d0\u4f9b <code>setXXX</code> \u4fdd\u8bc1\u5c5e\u6027\u662f\u53ea\u8bfb\u7684</li> </ul>"},{"location":"languages/java/basic/class_package_interface/#-static-final-abstract","title":"\u5176\u4ed6\u4fee\u9970\u7b26 - static, final, abstract","text":""},{"location":"languages/java/basic/class_package_interface/#static","title":"static \u5b57\u6bb5","text":"<p>\u4e0d\u4fdd\u5b58\u5728\u67d0\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u4e2d\uff0c\u800c\u662f\u4fdd\u5b58\u5728\u7c7b\u7684\u5b9e\u4f8b\u7684\u516c\u5171\u5b58\u50a8\u5355\u5143\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7 \u7c7b\u540d \u6765\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u5b9e\u4f8b \u8bbf\u95ee\uff0c\u4e24\u79cd\u65b9\u5f0f\u7684\u7ed3\u679c\u662f\u76f8\u540c\u7684\u3002</p> <p>\u4f8b\u5982\uff0c<code>System</code> \u7c7b\u7684 <code>in</code> \u548c <code>out</code> \u5bf9\u8c61\uff0c\u5c31\u662f\u5c5e\u4e8e\u7c7b\u7684\u57df\uff0c\u76f4\u63a5\u7528\u7c7b\u540d\u6765\u8bbf\u95ee\uff0c\u5373 <code>System.in</code> \u548c <code>System.out</code>\u3002</p> <p>\u53ef\u4ee5\u7528\u6765\u4f5c\u5b9e\u4f8b\u8ba1\u6570\uff1a <pre><code>class Person {\n    static long totalNum;\n    int age;\n    String Name;\n};\n</code></pre></p> <p>\u7531\u4e8e Java \u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\uff08\u4e0d\u652f\u6301 \u201c\u5c06\u53d8\u91cf\u5b9a\u4e49\u5728\u5916\u9762\u201d\uff09\uff0c\u6545 <code>static</code> \u6210\u5458\u53ef\u4ee5\u7528\u4ee5\u66ff\u6362 C++ \u4e2d\u7684 \u5168\u5c40\u53d8\u91cf\u3002</p> <p><code>static</code> \u65b9\u6cd5\u540c\u7406\uff0c\u5b83\u4e0d\u80fd\u7528\u6765\u5bf9\u5177\u4f53\u5b9e\u4f8b\u7684\u6210\u5458\u8fdb\u884c\u64cd\u4f5c\uff0c\u53ea\u80fd\u8c03\u7528 <code>static</code> \u6210\u5458\u3001\u64cd\u7eb5 <code>static</code> \u53d8\u91cf\u3002\u663e\u7136\uff0c<code>static</code> \u7684\u65b9\u6cd5\u4e0d\u80fd\u8bbf\u95ee <code>this</code> \u6216 <code>super</code> \u8fd9\u79cd\u5b9e\u4f8b\u5f15\u7528\u3002</p> <p><code>static</code> \u65b9\u6cd5\u7684\u8c03\u7528\u53ef\u4ee5\u4f7f\u7528\u7c7b\u540d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u540d\uff0c\u4f46\u6548\u679c\u662f\u76f8\u540c\u7684\u3002</p> <p>\u6709\u4e00\u79cd\u65b9\u4fbf\u7684\u5199\u6cd5\u662f <code>import static</code>\uff0c\u4f8b\u5982\uff1a <pre><code>import static java.lang.System.*;\n\nout.println();  // \u8868\u793a System.out.println();\n</code></pre> <code>import static</code> \u7684\u524d\u63d0\u662f\u7c7b\u7684\u6240\u6709\u6210\u5458\u90fd\u662f<code>static</code>\u7684\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#final","title":"final","text":"<p><code>final</code> \u4fee\u9970\u7684\u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u5373\u4e0d\u80fd\u6709\u5b50\u7c7b\u3002</p> <p><code>final</code> \u4fee\u9970\u7684\u65b9\u6cd5\u4e0d\u80fd\u88ab\u5b50\u7c7b\u65b9\u6cd5\u8986\u76d6\u3002</p> <p><code>final</code> \u4fee\u9970\u7684\u5b57\u6bb5\u548c\u5c40\u90e8\u53d8\u91cf\uff08\u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\uff09\u80fd\u4e14\u53ea\u80fd\u88ab\u8d4b\u503c\u4e00\u6b21\uff0c\u662f\u53ea\u8bfb\u7684\u3002</p> <ul> <li> <p>\u4e00\u4e2a\u5b57\u6bb5\u88ab <code>static final</code> \u4fee\u9970\u65f6\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u5e38\u91cf\uff0c\u5982 <code>Integer.MAX_VALUE</code>, <code>Math.PIE</code>\u3002</p> </li> <li> <p>\u5728\u5b9a\u4e49 <code>static final</code> \u57df\u65f6\uff0c\u5982\u4e0d\u7ed9\u5b9a\u521d\u59cb\u503c\uff0c\u5219\u6309\u9ed8\u8ba4\u503c\u8fdb\u884c\u521d\u59cb\u5316\uff08\u6570\u503c\u4e3a <code>0</code>\uff0c\u5e03\u5c14\u578b\u4e3a <code>false</code>\uff0c\u5f15\u7528\u578b\u4e3a <code>null</code>\uff09\u3002</p> </li> <li> <p>\u5728\u5b9a\u4e49 <code>final</code> \u5b57\u6bb5\u65f6\uff0c\u82e5\u4e0d\u662f <code>static</code> \u7684\u57df\uff0c\u5219 \u5fc5\u987b\u4e14\u53ea\u80fd \u8d4b\u503c\u4e00\u6b21\uff0c\u4e0d\u80fd\u7f3a\u7701\u3002</p> <ul> <li>\u8fd9\u79cd\u57df\u7684\u8d4b\u503c\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\u4e00\u662f\u5728\u5b9a\u4e49\u53d8\u91cf\u65f6\u8d4b\u521d\u59cb\u503c\uff0c\u800c\u662f\u5728\u6bcf\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\u8d4b\u503c\u3002</li> </ul> </li> <li> <p>\u5728\u5b9a\u4e49 <code>final</code> \u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u4e5f \u5fc5\u987b\u4e14\u4ec5\u80fd\u8d4b\u503c\u4e00\u6b21\u3002\u8fd9\u4e2a\u503c\u53ef\u4ee5\u4e0d\u662f\u5e38\u91cf\uff0c\u4f46\u5728\u8be5\u53d8\u91cf\u5b58\u5728\u671f\u95f4\u4e0d\u4f1a\u6539\u53d8\u3002</p> </li> </ul>"},{"location":"languages/java/basic/class_package_interface/#abstract","title":"abstract","text":"<p><code>abstract</code> \u7c7b\uff08\u62bd\u8c61\u7c7b\uff09\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002</p> <p><code>abstract</code> \u65b9\u6cd5\uff08\u62bd\u8c61\u65b9\u6cd5\uff09\u7684\u5199\u6cd5\u7c7b\u4f3c C++ \u4e2d\u7684\u51fd\u6570\u58f0\u660e\uff1a <pre><code>abstract retuanType abstractMethod(/* param list */);\n</code></pre> \u5176\u4f5c\u7528\u5728\u4e8e \u4e3a\u6240\u6709\u7684\u5b50\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u3002</p> <p>\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5305\u542b\u3002\u4f46\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\u5fc5\u987b\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\u3002</p> <p>\u62bd\u8c61\u65b9\u6cd5\u5728\u5b50\u7c7b\u4e2d\u5fc5\u987b\u88ab\u5b9e\u73b0\uff0c\u5426\u5219\u5b50\u7c7b\u4ecd\u7136\u662f <code>abstract</code> \u7684\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#interface","title":"\u63a5\u53e3\uff08interface\uff09","text":"<p>\u63a5\u53e3\u662f \u67d0\u79cd\u7279\u5f81\u7684\u7ea6\u5b9a\u3002</p> <ul> <li>\u63a5\u53e3\u5b9a\u4e49\u4e2d\u6240\u6709\u65b9\u6cd5\u90fd\u662f <code>public abstract</code> \u7684\u3002\uff08\u5728 UML \u56fe\u4e2d\u7528\u659c\u4f53\u8868\u793a\uff09</li> <li>\u5b9e\u73b0\u63a5\u53e3 <code>implements</code> \u53ef\u4ee5\u5b9e\u73b0\u591a\u7ee7\u627f\uff0c\u5e76\u4e14\u4e0e\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u65e0\u5173</li> </ul> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff1a  \u63a5\u53e3\u7ee7\u627fUML\u56fe</p> <p>\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9762\u5411\u5b9e\u73b0\uff1a</p> <ul> <li><code>Flyable f = new Bird();</code></li> <li>Java \u4e2d\u6709\u5927\u91cf\u7684\u63a5\u53e3</li> </ul> <p>\u63a5\u53e3\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u901a\u8fc7\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0 \u4e0d\u76f8\u5173\u7c7b\u7684\u76f8\u540c\u884c\u4e3a\uff0c\u800c\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e9b\u7c7b\u4e4b\u95f4\u7684\u5c42\u6b21\u5173\u7cfb\u3002\u4ece\u800c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5b9e\u73b0\u4e86\u591a\u91cd\u7ee7\u627f\u3002</li> <li>\u901a\u8fc7\u63a5\u53e3\u53ef\u4ee5\u6307\u660e\u591a\u4e2a\u7c7b\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002</li> <li>\u901a\u8fc7\u63a5\u53e3\u53ef\u4ee5\u4e86\u89e3\u5bf9\u8c61\u7684\u4ea4\u4e92\u754c\u9762\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u5bf9\u8c61\u6240\u5bf9\u5e94\u7684\u7c7b\u3002</li> </ul> <p>\u63a5\u53e3\u4e3e\u4f8b\uff1a <pre><code>interface Collection {\n    void add(Object obj);\n    void delete(Object obj);\n    Object find(Object obj);\n    int size();\n}\n</code></pre></p> <p>\u901a\u5e38 \u63a5\u53e3\u540d \u4ee5 ...able \u6216 ...ible \u7ed3\u5c3e\uff0c\u6807\u660e\u63a5\u53e3\u80fd\u5b8c\u6210\u4e00\u5b9a\u7684\u884c\u4e3a\u3002</p> <p>\u63a5\u53e3\u7684\u58f0\u660e\u4e2d\u8fd8\u53ef\u4ee5\u5305\u62ec\u5bf9\u63a5\u53e3\u7684\u8bbf\u95ee\u6743\u9650\u4ee5\u53ca\u5bf9\u5b83\u7684\u7236\u63a5\u53e3\u5217\u8868\u3002\u5b8c\u6574\u7684\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a <pre><code>[public] interface interfaceName [extends listOfSuperInterface] {\n    //  ...\n}\n</code></pre></p> <ul> <li>\u5176\u4e2d <code>public</code> \u6307\u660e\u4efb\u610f\u7c7b\u5747\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u63a5\u53e3\uff0c\u7f3a\u7701\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e0e\u8be5\u63a5\u53e3\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u7c7b\u624d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u63a5\u53e3\u3002</li> <li><code>extends</code> \u5b50\u53e5\u4e0e\u7c7b\u58f0\u660e\u4e2d\u7684 <code>extends</code> \u5b50\u53e5\u4e0d\u540c\u7684\u662f\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u6709\u591a\u4e2a\u7236\u63a5\u53e3\uff0c\u4f46\u4e00\u4e2a\u5b50\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u7236\u7c7b\u3002\u5b50\u63a5\u53e3\u7ee7\u627f\u7236\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u5e38\u91cf\u548c\u65b9\u6cd5\u3002</li> </ul> <p>\u63a5\u53e3\u5185\u65b9\u6cd5\u58f0\u660e\u7684\u683c\u5f0f\u4e3a\uff1a<code>returnType methodName(/* paramlist */);</code></p> <p>\u63a5\u53e3\u4e2d\u53ea\u8fdb\u884c\u65b9\u6cd5\u7684\u58f0\u660e\uff0c\u4e0d\u63d0\u4f9b\u65b9\u6cd5\u7684\u5b9e\u73b0\b\uff0c\u6545\u8be5\u5b9a\u4e49\u6ca1\u6709\u65b9\u6cd5\u4f53\uff0c\u7528 <code>;</code> \u7ed3\u5c3e\u3002</p> <p>\u5728\u63a5\u53e3\u4e2d\u58f0\u660e\u7684\u65b9\u6cd5\u5177\u6709 <code>public</code> \u548c <code>abstract</code> \u5c5e\u6027\u3002\u6240\u4ee5\u5b9a\u4e49\u7684\u65f6\u5019\u8fd9\u4e24\u4e2a\u5173\u952e\u8bcd\u662f \u53ef\u4ee5\u7701\u7565\u7684\u3002</p> <p>\u53e6\u5916\uff0c\u5982\u679c\u5b50\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u548c\u7236\u63a5\u53e3\u540c\u540d\u7684\u5e38\u91cf\u6216\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u5219\u7236\u63a5\u53e3\u4e2d\u7684\u5e38\u91cf\u88ab\u9690\u85cf\uff0c\u65b9\u6cd5\u88ab\u91cd\u8f7d\u3002</p> <p>\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4e0b\u9762\u5b9a\u4e49\u7684 <code>FIFOQueue</code> \u4e2d\u5b9e\u73b0\u4e86\u4e0a\u9762\u6240\u5b9a\u4e49\u7684\u63a5\u53e3 <code>Collection</code>\uff1a <pre><code>class FIFOQueue implements Collection {\n    public void add(Object obj) {\n        // ...\n    }\n\n    public void delete(Object obj) {\n        // ...\n    }\n\n    public Object find(Object obj) {\n        // ...\n    }\n\n    public int currentCount() {\n        // ...\n    }\n}\n</code></pre> \u5728\u7c7b\u4e2d\u5b9e\u73b0\u63a5\u53e3\u5b9a\u4e49\u7684\u65b9\u6cd5\u65f6\uff0c\u65b9\u6cd5\u7684\u58f0\u660e\u5fc5\u987b\u4e0e\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684\u5b8c\u5168\u4e00\u81f4\u3002</p> <p>\u63a5\u53e3\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a \u5f15\u7528\u7c7b\u578b \u6765\u4f7f\u7528\u3002\u4efb\u4f55\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u7c7b\u7684\u5b9e\u4f8b\u90fd\u53ef\u4ee5 \u5b58\u50a8\u5728\u8be5\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\uff0c\u901a\u8fc7\u8fd9\u4e9b\u53d8\u91cf \u53ef\u4ee5\u8bbf\u95ee\u7c7b\u6240\u5b9e\u73b0\u7684\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u3002Java \u8fd0\u884c\u65f6\u7cfb\u7edf\u52a8\u6001\u5730\u51b3\u5b9a\u8be5\u4f7f\u7528\u54ea\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002</p> <p>\u628a\u63a5\u53e3\u4f5c\u4e3a\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4e0d\u9700\u8981\u4e86\u89e3\u5bf9\u8c61\u6240\u5bf9\u5e94\u7684\u5177\u4f53\u7684\u7c7b\uff0c\u4e3e\u4f8b\u5982\u4e0b\uff1a <pre><code>// ...\nCollection c = new FIFOQueue();\nc.add(obj);\n//...\n</code></pre></p>"},{"location":"languages/java/basic/class_package_interface/#java8","title":"\u63a5\u53e3\u4e2d\u7684\u5e38\u91cf\u548c\u679a\u4e3e\uff0cJava8 \u5bf9\u63a5\u53e3\u7684\u6269\u5145","text":""},{"location":"languages/java/basic/class_package_interface/#_8","title":"\u5e38\u91cf\u548c\u679a\u4e3e","text":"<p>\u63a5\u53e3\u4f53\u91cd\u53ef\u4ee5\u5305\u542b\u5e38\u91cf\u5b9a\u4e49\u3002</p> <p>\u5e38\u91cf\u5b9a\u4e49\u7684\u683c\u5f0f\u4e3a\uff1a <pre><code>type NAME = value;\n</code></pre> \u5176\u4e2d <code>type</code> \u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c<code>NAME</code> \u662f\u5e38\u91cf\u540d\uff0c\u901a\u5e38\u7528\u5927\u5199\uff0c<code>value</code> \u662f\u5e38\u91cf\u503c\u3002</p> <p>\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u5e38\u91cf\u53ef\u4ee5\u88ab\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u591a\u4e2a\u7c7b\u5171\u4eab\uff0c\u5b83\u4e0e C \u4e2d <code>define</code> \u4ee5\u53ca C++ \u4e2d\u7528 <code>cosnt</code> \u5b9a\u4e49\u5e38\u91cf\u7684\u610f\u4e49\u662f\u76f8\u540c\u7684\u3002</p> <p>\u5728 \u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u5e38\u91cf \u5177\u6709 <code>public</code>, <code>static</code>, <code>final</code> \u5c5e\u6027\u3002</p> <p>\u4ece JDK5 \u5f00\u59cb\uff0c\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e <pre><code>enum Light { Red, Yello, Green }\n</code></pre></p> <p>\u4f7f\u7528\uff1a <pre><code>Light light = Light.Red;\nswitch(light) { case Red: ... break; }\n</code></pre> \u6ce8\u610f\uff1a<code>case</code> \u540e\u9762\u4e0d\u5199\u4e3a <code>Light.Red</code>\u3002</p> <p>Java \u4e2d\u679a\u4e3e\u662f\u7528 <code>class</code> \u6765\u5b9e\u73b0\u7684\uff0c\u53ef\u4ee5\u590d\u6742\u5730\u4f7f\u7528\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#java8_1","title":"Java8 \u4e2d\u7684\u63a5\u53e3","text":"<p>Java8 \u4ee5\u4e0a\uff0c\u63a5\u53e3\u6210\u5458\u8fd8\u53ef\u4ee5\u662f\uff1a<code>static</code> \u65b9\u6cd5\uff0c\u5177\u6709\u5b9e\u73b0\u4f53\u7684\u65b9\u6cd5\uff08default \u65b9\u6cd5\uff09</p> <ul> <li>\u9ed8\u8ba4\u65b9\u6cd5\u7684\u597d\u5904\u662f\uff1a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u5b50\u7c7b\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u91cd\u65b0\u5199\u4e86\u3002</li> </ul>"},{"location":"languages/java/basic/class_package_interface/#_9","title":"\u5c0f\u7ed3","text":""},{"location":"languages/java/basic/class_package_interface/#_10","title":"\u5b8c\u6574\u7684\u7c7b\u5b9a\u4e49","text":"<pre><code>// \u7c7b\u58f0\u660e\n[public] [abstract|final] class className [extends superClassName] [implements InterfaceNameList] {\n    // \u6210\u5458\u53d8\u91cf\u58f0\u660e\uff08\u53ef\u4e3a\u591a\u4e2a\uff09\n    [public|protected|private] [static] [final] [transient] [volatile] type variableName;\n\n    // \u65b9\u6cd5\u5b9a\u4e49\u53ca\u5b9e\u73b0\uff08\u53ef\u4e3a\u591a\u4e2a\uff09\n    [public|protected|private] [static] [final|abstract] [native] [synchronized] returnType mathodName([paramList]) [throws exceptionList] {\n        // ...\n    }\n}\n</code></pre> <p>\u53ef\u89c1\uff0c\u5728\u58f0\u660e Java \u7c7b\u57df\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u5458\u5173\u6ce8\u7684\u662f\uff1a</p> <ul> <li>\u53ef\u7ee7\u627f\u6027\uff1a<code>public</code>, <code>protected</code>, <code>private</code></li> <li>\u53ef\u8bbf\u95ee\u6027\uff1a<code>static</code></li> <li>\u53ef\u66f4\u6539\u6027\uff1a<code>final</code></li> <li>\u662f\u5426\u53c2\u4e0e\u5e8f\u5217\u5316\uff1a<code>transient</code></li> <li>\u7ebf\u7a0b\u540c\u6b65\u6027\uff1a<code>volatile</code></li> </ul>"},{"location":"languages/java/basic/class_package_interface/#_11","title":"\u5b8c\u6574\u7684\u63a5\u53e3\u5b9a\u4e49","text":"<pre><code>// \u63a5\u53e3\u58f0\u660e\n[public] interface InterfaceName [extends SuperInterfaceList] {\n    type constantName = Value;  // \u5e38\u91cf\u58f0\u660e\uff08\u53ef\u4e3a\u591a\u4e2a\uff09\n    returnType methodName([paramList]); // \u65b9\u6cd5\u58f0\u660e\uff08\u53ef\u4e3a\u591a\u4e2a\uff09\n}\n</code></pre>"},{"location":"languages/java/basic/class_package_interface/#_12","title":"\u4e09\u79cd\u8981\u6c42\u56fa\u5b9a\u58f0\u660e\u65b9\u5f0f\u7684\u65b9\u6cd5","text":"<p><pre><code>// \u6784\u9020\u65b9\u6cd5\nclassName([paramList]) {\n    // ...\n}\n\n// main()\u65b9\u6cd5\npublic static void main(String args[]) {\n    // ...\n}\n\n// finalize()\u65b9\u6cd5\nprotected void finalize() throws throwable {\n    // ...\n}\n</code></pre> \u5176\u4e2d <code>finalize</code> \u65b9\u6cd5\u4e00\u822c\u4e0d\u7528\uff0c\u4e0e\u7f16\u8bd1\u5668\u76f8\u5173\u3002</p>"},{"location":"languages/java/basic/class_package_interface/#java","title":"\u5b8c\u6574\u7684 Java \u6e90\u6587\u4ef6","text":"<p><pre><code>package packageName;    // \u6307\u5b9a\u6587\u4ef6\u4e2d\u7c7b\u6240\u5728\u7684\u5305\uff0c0\u4e2a\u62161\u4e2a\nimport packageName.[className|*];   // \u6307\u5b9a\u5f15\u5165\u7684\u7c7b\uff0c0\u4e2a\u6216\u591a\u4e2a\npublic classDefinition  // \u5c5e\u6027\u4e3a public \u7684\u7c7b\u5b9a\u4e49\uff0c0\u4e2a\u62161\u4e2a\ninterfaceDefinition and classDefinition // \u63a5\u53e3\u548c\u7c7b\u7684\u5b9a\u4e49\uff0c0\u4e2a\u6216\u591a\u4e2a\n</code></pre> \u5176\u4e2d\uff1a</p> <ul> <li>\u6e90\u6587\u4ef6\u7684\u540d\u5b57\u5fc5\u987b\u4e0e\u5c5e\u6027\u4e3a <code>public</code> \u7684\u7c7b\u540d\u5b8c\u5168\u76f8\u540c</li> <li>\u5728\u4e00\u4e2a .java \u6587\u4ef6\u4e2d\uff0c<code>package</code> \u8bed\u53e5\u548c <code>public</code> \u7c7b\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a</li> </ul>"},{"location":"languages/java/basic/exception/","title":"\u5f02\u5e38\u673a\u5236","text":"<p>\u5f02\u5e38\u7684\u672c\u8d28\u662f\u7531\u7a0b\u5e8f\u5458\u901a\u8fc7\u7f16\u7a0b\u6765\u63d0\u9ad8\u7a0b\u5e8f\u7684\u9c81\u68d2\u6027\uff08\u5bb9\u9519\u6027\uff09\u3002</p>"},{"location":"languages/java/basic/exception/#_2","title":"\u5f02\u5e38\u5904\u7406","text":"<p>\u57fa\u672c\u5199\u6cd5 <pre><code>try {\n    // \u7a0b\u5e8f\u903b\u8f91\n} catch (Exception1 ex) {\n    // \u5f02\u5e38\u5904\u7406\n} catch (Exception2 ex) {\n    // \u5f02\u5e38\u5904\u7406\n} finally {\n    // \u5f02\u5e38\u5904\u7406\n}\n</code></pre> \u5176\u4e2d\uff0c<code>catch</code> \u8bed\u53e5\u53ef\u4ee5\u6709\u96f6\u4e2a\u81f3\u591a\u4e2a\uff0c\u53ef\u4ee5\u6ca1\u6709 <code>finally</code> \u8bed\u53e5</p> <p>Java \u4e2d\u7684\u5f02\u5e38\u5904\u7406\u6d41\u7a0b\u662f\uff1a</p> <ul> <li>\u629b\u51fa\uff08throw\uff09 \u5f02\u5e38</li> <li>\u8fd0\u884c\u65f6\u7cfb\u7edf\u5728\u8c03\u7528\u6808\u4e2d \u67e5\u627e\u5f02\u5e38<ul> <li>\u4ece\u5f02\u5e38\u751f\u6210\u7684\u65b9\u6cd5\u5f00\u59cb \u56de\u6eaf\uff0c\u76f4\u5230\u627e\u5230\uff1b</li> </ul> </li> <li>\u6355\u83b7\uff08catch\uff09 \u5f02\u5e38\u7684\u4ee3\u7801</li> </ul> <p>Java \u4e2d <code>Throwable</code> \u662f\u6240\u6709\u5f02\u5e38\u7684\u7236\u7c7b\uff0c\u5b83\u4e0b\u9762\u5206\u6210\u4e24\u7c7b\uff1a</p> <ul> <li><code>Error</code>\uff1aJVM \u9519\u8bef</li> <li><code>Exception</code>\uff1a\u5f02\u5e38</li> </ul> <p>\u4e00\u822c\u6211\u4eec\u6240\u8bf4\u7684\u5f02\u5e38\u662f\u6307 <code>Exception</code> \u53ca\u5176\u5b50\u7c7b</p>"},{"location":"languages/java/basic/exception/#exception","title":"Exception \u7c7b","text":"<p>\u6784\u9020\u65b9\u6cd5\uff1a <pre><code>public Exception();\npublic Exception(String message);\nException(String message, Throwable cause);\n</code></pre></p> <p>\u65b9\u6cd5\uff1a <pre><code>getMessage()\ngetCause()\nprintStackTrace()\n</code></pre></p>"},{"location":"languages/java/basic/exception/#_3","title":"\u591a\u5f02\u5e38\u5904\u7406","text":"<p>\u5b50\u7c7b\u5f02\u5e38\u8981\u6392\u5728\u7236\u7c7b\u5f02\u5e38\u524d\u9762\u3002</p> <p><code>finally</code> \u8bed\u53e5\u65e0\u8bba\u662f\u5426\u6709\u5f02\u5e38\u90fd\u8981\u6267\u884c\uff0c\u5373\u4f7f\u5176\u4e2d\u6709 <code>break</code>, <code>return</code> \u7b49\u8bed\u53e5\u3002\u5728\u7f16\u8bd1\u65f6\uff0c<code>finally</code> \u90e8\u5206\u7684\u4ee3\u7801\u751f\u6210\u4e86\u591a\u904d\u3002</p>"},{"location":"languages/java/basic/exception/#_4","title":"\u53d7\u68c0\u7684\u5f02\u5e38","text":"<p>Java \u4e2d\u7684\u5f02\u5e38\u5206\u4e24\u79cd\uff1a</p> <ul> <li><code>RuntimeException</code> \u53ca\u5176\u5b50\u7c7b\uff0c\u53ef\u4ee5\u4e0d\u660e\u786e\u5904\u7406\uff08\u4e00\u822c\u4f7f\u7528 <code>if</code> \u6765\u8bed\u53e5\u5224\u65ad\uff09</li> <li>\u5426\u5219\uff0c\u79f0\u4e3a \u53d7\u68c0\u7684\u5f02\u5e38\uff08chected Exception\uff09\uff0c\u4f8b\u5982 IO \u5f02\u5e38</li> </ul> <p>\u53d7\u68c0\u7684\u5f02\u5e38\uff0c\u8981\u6c42 \u660e\u786e\u8fdb\u884c\u8bed\u6cd5\u5904\u7406</p> <ul> <li>\u8981\u4e48\u6355\u83b7\uff08catch\uff09</li> <li>\u8981\u4e48\u629b\u51fa\uff08throw\uff09\uff1a\u5728\u65b9\u6cd5\u7b7e\u540d\u7684\u540e\u9762\u7528 <code>throws xxxx</code> \u6765\u58f0\u660e<ul> <li>\u5728\u5b50\u7c7b\u4e2d\uff0c\u5982\u679c\u8981\u8986\u76d6\u7236\u7c7b\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u82e5\u7236\u7c7b\u7684\u65b9\u6cd5\u58f0\u660e\u4e86 <code>throws</code> \u5f02\u5e38\uff0c\u5219\u5b50\u7c7b\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5 <code>throws</code> \u5f02\u5e38\u3002</li> <li>\u53ef\u4ee5\u8dd1\u51fa\u5b50\u7c7b\u5f02\u5e38\uff08\u66f4\u5177\u4f53\u7684\u5f02\u5e38\uff09\uff0c\u4f46\u4e0d\u80fd\u629b\u51fa\u66f4\u4e00\u822c\u7684\u5f02\u5e38\u3002</li> </ul> </li> </ul> <p>\u4e00\u79cd\u8bed\u6cd5\u7cd6\uff08Compiler suger\uff09\uff1a<code>try ... with ... resource</code> <pre><code>try (\u7c7b\u578b \u53d8\u91cf = new \u7c7b\u578b() ) {\n    // ...\n}\n</code></pre> \u8fd9\u91cc\u7f16\u8bd1\u671f\u81ea\u52a8\u6dfb\u52a0\u4e86 <code>finally { \u53d8\u91cf.close(); }</code>\uff0c\u65e0\u8bba\u662f\u5426\u51fa\u73b0\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\u3002</p> <p>\u7c7b\u4f3c\u4e8e Python \u91cc\u9762\u7684 <code>with</code> \u8bed\u53e5\u3002</p>"},{"location":"languages/java/basic/exception/#_5","title":"\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b","text":"<p>\u7ee7\u627f\u81ea <code>Exception</code> \u53ca\u5176\u5b50\u7c7b\uff0c\u53ef\u4ee5\u91cd\u8f7d\u7236\u7c7b\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u65b9\u6cd5\u3002</p>"},{"location":"languages/java/basic/exception/#_6","title":"\u91cd\u629b\u5f02\u5e38\u53ca\u5f02\u5e38\u94fe\u63a5\uff1a","text":"<p>\u5bf9\u4e8e\u5f02\u5e38\uff0c\u4f18\u52bf\u5149\u6355\u83b7\u662f\u4e0d\u591f\u7684\uff0c\u8fd8\u9700\u8981\u5c06\u5176\u8fdb\u4e00\u6b65\u4f20\u9012\u7ed9\u8c03\u7528\u8005\uff0c\u4ee5\u4fbf\u8ba9\u8c03\u7528\u8005\u4e5f\u80fd\u611f\u53d7\u5230\u8fd9\u4e2a\u5f02\u5e38\u3002\u8fd9\u662f\u53ef\u4ee5\u5728 <code>catch</code> \u8bed\u53e5\u5757\u6216 <code>finally</code> \u8bed\u53e5\u5757\u4e2d\u91c7\u53d6\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>\u5f53\u524d\u6355\u83b7\u7684\u5f02\u5e38\u518d\u6b21\u629b\u51fa\uff1a <pre><code>throw e;\n</code></pre></li> <li>\u91cd\u65b0\u751f\u6210\u5e76\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff1a <pre><code>throw new Exception(\"Some message\");\n</code></pre></li> <li>\u91cd\u65b0\u751f\u6210\u5e76\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u8be5\u5f02\u5e38\u4e2d\u5305\u542b\u4e86\u5f53\u524d\u5f02\u5e38\u7684\u4fe1\u606f\uff0c\u5982\uff1a <pre><code>throw new ExceptioN(\"Some message\", e);\n</code></pre> \u53ef\u4ee5\u7528 <code>e.getCause()</code> \u6765\u5f97\u5230\u5185\u90e8\u5f02\u5e38\u3002</li> </ul>"},{"location":"languages/java/basic/exception/#assertion","title":"\u65ad\u8a00\uff08assertion\uff09","text":"<p><code>assert</code> \u7684\u683c\u5f0f\u662f\uff1a</p> <ul> <li><code>assert</code> \u8868\u8fbe\u5f0f;</li> <li><code>assert</code> \u8868\u8fbe\u5f0f: \u4fe1\u606f;</li> </ul> <p>\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u4e3a <code>true</code>\uff0c\u5219\u7a0b\u5e8f\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u5e76\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002</p>"},{"location":"languages/java/basic/exception/#assert","title":"assert \u7684\u7f16\u8bd1\u548c\u8fd0\u884c","text":"<p>\u7f16\u8bd1\uff1a\u53ea\u6709\u5728 JDK1.4 \u53ca\u4ee5\u4e0a\u7248\u672c\u4e2d\u624d\u80fd\u4f7f\u7528\u65ad\u8a00\u3002</p> <p>\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u65e9\u671f\u7684 JDK \u7248\u672c\uff081.4\uff09\u4e2d\u7f16\u8bd1\u65f6\uff0c\u8981\u901a\u8fc7 <code>-source</code> \u9009\u9879\u6765\u6307\u660e\u7248\u672c\uff0c\u5982\uff1a <pre><code>javac -deprecation -source 1.4 -classpath . XXX.java\n</code></pre></p> <p>\u8fd0\u884c\uff1a\u5728\u8fd0\u884c\u65f6\uff0c\u8981\u4f7f <code>assert</code> \u8bed\u53e5\u8d77\u4f5c\u7528\uff0c\u9700\u8981\u52a0\u4e0a <code>-ea / -enableassertions</code> \u9009\u9879\uff0c\u5982\uff1a <pre><code>java -ea -classpath . XXX\n</code></pre></p>"},{"location":"languages/java/basic/exception/#junit","title":"\u6d4b\u8bd5\u53ca JUnit","text":"<p>\u7a0b\u5e8f\u7684\u4fee\u6539\u662f\u7ecf\u5e38\u8981\u8fdb\u884c\u7684\u8fc7\u7a0b\uff0c\u800c\u6d4b\u8bd5\u4fdd\u8bc1\u4e86\u7a0b\u5e8f\u5728\u6bcf\u6b21\u4fee\u6539\u4e4b\u540e\u7684\u6b63\u786e\u6027\u3002</p> <p>\u5728\u7f16\u5199\u7a0b\u5e8f\u4ee3\u7801\u7684\u540c\u65f6\uff0c\u8fd8\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\u6765\u5224\u65ad\u8fd9\u4e9b\u7a0b\u5e8f\u662f\u6b63\u786e\u7684\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1</p> <p>\u4ece\u800c\u4fdd\u8bc1\u4e86\u4ee3\u7801\u8d28\u91cf\uff0c\u51cf\u5c11\u4e86\u540e\u671f\u7684\u67e5\u9519\u548c\u8c03\u8bd5\u65f6\u95f4\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5b83\u5927\u5e45\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u5f00\u53d1\u6548\u7387\u3002</p> <p>\u901a\u5e38\u4f7f\u7528 JUnit \u6846\u67b6\u6765\u8fdb\u884c Java \u7a0b\u5e8f\u7684\u6d4b\u8bd5\uff0c\u73b0\u5728\u5927\u591a\u6570 IDE \u90fd\u96c6\u6210\u4e86\u5bf9 JUnit \u7684\u652f\u6301\u3002</p> <ul> <li>\u7528 <code>@Test</code> \u6765\u6807\u6ce8\u6d4b\u8bd5\u51fd\u6570</li> <li>\u5728\u6d4b\u8bd5\u4e2d\u5e38\u7528\u7684\u8bed\u53e5\u5982\u4e0b\uff1a<ul> <li><code>fail(\u4fe1\u606f);</code>\uff1a\u7a0b\u5e8f\u51fa\u9519</li> <li><code>assertEqual(\u53c2\u65701, \u53c2\u65702);</code>\uff1a\u7a0b\u5e8f\u8981\u4fdd\u8bc1\u4e24\u53c2\u6570\u76f8\u7b49</li> <li><code>assertNull(\u53c2\u6570);</code>\uff1a\u8868\u793a\u53c2\u6570\u8981\u4e3a <code>null</code> <pre><code>@Test\npublic void testSum() {\n    // ...\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"languages/java/basic/exception/#_7","title":"\u7a0b\u5e8f\u7684\u8c03\u8bd5","text":"<p>\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u53ef\u4ee5\u5206\u6210\u4e09\u5927\u7c7b\uff1a</p> <ul> <li>\u8bed\u6cd5\u9519\u8bef\uff08Syntax error\uff09\uff1a\u4eba\u5728\u7f16\u8f91\u7684\u65f6\u5019\u53d1\u73b0\u3001\u7f16\u8bd1\u5668\u53d1\u73b0</li> <li>\u8fd0\u884c\u9519\u8bef\uff08Runtime error\uff09\uff1a\u5f02\u5e38\u5904\u7406\u673a\u5236</li> <li>\u903b\u8f91\u9519\u8bef\uff08Logic error\uff09\uff1a\u8c03\u8bd5\uff08debug\uff09\u3001\u5355\u5143\u6d4b\u8bd5\uff08UT\uff09</li> </ul> <p>\u8c03\u8bd5\uff08debug\uff09\u7684\u5e38\u7528\u624b\u6bb5\uff1a\u65ad\u70b9\uff08breakpoint\uff09\u3001\u8ddf\u8e2a\uff08trace\uff09\u3001\u76d1\u89c6\uff08watch\uff09</p> <p>\u5f53\u7136\uff0c\u8c03\u7528\u5806\u6808\uff08call stack\uff09\u4e5f\u80fd\u7ed9\u6211\u4eec\u63d0\u4f9b\u5f88\u591a\u4fe1\u606f\u3002</p>"},{"location":"languages/java/basic/file_and_stream/","title":"\u6d41\u3001\u6587\u4ef6\u53ca\u57fa\u4e8e\u6587\u672c\u7684\u5e94\u7528","text":""},{"location":"languages/java/basic/file_and_stream/#_2","title":"\u8f93\u5165\u8f93\u51fa\u6d41","text":"<p>\u628a\u4e0d\u540c\u7c7b\u578b\u7684\u8f93\u5165\u8f93\u51fa\u90fd\u62bd\u8c61\u4e3a \u6d41\uff08stream\uff09\uff0c\u6309\u65b9\u5411\u8fdb\u4e00\u6b65\u5206\u4e3a \u8f93\u5165\u6d41 \u548c \u8f93\u51fa\u6d41\u3002</p> <p>\u6700\u65e9\u671f Java \u5c06\u8f93\u5165\u8f93\u51fa\u529f\u80fd\u5c01\u88c5\u5728 <code>java.io</code> \u5305\u4e2d\uff0cJDK1.4 \u5f15\u5165\u4e86 <code>java.nio</code> \u5305\uff0c\u8fd9\u91cc\u7684 n \u662f new \u7684\u610f\u601d\uff0cJDK1.7 \u6539\u7248\u4e3a <code>java.nio2</code>\u3002</p> <p> \u6d41\u7684\u6982\u5ff5</p>"},{"location":"languages/java/basic/file_and_stream/#_3","title":"\u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41","text":"<p>\u6d41\u6309\u7167\u5176\u5185\u5bb9\u5206\u4e3a \u5b57\u8282\u6d41 \u548c \u5b57\u7b26\u6d41\uff0c\u5177\u4f53\u6309\u7167\u4e00\u4e2a\u4e00\u4e2a \u5b57\u8282 \u8bfb\u53d6\u8fd8\u662f\u6309\u7167\u4e00\u4e2a\u4e00\u4e2a \u5b57\u7b26 \u8bfb\u53d6\u3002</p> \u5b57\u8282\u6d41 \u5b57\u7b26\u6d41 \u8f93\u5165 InputStream Reader \u8f93\u51fa OutputStream Writer <p>\u5b57\u8282</p>"},{"location":"languages/java/basic/file_and_stream/#_4","title":"\u6587\u4ef6\u53ca\u76ee\u5f55","text":""},{"location":"languages/java/basic/file_and_stream/#_5","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"languages/java/basic/good_practice/","title":"\u5199\u597d Java \u7a0b\u5e8f","text":""},{"location":"languages/java/basic/good_practice/#_1","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"languages/java/basic/good_practice/#_2","title":"\u91cd\u6784","text":""},{"location":"languages/java/basic/good_practice/#_3","title":"\u8bbe\u8ba1\u6a21\u5f0f","text":""},{"location":"languages/java/basic/good_practice/#_4","title":"\u53cd\u5c04","text":""},{"location":"languages/java/basic/grammar/","title":"\u57fa\u672c\u8bed\u6cd5 \u2014\u2014 \u6570\u636e\u8fd0\u7b97\u3001\u6d41\u63a7\u5236\u548c\u6570\u7ec4","text":""},{"location":"languages/java/basic/grammar/#_2","title":"\u6570\u636e\u7c7b\u578b\u3001\u53d8\u91cf\u3001\u5e38\u91cf","text":"<p>\u6570\u636e\u7c7b\u578b\u51b3\u5b9a\u4e86 Java \u4e2d\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u8fd0\u7b97\u65b9\u5f0f\u3002</p> <p>Java \u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\uff1a\u57fa\u672c\u7c7b\u578b\uff08primitive types\uff09 \u548c \u5f15\u7528\u7c7b\u578b\uff08reference types\uff09\uff1a</p> <ul> <li>\u6570\u636e\u7c7b\u578b<ul> <li>\u57fa\u672c\u7c7b\u578b<ul> <li>\u6570\u503c\u578b<ul> <li>\u6574\u6570\u7c7b\u578b\uff08byte, short, int, long\uff09</li> <li>\u6d6e\u70b9\u7c7b\u578b\uff08float, double\uff09</li> </ul> </li> <li>\u5b57\u7b26\u578b\uff08char\uff09</li> <li>\u5e03\u5c14\u578b\uff08boolean\uff09</li> </ul> </li> <li>\u5f15\u7528\u7c7b\u578b<ul> <li>\u7c7b\uff08class\uff09</li> <li>\u63a5\u53e3\uff08interface\uff09</li> <li>\u6570\u7ec4</li> </ul> </li> </ul> </li> </ul> <p>\u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u5185\u5b58\u4f4d\u4e8e \u6808\u7a7a\u95f4\uff0c\u8d4b\u503c\u8bed\u53e5\u590d\u5236 \u503c <pre><code>double d = 3;\nPerson p = new Person();\n</code></pre></p> <p>\u5e94\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\u5230 \u5806\u7a7a\u95f4\uff0c\u8d4b\u503c\u8bed\u53e5\u590d\u5236\u7684\u662f \u5f15\u7528 <pre><code>double d1 = d;\nPerson p1 = p;\n</code></pre></p> <p></p> <p>\u5173\u4e8e Java \u4e2d\u7684\u56db\u7c7b\u516b\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u8981\u6ce8\u610f\uff1a</p> <ul> <li>\u00b7boolean\u00b7 \u7c7b\u578b\u4e0d\u80fd\u4e0e\u6574\u5f62\u6df7\u7528\uff0c\u53d6\u503c\u53ea\u80fd\u4e3a <code>true</code> \u6216 <code>false</code>\uff0c\u8fd9\u4e00\u70b9\u4e0e C++ \u4e0d\u540c\u3002</li> <li>\u00b7char\u00b7 \u7c7b\u578b\u7528 Unicode \u7f16\u7801\uff0c\u5360 2 \u5b57\u8282\u3002</li> <li>\u56db\u79cd\u6574\u578b\u6709\u56fa\u5b9a\u7684\u8868\u793a\u8303\u56f4\u548c\u5b57\u6bb5\u957f\u5ea6\uff0c\u4e0d\u53d7\u64cd\u4f5c\u7cfb\u7edf\u5f71\u54cd\uff0c\u4ee5\u6b64\u4fdd\u8bc1\u53ef\u79fb\u690d\u6027\u3002</li> <li>Java \u6574\u578b\u4e2d\u6ca1\u6709\u201d\u65e0\u7b26\u53f7\u6570\u201c</li> </ul> <p>\u6807\u8bc6\u7b26\uff08identifier\uff09\uff1a\u4efb\u4f55\u4e00\u4e2a\u53d8\u91cf\u3001\u5e38\u91cf\u3001\u65b9\u6cd5\u3001\u5bf9\u8c61\u548c\u7c7b\u90fd\u8981\u6709\u540d\u5b57\u3002</p> <p>\u6807\u8bc6\u7b26\u53ef\u4ee5\u7531\u6570\u5b57\u3001\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf\u3001$\u7b26\u53f7\u7ec4\u6210\uff0c\u4f46\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002</p> <p>\u4e00\u822c\u6309\u7167 Java \u7684\u547d\u540d\u60ef\u4f8b\uff0c\u7c7b\u540d\u9996\u5b57\u6bcd\u5927\u5199\uff08Pascal\uff09\uff0c\u5176\u4f59\u7684\uff08\u5305\u3001\u65b9\u6cd5\u3001\u53d8\u91cf\u540d\uff09\u9996\u5b57\u6bcd\u5c0f\u5199\uff08camel\uff09\u3002\u4e00\u822c\u5f88\u5c11\u4f7f\u7528\u4e0b\u5212\u7ebf\uff0c\u5e38\u91cf\u5728\u4f7f\u7528\u5904\u5b9a\u4e49\uff0c\u800c\u4e0d\u662f\u90fd\u5199\u5728\u5f00\u7bc7\u3002</p>"},{"location":"languages/java/basic/grammar/#_3","title":"\u8fd0\u7b97\u7b26\u4e0e\u8868\u8fbe\u5f0f","text":""},{"location":"languages/java/basic/grammar/#_4","title":"\u8fd0\u7b97\u7b26","text":"<ul> <li>\u7b97\u6570\u8fd0\u7b97\u7b26\uff1a<code>+</code>, <code>=</code>, <code>*</code>, <code>/</code>, <code>%</code>, <code>++</code>, <code>--</code></li> <li>\u5173\u7cfb\u8fd0\u7b97\u7b26\uff1a<code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code>, <code>!=</code></li> <li>\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a<code>!</code>, <code>&amp;</code>, <code>|</code>, <code>^</code>, <code>$$</code>\uff08\u77ed\u8def\u4e0e\uff09, <code>||</code>\uff08\u77ed\u8def\u6216\uff09</li> <li>\u4f4d\u8fd0\u7b97\u7b26\uff1a<code>&amp;</code>, <code>|</code>, <code>^</code>, <code>~</code>, <code>&lt;&lt;</code>\uff08\u5de6\u79fb\uff0c\u4f4e\u4f4d\u8865\u96f6\uff09, <code>&gt;&gt;</code>\uff08\u53f3\u79fb\uff0c\u9ad8\u4f4d\u8865\u539f\u6765\u7684\u7b26\u53f7\u4f4d\uff09, <code>&gt;&gt;&gt;</code>\uff08\u65e0\u7b26\u53f7\u53f3\u79fb\uff0c\u5373\u9ad8\u4f4d\u8865\u96f6\uff09</li> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a<code>=</code>\uff1b\u6269\u5c55\u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a<code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code></li> <li>\u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26\uff1a<code>+</code></li> </ul> <p>\u79fb\u4f4d\u8fd0\u7b97\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u9002\u7528\u4e8e \u6574\u578b \u548c \u5b57\u7b26\u578b</li> <li>\u5bf9\u957f\u5ea6\u5c11\u4e8e int \u578b\u7684\u64cd\u4f5c\u6570\u5148\u81ea\u52a8\u8f6c\u5316\u4e3a int \u578b\u518d\u79fb\u4f4d\uff08\u6574\u5f62\u63d0\u5347\uff0c\u5bf9\u6240\u6709\u7684\u8fd0\u7b97\u90fd\u662f\u8fd9\u6837\uff09</li> <li>\u5bf9\u4e8e int \u578b\u6574\u6570\u79fb\u4f4d\uff0c\u79fb\u52a8\u4f4d\u6570\u5148\u5bf9 32 \u53d6\u6a21</li> <li>\u5bf9\u4e8e long \u578b\u6574\u6570\u79fb\u4f4d\uff0c\u79fb\u52a8\u4e3a\u6570\u5148\u5bf9 64 \u53d6\u6a21</li> </ul> <p>\u8d4b\u503c\u8fd0\u7b97\u7b26 <code>=</code> \u4e24\u4fa7\u64cd\u4f5c\u6570\u7c7b\u578b\u4e0d\u4e00\u81f4\u65f6\uff0c\u4f7f\u7528 \u9ed8\u8ba4\u7c7b\u578b\u8f6c\u6362 \u6216 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff08casting\uff09 \u539f\u5219\u8fdb\u884c\u5904\u7406\u3002\u540e\u8005\u7528\u4e8e\u7f29\u5c0f\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u5982\uff1a <pre><code>long a = 1000;\nint b = (int)a;\n</code></pre></p> <p>\u7279\u4f8b\uff1a\u53ef\u4ee5\u5c06\u6574\u5f62\u5e38\u91cf\u76f4\u63a5\u8d4b\u503c\u7ed9 <code>byte</code>, <code>short</code>, <code>char</code> \u7b49\u53d8\u91cf\u7c7b\u578b\uff0c\u800c\u4e0d\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u53ea\u8981\u4e0d\u8d85\u8fc7\u5176\u8868\u6570\u8303\u56f4\uff0c\u5982\u00b7\uff1a <pre><code>byte b = 2; // valid\nbyte b = 4096; // invalid\n</code></pre></p>"},{"location":"languages/java/basic/grammar/#_5","title":"\u8868\u8fbe\u5f0f","text":"<p>\u8868\u8fbe\u5f0f \u662f\u7b26\u5408\u4e00\u5b9a\u8bed\u6cd5\u89c4\u5219\u7684\u8fd0\u7b97\u7b26\u548c\u64cd\u4f5c\u6570\u7684\u5e8f\u5217\u3002</p> <p>\u8868\u8fbe\u5f0f\u4e2d\u64cd\u4f5c\u6570\u8fd0\u7b97\u5f97\u5230\u7684\u7ed3\u679c\u79f0\u4e3a\u8868\u8fbe\u5f0f\u7684 \u503c\uff0c\u503c\u7684\u7c7b\u578b\u79f0\u4e3a\u8868\u8fbe\u5f0f\u7684 \u7c7b\u578b\u3002</p> <p>\u5f53\u8868\u8fbe\u5f0f\u4e2d\u6709\u4e0d\u540c\u7c7b\u578b\u64cd\u4f5c\u6570\u65f6\uff0c\u540c\u610f\u8f6c\u5316\u6210\u66f4\u9ad8\u7684\u7c7b\u578b\uff1a<code>int</code> &lt; <code>long</code> &lt; <code>float</code> &lt; <code>double</code>\u3002</p> <p>\u6574\u5f62\u63d0\u5347\uff1a\u6240\u6709 <code>byte</code>, <code>char</code>, <code>short</code> \u53c2\u4e0e\u7b97\u672f\u8fd0\u7b97\u65f6\u90fd\u8f6c\u5316\u4e3a <code>int</code>\u3002</p> <p>\u5982\u679c\u4f60\u4e0d\u662f\u5206\u786e\u5b9a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u53ef\u4ee5\u591a\u4f7f\u7528<code>()</code>\u63d0\u9ad8\u7a0b\u5e8f\u53ef\u8bfb\u6027\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u53ef\u4ee5\u4ece javap -c \u7c7b\u540d \u53cd\u6c47\u7f16\u5f97\u5230\u7684 JVM \u6c47\u7f16\u6307\u4ee4\u4e2d\u6316\u5c40\u6709\u7528\u4fe1\u606f\u3002</p>"},{"location":"languages/java/basic/grammar/#_6","title":"\u6d41\u7a0b\u63a7\u5236","text":"<p>\u4e0e C++ \u4e0d\u540c\uff0cJava \u4e2d\u6ca1\u6709 \u201d\u8868\u8fbe\u5f0f\u8bed\u53e5\u201c\uff0c\u5373\u4e0b\u8ff0\u5199\u6cd5\u4e0d\u5408\u6cd5\uff1a <pre><code>x + y;\n</code></pre> \u8fd9\u79cd\u8bbe\u8ba1\u907f\u514d\u4e86\u7a0b\u5e8f\u5458\u5199\u65e0\u610f\u4e49\u7684\u8868\u8fbe\u5f0f\u3002</p> <p>Java \u4e2d\u7684\u6ce8\u91ca\u9664\u4e86\u4e0e C++ \u76f8\u540c\u7684 <code>//</code> \u548c <code>/*  */</code> \u7684\u5199\u6cd5\u4e4b\u5916\u3002\u8fd8\u6709\u5f62\u5982 <code>/**   */</code> \u7684 doc \u6ce8\u91ca\uff0c\u7528\u4e8e JDK \u7684 <code>javadoc</code> \u5de5\u5177\u3002\u8fd9\u79cd\u8bbe\u8ba1\u7684\u672c\u8d28\u662f\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684 \u6613\u8bfb\u6027\u3002</p> <p>Java \u4e2d\u7684 <code>if else</code> \u548c <code>switch</code> \u7684\u8bed\u6cd5\u4e0e C++ \u76f8\u540c\u3002</p> <p>Java \u4e2d\u7684 <code>for</code>, <code>while</code>, <code>do while</code> \u7684\u8bed\u6cd5\u4e0e C++ \u76f8\u540c\u3002</p>"},{"location":"languages/java/basic/grammar/#goto","title":"\u5173\u4e8e <code>goto</code> \u8bed\u53e5\uff1a","text":"<p>\u5728\u5404\u79cd\u8bed\u8a00\u4e2d\uff0c\u662f\u5426\u4fdd\u7559 <code>goto</code> \u8bed\u53e5\u90fd\u662f\u4e00\u4e2a\u5177\u6709\u4e89\u8bae\u7684\u8bdd\u9898\uff0c\u4e3b\u8981\u95ee\u9898\u5728\u4e8e <code>goto</code> \u8bed\u53e5\u7684\u968f\u673a\u8df3\u8f6c\u4e25\u91cd\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0cJava \u7684\u89e3\u51b3\u65b9\u6848\u662f\u5f15\u5165\u76f8\u6bd4\u4e8e C++ \u589e\u5f3a\u7248\u7684 <code>break</code> \u548c <code>continue</code> \u5173\u952e\u5b57\u3002\u5728\u5faa\u73af\u524d\u9762\u53ef\u4ee5\u7528\u6807\u53f7\u6765\u6807\u660e\u662f\u54ea\u4e00\u91cd\u5faa\u73af\uff0c\u4f8b\u5982\uff1a <pre><code>label1: {...\nlabel2:     {...\nlabel3:         {...\n                    break label2;\n        }\n    }\n}\n</code></pre> \u540c\u6837\u5730\uff0c<code>continue</code> \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6807\u53f7\u6765\u5236\u5b9a\u8c03\u5230\u5916\u9762\u7684\u67d0\u4e00\u5c42\u5faa\u73af\u3002</p>"},{"location":"languages/java/basic/grammar/#_7","title":"\u5173\u4e8e\u6570\u7ec4","text":"<p>\u6570\u7ec4\u662f\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u7ec4\u5408\u3002</p> <p>\u4e00\u7ef4\u6570\u7ec4\u7684\u58f0\u660e\u65b9\u5f0f\uff1a <pre><code>int[] a;\ndouble[] b;\nMyClass[] C;\n</code></pre> \u6ce8\uff1a\u6570\u7ec4\u65b9\u62ec\u53f7\u53ef\u4ee5\u5199\u5728\u53d8\u91cf\u524d\u9762\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728\u53d8\u91cf\u540e\u9762\u3002</p> <p>\u6570\u7ec4\u5b9a\u4e49 \u4e0e \u4e3a\u6570\u7ec4\u5206\u914d\u7a7a\u95f4 \u5206\u5f00\u8fdb\u884c\uff0c\u5982\uff1a <pre><code>int []a = new int[3];\na[0] = 3;\na[1] = 6;\na[2] = 9;\n\nMyClass []mcs = new MyClass[3];\nmcs[0] = new MyClass(/* params */);\nmcs[1] = new MyClass(/* params */);\nmcs[2] = new MyClass(/* params */);\n</code></pre> Java \u4e2d\u58f0\u660e\u6570\u7ec4\u65f6\u4e0d\u80fd\u6307\u5b9a\u5176\u957f\u5ea6\uff0c\u4f8b\u5982 <code>int a[5];</code> \u8fd9\u79cd\u5199\u6cd5\u5c31\u662f\u975e\u6cd5\u7684\u3002\u8fd9\u4e2a \u6839\u672c\u539f\u56e0 \u662f\u6570\u7ec4\u65f6\u5f15\u7528\u7c7b\u578b\uff0c\u6211\u4eec\u5728\u58f0\u660e\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u628a\u6570\u636e\u5b58\u5230\u6808\u7a7a\u95f4\u5185\u3002</p> <p>\u6570\u7ec4\u4e5f\u53ef\u4ee5\u4f7f\u7528 \u9759\u6001\u521d\u59cb\u5316\uff0c\u5b9a\u4e49\u6570\u7ec4\u7684\u540c\u65f6\u5c31\u4e3a\u6570\u7ec4\u5143\u7d20\u5206\u914d\u7a7a\u95f4\u5e76\u8d4b\u503c\u3002\u5982\uff1a <pre><code>int[] a = {1, 2, 3};\nint[] b = new int[] {1, 2, 3};\n\nMyClass[] mcs = {\n    new MyClass(/* params */),\n    new MyClass(/* params */),\n    new MyClass(/* params */),\n};\n</code></pre> \u521d\u59cb\u5316\u5217\u8868\u4e2d\u6700\u540e\u53ef\u4ee5\u591a\u4e00\u4e2a <code>,</code>\u3002</p> <p>\u6709\u6570\u7ec4\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u6545\u6570\u7ec4\u4e00\u7ecf\u5206\u914d\u7a7a\u95f4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5c31\u88ab \u9690\u5f0f\u521d\u59cb\u5316\u3002\u6570\u503c\u7c7b\u578b\u662f <code>0</code>\uff0c\u5f15\u7528\u7c7b\u578b\u662f <code>null</code>\u3002\u8fd9\u6837\u8bbe\u8ba1\u7684\u521d\u8877\u662f\u907f\u514d\u5206\u914d\u7a7a\u95f4\u540e\u5185\u5bb9\u4e0d\u786e\u5b9a\u5e26\u6765\u7684\u5b89\u5168\u6027\u9690\u60a3\u3002</p> <p>Java \u7684\u6570\u7ec4\u6709\u4e00\u4e2a <code>length</code> \u5c5e\u6027\u7528\u4e8e\u8bb0\u5f55\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p> <p>Java \u4e2d\u4e5f\u6709\u589e\u5f3a <code>for</code> \u5faa\u73af\uff1a <pre><code>int[] ages = new int[10];\nfor (age : ages) {\n    System.out.pringln(age);\n}\n</code></pre> \u6ce8\u610f\u8fd9\u79cd\u904d\u5386\u65b9\u5f0f\u662f \u53ea\u8bfb \u7684\u3002</p> <p><code>Array.copy</code> \u65b9\u6cd5\u63d0\u4f9b\u4e86\u6570\u7ec4\u5143\u7d20\u7684\u590d\u5236\u529f\u80fd\u3002</p>"},{"location":"languages/java/basic/grammar/#_8","title":"\u591a\u7ef4\u6570\u7ec4","text":"<p>\u5728 Java \u4e2d\uff0c\u4e8c\u7ef4\u6570\u7ec4\u662f \u201c\u6570\u7ec4\u7684\u6570\u7ec4\u201d\uff0c\u6545\u6570\u7ec4\u6bcf\u884c\u7684\u957f\u5ea6\u53ef\u4ee5\u4e0d\u540c\uff0c\u8fd9\u4e00\u70b9\u4e0e C++ \u4e0d\u540c\uff0c\u4e3e\u4f8b\u5982\u4e0b\uff1a <pre><code>int[][] a = {{1, 2}, {3, 4, 0, 9}, {5, 6, 7}};\n\nint[][] b = new int[3][];\nb[0] = new int[2];\nb[1] = new int[4];\nb[2] = nwe int[3];\n</code></pre></p>"},{"location":"languages/java/basic/intro_to_java_and_oop/","title":"Java \u53ca\u9762\u5411\u5bf9\u8c61\u7b80\u4ecb","text":""},{"location":"languages/java/basic/intro_to_java_and_oop/#java_1","title":"Java\u7684\u5386\u53f2\u4e0e\u53d1\u5c55","text":"<p>1990 \u5e74 SUN \u516c\u53f8\u5f00\u59cb\u7528 C++ \u5f00\u53d1\u5bb6\u7528\u7535\u5668\u8f6f\u4ef6\uff0c1994 \u5e74\u57fa\u4e8e C++ \u5f00\u53d1\u51fa\u4e86 Oka \u8bed\u8a00\uff0c1995 \u5e74 \u6b63\u5f0f\u5c06 Oka \u547d\u540d\u4e3a Java\uff0c\u5b98\u7f51 java.sun.com\uff0c\u540e SUN \u88ab Oracle \u6536\u8d2d\u3002</p> <p>Java \u5206\u4e3a\u4e09\u5927\u5e73\u53f0\uff1a</p> <ul> <li>Java SE \u6807\u51c6\u7248\uff1a\u7528\u4e8e\u684c\u9762\u5e94\u7528</li> <li>Java EE \u4f01\u4e1a\u7248\uff1a\u7528\u4e8e web \u5e94\u7528</li> <li>Java ME \u5fae\u578b\u7248\uff1a\u7528\u4e8e\u79fb\u52a8\u7aef\u5e94\u7528</li> </ul> <p>JDK \u662f Java \u5f00\u53d1\u5de5\u5177\u5305\uff0c\u5176\u53d1\u5c55\u5386\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>1995 - JDK 1.0\uff1a\u521d\u521b</li> <li>1998 - JDK 1.2\uff1aJava2</li> <li>2000 - JDK 1.3\uff1a\u6539\u8fdb</li> <li>2002 - JDK 1.4\uff1a\u7a33\u5b9a</li> <li>2004 - JDK 1.5\uff1a\u8bed\u6cd5\u589e\u52a0\uff0c\u4ece\u6b64\u53eb Java 5,6,7...</li> <li>2006 - JDK 1.6\uff1a\u5e7f\u6cdb\u4f7f\u7528</li> <li>2010 - Oracle \u5e76\u8d2d SUN</li> <li>2011 - JDK 1.7\uff1a\u6539\u8fdb</li> <li>2014 - JDK 1.8\uff1a\u524d\u8fdb\u5927\u6b65</li> </ul> <p>Java \u7684\u53d1\u5c55\u662f\u7531 JCP\uff08Java Community Process\uff09 \u548c JSR\uff08Java Specification Requests\uff09\u4e3b\u8981\u63a8\u52a8\u7684\u3002\u4f8b\u5982\uff0cLambda \u8868\u8fbe\u5f0f\u662f JSR-335 \u5f15\u5165\u7684\uff0c\u8fd9\u4e5f\u662f Java8 \u91cd\u8981\u7684\u65b0\u7279\u6027\u3002</p>"},{"location":"languages/java/basic/intro_to_java_and_oop/#java_2","title":"Java \u8bed\u8a00\u7684\u7279\u70b9","text":"<p>Java \u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u9762\u5411\u5bf9\u8c61\uff0c\u8bed\u6cd5\u4e0e C++ \u6781\u4e3a\u76f8\u4f3c\uff0c\u4f46\u6bd4 C++ \u66f4\u7b80\u5355\u3002</p> <p>Java \u7684\u7279\u70b9\u53ef\u4ee5\u89c4\u7eb3\u5165\u4e0b\uff1a</p> <ul> <li>\u8bed\u6cd5\u7b80\u5355</li> <li>\u9762\u5411\u5bf9\u8c61\uff08\u4e0e C++ \u4fdd\u7559\u4e86\u4e00\u90e8\u5206 C \u7684\u7279\u6027\u4e0d\u540c\uff0cJava \u7684\u4e00\u5207\u51bb\u707e\u5bf9\u8c61\u5185\uff0c\u662f\u66f4\u4e3a\u7eaf\u7cb9\u7684\u9762\u5411\u5bf9\u8c61\uff09</li> <li>\u5e73\u53f0\u65e0\u5173</li> <li>\u5b89\u5168\u7a33\u5b9a</li> <li>\u652f\u6301\u591a\u7ebf\u7a0b</li> </ul> <p>\u53e6\u5916\uff0cJava \u5177\u5907\u4e30\u5bcc\u7684\u7c7b\u5e93\uff0c\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u7c7b\u4ee5\u6ee1\u8db3\u7f51\u7edc\u5316\u3001\u591a\u7ebf\u7a0b\u3001\u9762\u5411\u5bf9\u8c61\u7cfb\u7edf\u7684\u9700\u8981\u3002</p> <p>\u6240\u4ee5\uff0cJava \u80fd\u591f\u80dc\u4efb \u9762\u5411\u5bf9\u8c61\u7684\u5e94\u7528\u5f00\u53d1\u3001\u5404\u7c7b\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3001\u8ba1\u7b97\u8fc7\u7a0b\u7684\u53ef\u89c6\u5316\u3001\u52a8\u6001\u753b\u9762\u548c\u4ea4\u4e92\u64cd\u4f5c\u3001Internet\u7cfb\u7edf\u7ba1\u7406\u3001\u6570\u636e\u5e93\u64cd\u4f5c \u7b49\u4efb\u52a1\u3002</p> <p>Java \u76f8\u6bd4 C++ \u7684\u780d\u6389\u4e86\u4ec0\u4e48\uff1a</p> <ul> <li>\u65e0\u76f4\u63a5\u6307\u9488\u64cd\u4f5c</li> <li>\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\uff08\u7cfb\u7edf\u81ea\u52a8\u91ca\u653e\u5185\u5b58\uff09</li> <li>\u6570\u636e\u7c7b\u578b\u957f\u5ea6\u56fa\u5b9a\uff08\u5e73\u53f0\u65e0\u5173\uff09</li> <li>\u4e0d\u7528\u5934\u6587\u4ef6</li> <li>\u4e0d\u5305\u542b\u7ed3\u6784\u548c\u8054\u5408</li> <li>\u4e0d\u652f\u6301\u5b8f</li> <li>\u4e0d\u7528\u591a\u91cd\u7ee7\u627f\uff08\u800c\u662f\u7528\u7ed3\u6784\uff0c\u4ece\u800c\u907f\u514d\u4e86\u62f7\u8d1d\u6784\u9020\u7b49 C++ \u4e2d\u7684\u590d\u6742\u64cd\u4f5c\uff09</li> <li>\u65e0\u7c7b\u5916\u5168\u5c40\u53d8\u91cf</li> <li>\u65e0 GOTO</li> </ul>"},{"location":"languages/java/basic/intro_to_java_and_oop/#java-","title":"Java \u8fd0\u884c\u673a\u5236 - \u8de8\u5e73\u53f0\u7684\u539f\u56e0","text":"<p>Java \u6709\u4e09\u4e2a\u6838\u5fc3\u673a\u5236\uff1a</p> <ul> <li>Java \u865a\u62df\u673a\uff08JVM\uff09</li> <li>\u4ee3\u7801\u5b89\u5168\u6027\u68c0\u67e5\uff08Code Security\uff09</li> <li>\u5783\u573e\u6536\u96c6\u673a\u5236\uff08Garbage Collection\uff09</li> </ul> <p> Java \u7a0b\u5e8f\u7684\u7f16\u8bd1\u548c\u8fd0\u884c</p> <p>\u5176\u4e2d JVM \u662f\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u7531\u8f6f\u4ef6\u6216\u786c\u4ef6\u6a21\u62df\u7684\u8ba1\u7b97\u673a\uff0c\u8bfb\u53d6\u5e76\u5904\u7406\u7ecf\u8fc7\u5e76\u4ee5\u8fc7\u7684\u5b57\u8282\u7801 class \u6587\u4ef6\u3002</p> <p>JVM \u89c4\u8303\u5b9a\u4e49\u4e86\uff1a\u6307\u4ee4\u96c6\u3001\u5bc4\u5b58\u5668\u96c6\u3001\u7c7b\u6587\u4ef6\u7ed3\u6784\u3001\u5806\u6808\u3001\u5783\u573e\u6536\u96c6\u5806\u3001\u5185\u5b58\u533a\u57df\u3002</p> <p>\u5177\u4f53\u8fd0\u884c\u65f6\u9700\u8981\u8fd0\u884c\u73af\u5883 JRE\uff08Java Runtime Environment\uff09</p> <p>JRE = JVM + API(Lib)</p> <p>JRE \u8fd0\u884c\u65f6\u6709\u4e09\u9879\u4e3b\u8981\u529f\u80fd\uff1a</p> <ul> <li>\u52a0\u8f7d\u4ee3\u7801\uff1a\u7531 class loader \u5b8c\u6210</li> <li>\u6821\u9a8c\u4ee3\u7801\uff1a\u7531 bytecode verifier \u5b8c\u6210 \u2014\u2014 \u8be5\u7279\u70b9\u4fdd\u8bc1 Java \u7684\u5b89\u5168\u6027</li> <li>\u6267\u884c\u4ee3\u7801\uff1a\u7531 run time interpreter \u5b8c\u6210</li> </ul> <p>\u53e6\u4e00\u65b9\u9762\uff0cJava \u6709\u81ea\u52a8\u5783\u573e\u56de\u6536\u673a\u5236\uff08\u5728 C++ \u4e2d\u7a0b\u5e8f\u5458\u9700\u8981\u5229\u7528 new/delete \u64cd\u4f5c\u7ba1\u7406\u5185\u5b58\uff09\u3002</p> <ul> <li>JVM \u4e2d\u6709\u7cfb\u7edf\u53ca\u7ebf\u7a0b\u8ddf\u8e2a\u5b58\u50a8\u7a7a\u95f4\u7684\u5206\u914d\u60c5\u51b5</li> <li>\u5728 JVM \u7a7a\u95f2\u65f6\uff0c\u68c0\u67e5\u5e76\u91ca\u653e\u90a3\u4e9b\u53ef\u88ab\u91ca\u653e\u7684\u5b58\u50a8\u7a7a\u95f4</li> <li>\u7a0b\u5e8f\u5458\u65e0\u987b\u4e5f\u65e0\u6cd5\u7cbe\u786e\u63a7\u5236\u6216\u5e72\u9884\u8be5\u56de\u6536\u8fc7\u7a0b</li> </ul> <p>\u6700\u540e JDK \u662f\u7531 JRE+\u5de5\u5177\u5305 \u6784\u6210\u7684\uff0c\u5176\u4e2d\u5de5\u5177\u5305\u4e3b\u8981\u5305\u62ec\uff1aJava Compiler, Java Debugger, JavaDoc, JPDA\u3002</p> <p>JDK \u63d0\u4f9b\u7684\u5de5\u5177\u6709\uff1a</p> <ul> <li>java \u7f16\u8bd1\u5668\uff1ajavac</li> <li>java \u6267\u884c\u5668\uff1ajava</li> <li>\u6587\u6863\u751f\u6210\u5668\uff1ajavadoc</li> <li>java \u6253\u5305\u5668\uff1ajar</li> <li>java \u8c03\u8bd5\u5668\uff1ajdb</li> </ul>"},{"location":"languages/java/basic/intro_to_java_and_oop/#_1","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u5bf9\u8c61\u7684\u542b\u4e49\uff1a</p> <ul> <li>\u73b0\u5b9e\u4e16\u754c\u4e2d\uff1a\u4e00\u4e2a\u5ba2\u89c2\u5b9e\u4f53</li> <li>\u8ba1\u7b97\u673a\u4e16\u754c\u4e2d\uff1a\u4e00\u4e2a\u53ef\u6807\u8bc6\u7684\u5b58\u50a8\u533a\u57df</li> </ul> <p>\u7c7b\uff1a\u5177\u6709\u5171\u540c\u5c5e\u6027\uff08\u53d8\u91cf\uff0cfield\uff09\u548c\u884c\u4e3a\uff08\u65b9\u6cd5\uff0cmethod\uff09\u7684\u5bf9\u8c61\u96c6\u5408</p> <p>\u7c7b\u662f\u5bf9\u8c61\u7684\u62bd\u8c61\uff08\u6a21\u677f\uff09\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002</p> <p>\u6ce8\uff1a\u7c7b\u548c\u5bf9\u8c61\u6709\u65f6\u90fd\u79f0\u4e3a\u201c\u5bf9\u8c61\u201d\uff0c\u4e3a\u4e86\u660e\u786e\u8d77\u89c1\uff0c\u540e\u8005\u79f0\u4e3a\u5bf9\u8c61\u5b9e\u4f8b\u3002</p> <p>\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u6709 \u5c01\u88c5\u6027\u3001\u7ee7\u627f\u6027\u3001\u591a\u6001\u6027 \u4e09\u5927\u7279\u5f81\u3002</p>"},{"location":"languages/java/basic/intro_to_java_and_oop/#_2","title":"\u5c01\u88c5","text":"<ul> <li>\u6a21\u5757\u5316\uff1a\u5c06\u5c5e\u6027\u548c\u884c\u4e3a\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u7a0b\u5e8f\u5b9a\u4e49\u5f88\u591a\u7c7b\u3002</li> <li>\u4fe1\u606f\u9690\u853d\uff1a\u5c06\u7c7b\u7684\u7ec6\u8282\u90e8\u5206\u9690\u85cf\u8d77\u6765\uff0c\u7528\u6237\u53ea\u901a\u8fc7\u67d0\u4e2a\u540e\u4fdd\u62a4\u7684\u63a5\u53e3\u8bbf\u95ee\u67d0\u4e2a\u7c7b\u3002</li> </ul>"},{"location":"languages/java/basic/intro_to_java_and_oop/#inheritance","title":"\u7ee7\u627f\uff08inheritance\uff09","text":"<p>\u7ee7\u627f\u7684\u672c\u8d28\u662f\u57fa\u4e00\u79cd \u7c7b\u548c\u5b50\u7c7b\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u7684\u65b9\u6cd5\u3002\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u4e86\u7f16\u7a0b\u6548\u7387\u3002</p> <p>\u7ee7\u627f\u7684\u597d\u5904\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a</p> <ul> <li>\u66f4\u597d\u5730\u8fdb\u884c \u62bd\u8c61\u4e0e\u5206\u79bb</li> <li>\u589e\u5f3a\u4ee3\u7801\u7684 \u91cd\u7528\u7387</li> <li>\u63d0\u9ad8 \u53ef\u7ef4\u62a4\u6027</li> </ul>"},{"location":"languages/java/basic/intro_to_java_and_oop/#polymorphism","title":"\u591a\u6001\uff08polymorphism\uff09","text":"<p>\u8ba9\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u5728\u63a5\u6536\u540c\u4e00\u4e2a\u6307\u4ee4\uff08\u65b9\u6cd5\uff09\u7684\u65f6\u5019\u8fdb\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002</p> <p>\u5176\u4e2d\u7ec6\u8282\u7684\u5b9e\u73b0\u5219\u7531\u63a5\u6536\u5bf9\u8c61\u81ea\u884c\u51b3\u5b9a\u3002</p>"},{"location":"languages/java/basic/intro_to_java_and_oop/#_3","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8981\u70b9","text":"<ul> <li>\u8ba4\u4e3a\u5ba2\u89c2\u4e16\u754c\u6709\u5404\u79cd\u5bf9\u8c61\u7ec4\u6210</li> <li> <p>\u7a0b\u5e8f\u7684\u5206\u6790\u548c\u8bbe\u8ba1\u90fd\u56f4\u7ed5\u7740</p> <ul> <li>\u6709\u54ea\u4e9b\u7c7b</li> <li>\u5404\u4e2a\u7c7b\u6709\u54ea\u4e9b\u5c5e\u6027\u3001\u54ea\u4e9b\u65b9\u6cd5</li> <li>\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u5982\u7ee7\u627f\u3001\u5173\u8054\uff09</li> <li>\u5bf9\u8c61\u4e4b\u95f4\u53d1\u9001\u6d88\u606f\uff08\u8c03\u7528\u65b9\u6cd5\uff09</li> </ul> </li> </ul>"},{"location":"languages/java/basic/multi_thread/","title":"\u591a\u7ebf\u7a0b","text":""},{"location":"languages/java/basic/multi_thread/#_2","title":"\u7ebf\u7a0b\u521b\u5efa","text":"<p>\u8fdb\u7a0b\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c</p> <p>\u7ebf\u7a0b\uff1a\u7a0b\u5e8f\u4e2d\u5355\u4e2a\u987a\u5e8f\u7684\u6d41\u63a7\u5236</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u542b\u6709\u591a\u4e2a\u7ebf\u7a0b\u3002\u4e00\u822c\u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u63d0\u4f9b\u67e5\u8be2\u7ebf\u7a0b\u6570\u7684 API\u3002</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b \u5171\u4eab CPU\uff08\u5e76\u53d1\u6216\u8005\u5206\u4eab\u65f6\u95f4\u7247\uff09\uff0c\u4e5f \u5171\u4eab\u5185\u5b58\uff08\u5982\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u4e2a\u5bf9\u8c61\uff09\u3002</p> <p>Java \u4ece\u8bed\u8a00\u7ea7\u522b\u652f\u6301\u591a\u7ebf\u7a0b\u3002\u5982 <code>Object</code> \u4e2d <code>wait()</code> \u548c <code>notify()</code>\uff0c\u518d\u6bd4\u5982 <code>java.lang</code> \u4e2d\u7684 <code>Thread</code> \u7c7b\u3002</p> <p>\u7ebf\u7a0b\u4f53 \u4e00\u822c\u7528 <code>run</code> \u65b9\u6cd5\u6765\u5b9e\u73b0\u3002\u7ebf\u7a0b\u542f\u52a8\u540e\uff0c\u7cfb\u7edf\u5c31 \u81ea\u52a8\u8c03\u7528 <code>run</code> \u65b9\u6cd5\u3002</p> <p>\u901a\u5e38\uff0c<code>run</code> \u65b9\u6cd5\u6267\u884c\u4e00\u4e2a \u65f6\u95f4\u8f83\u957f \u7684\u64cd\u4f5c\uff1a\u5982 \u6267\u884c\u4e00\u4e2a\u5faa\u73af\uff0c\u663e\u793a\u4e00\u7cfb\u5217\u56fe\u7247\uff0c\u4e0b\u8f7d\u4e00\u4e2a\u6587\u4ef6 \u7b49\u3002</p> <p>\u521b\u5efa\u7ebf\u7a0b\u7684 \u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li> <p>\u901a\u8fc7\u7ee7\u627f <code>Thread</code> \u7c7b\u521b\u5efa\u7ebf\u7a0b <pre><code>class MyThread extends Tread {\n    public void run() {\n        for (int i = 0; i&lt; 100; i++) {\n            System.out.print(\" \" + i);\n        }\n    }\n}\n</code></pre></p> </li> <li> <p>\u901a\u8fc7\u5411 <code>Thread()</code> \u6784\u9020\u65b9\u6cd5\u4f20\u9012 <code>Runnable</code> \u5bf9\u8c61\u6765\u521b\u5efa\u7ebf\u7a0b\u3002 <pre><code>class MyTask implements Runnable {\n    public void run() {\n        // ...\n    }\n}\nMyTask myTask = new MyTask();\nThread thread = new Tread(myTask);\ntread.start();\n</code></pre></p> </li> <li> <p>\u533f\u540d\u7c7b\u521b\u5efa\uff0c\u5728 <code>new</code> \u4e00\u4e2a <code>Thread</code> \u7684\u540c\u65f6\u8986\u76d6\u5176\u4e2d\u7684 <code>run</code> \u65b9\u6cd5 <pre><code>new Thread() {\n    public void run() {\n        for (int i = 0; i &lt; 100; i++) {\n            System.out.println(\"\" + i);\n        }\n    }\n}.start();\n</code></pre></p> </li> <li> <p>\u7528 Lambda \u8868\u8fbe\u5f0f <pre><code>new Thread(() -&gt; { /* ... */ }).start();\n</code></pre></p> </li> </ul>"},{"location":"languages/java/basic/multi_thread/#_3","title":"\u7ebf\u7a0b\u63a7\u5236","text":""},{"location":"languages/java/basic/multi_thread/#_4","title":"\u7ebf\u7a0b\u7684\u72b6\u6001\u4e0e\u751f\u547d\u5468\u671f","text":"<p> \u7ebf\u7a0b\u72b6\u6001\u673a</p>"},{"location":"languages/java/basic/multi_thread/#_5","title":"\u57fa\u672c\u7ebf\u7a0b\u63a7\u5236\u64cd\u4f5c","text":"<ul> <li>\u7ebf\u7a0b\u7684 \u542f\u52a8\uff1a<code>start()</code></li> <li>\u7ebf\u7a0b\u7684 \u7ed3\u675f\uff1a\u8bbe\u7f6e\u4e00\u4e2a \u6807\u8bb0\u53d8\u91cf\uff0c\u4ee5\u7ed3\u675f\u76f8\u5e94\u7684\u5faa\u73af\u53ca\u65b9\u6cd5\u3002</li> <li>\u6682\u65f6\u963b\u6b62 \u7ebf\u7a0b\u6267\u884c\uff1a <pre><code>try { Thread.sleep(1000); } catch ( InterruptedException e ) {}\n</code></pre> \u6ce8\uff1a<code>Tread.sleep()</code> \u65b9\u6cd5\u4f1a\u629b\u51fa <code>InterruptedException</code> \u5f02\u5e38\uff0c\u4e00\u822c\u8981\u5c06\u5176 <code>catch</code> \u4f4f\u3002</li> </ul> <p>\u8bbe\u5b9a\u7ebf\u7a0b\u4f18\u5148\u7ea7\uff1a<code>setPriority(int priority)</code> \u65b9\u6cd5</p>"},{"location":"languages/java/basic/multi_thread/#_6","title":"\u540e\u53f0\u7ebf\u7a0b","text":"<p>\u7ebf\u7a0b\u6709\u4e24\u79cd\uff1a</p> <ul> <li>\u666e\u901a\u7ebf\u7a0b<ul> <li>\u5728 Java \u7a0b\u5e8f\u4e2d\uff0c\u82e5\u8fd8\u6709\u975eDaemon\u7ebf\u7a0b\uff0c\u5219\u6574\u4e2a\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u7ed3\u675f</li> </ul> </li> <li>Daemon\u7ebf\u7a0b\uff08\u5b88\u62a4\u7ebf\u7a0b\u3001\u540e\u53f0\u7ebf\u7a0b\uff09<ul> <li>\u5982\u679c\u666e\u901a\u7ebf\u7a0b\u7ed3\u675f\u4e86\uff0c\u5219\u540e\u53f0\u7ebf\u7a0b \u81ea\u52a8\u7ec8\u6b62</li> <li>\u5783\u573e\u56de\u6536\u7ebf\u7a0b \u5c31\u662f\u540e\u53f0\u7ebf\u7a0b</li> </ul> </li> </ul> <p>\u4f7f\u7528 <code>setDaemon(true)</code> \u8bbe\u7f6e\u540e\u53f0\u7ebf\u7a0b\u3002</p> <p><code>main()</code> \u51fd\u6570\u79f0\u4e3a \u4e3b\u7ebf\u7a0b\u3002</p>"},{"location":"languages/java/basic/multi_thread/#_7","title":"\u7ebf\u7a0b\u540c\u6b65","text":""},{"location":"languages/java/basic/multi_thread/#_8","title":"\u7ebf\u7a0b\u7684\u4e0d\u786e\u5b9a\u6027","text":"<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5185\u5b58\u4e2d\u7684 \u6574\u578b\u53d8\u91cf <code>int cnt = 0;</code>\uff0c\u6211\u4eec \u8d77 5000 \u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c <code>cnt++</code> \uff0c\u7136\u540e\u4f11\u7720\u4e00\u79d2\u7ed3\u675f\u3002\u5728 \u8db3\u591f\u957f \u7684\u65f6\u95f4\u540e\uff08\u5982 3 \u79d2\uff09\uff0c<code>cnt</code> \u7684\u503c \u4e0d\u4e00\u5b9a \u662f 5000\u3002</p> <p>\u8fd9\u662f\u56e0\u4e3a <code>cnt++</code> \u64cd\u4f5c \u4e0d\u662f\u539f\u5b50\u7684\uff08\u901a\u8fc7 <code>java -p</code> \u53ef\u4ee5\u5f97\u5230\u5176\u6c47\u7f16\u6307\u4ee4\uff09\uff0c\u5982\u679c\u53d1\u751f\u5927\u4e8e\u4e00\u4e2a\u7ebf\u7a0b\u7684 <code>cnt++</code> \u64cd\u4f5c \u5e76\u53d1\u6267\u884c \u7684\u60c5\u51b5\uff0c\u5219\u4f1a\u5bfc\u81f4\u7ed3\u679c\u9519\u8bef\u3002</p> <p>\u7531\u6b64\u53ef\u89c1\uff0c\u5f53\u540c\u65f6\u8fd0\u884c\u7684 \u591a\u4e2a\u7ebf\u7a0b\u9700\u8981\u5171\u4eab\u6570\u636e \u65f6\uff0c\u5c31\u5fc5\u987b\u8003\u8651\u5230\u5176\u4ed6\u7ebf\u7a0b\u7684 \u72b6\u6001\u548c\u884c\u4e3a\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5b9e\u73b0 \u540c\u6b65\u3002</p>"},{"location":"languages/java/basic/multi_thread/#_9","title":"\u540c\u6b65","text":"<p>Java \u5f15\u5165\u4e86 \u5bf9\u8c61\u4e92\u65a5\u9501 \u7684\u6982\u5ff5\uff0c\u6765\u4fdd\u8bc1 \u5171\u4eab\u6570\u636e \u64cd\u4f5c\u7684\u5b8c\u6574\u6027\u3002</p> <ul> <li>\u6bcf\u4e2a\u5bf9\u8c61 \u90fd\u5bf9\u5e94\u4e8e\u4e00\u4e2a <code>monitor</code>\uff08\u76d1\u89c6\u5668\uff09\uff0c\u8fd9\u4e2a\u76d1\u89c6\u5668\u6709\u4e00\u79cd\u72b6\u6001\u79f0\u4e3a  \u201c\u4e92\u65a5\u9501\uff08lock, mutex\uff09\u201d\uff0c\u8fd9\u4e2a\u6807\u8bb0\u7528\u4e8e\u4fdd\u8bc1\u5728\u4efb\u610f\u65f6\u523b\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a \u7ebf\u7a0b\u8bbf\u95ee\u8be5\u5bf9\u8c61\u3002</li> <li>\u5173\u952e\u5b57 <code>synchronized</code> \u7528\u6765\u4e0e\u5bf9\u8c61\u7684\u4e92\u65a5\u9501\u8054\u7cfb\u3002</li> </ul> <p><code>synchronized</code> \u7684\u7528\u6cd5\uff1a</p> <ul> <li> <p>\u5bf9\u4ee3\u7801\u7247\u6bb5\uff1a <pre><code>synchronized(\u5bf9\u8c61) {\n    // ...\n}\n</code></pre></p> </li> <li> <p>\u5bf9\u67d0\u4e2a\u65b9\u6cd5\uff0c\u540c\u6b65\u653e\u5728\u51fd\u6570\u58f0\u660e\u4e2d <pre><code>public synchronized void push(char c) {\n    // ...\n}\n</code></pre> \u76f8\u5f53\u4e8e\u5bf9 <code>synchronized(this)</code>\uff0c\u4e3a\u540c\u6b65\u65b9\u6cd5\u3002</p> </li> </ul>"},{"location":"languages/java/basic/multi_thread/#_10","title":"\u7ebf\u7a0b\u7684\u540c\u6b65\u63a7\u5236","text":"<p>\u4f7f\u7528 <code>wait()</code> \u65b9\u6cd5\u53ef\u4ee5\u91ca\u653e\u5bf9\u8c61\u9501\u3002</p> <p>\u4f7f\u7528 <code>notify()</code> \u6216 <code>notifyAll()</code> \u53ef\u4ee5\u8ba9 \u5904\u4e8e\u7b49\u5f85\u72b6\u6001 \u7684\u4e00\u4e2a\u6216\u8005\u6240\u6709\u7ebf\u7a0b \u8fdb\u5165\u5c31\u7eea\u72b6\u6001\u3002</p> <p>\u53ef\u4ee5\u5c06 <code>wait</code> \u548c <code>notify</code> \u65b9\u6cd5\u653e\u5728 <code>synchronized</code> \u4ee3\u7801\u91cc\u9762\uff0c\u56e0\u4e3a Java \u662f\u8fd9\u6837\u5904\u7406\u7684\uff1a \u5728<code>synchronized</code> \u4ee3\u7801\u88ab\u6267\u884c\u671f\u95f4\uff0c\u7ebf\u7a0b\u8c03\u7528\u5bf9\u8c61\u7684<code>wait()</code>\u65b9\u6cd5\uff0c\u4f1a\u91ca\u653e\u5bf9\u8c61\u7684\u6807\u5fd7\u9501\uff0c\u7136\u540e\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u7136\u540e\u7531 \u5176\u4ed6\u7ebf\u7a0b \u8c03\u7528 <code>notify</code> \u6216 <code>nitifyAll</code> \u65b9\u6cd5\u901a\u77e5\u6b63\u5728\u7b49\u5f85\u7684\u7ebf\u7a0b\u3002</p> <p>\u4e00\u4e2a\u7ecf\u5178\u7684\u95ee\u9898\u662f \u751f\u4ea7\u8005-\u6d88\u8d39\u8005 \u6a21\u5f0f\u3002</p> <p>\u5728\u7ed9\u591a\u7ebf\u7a0b\u52a0\u9501\u7684\u65f6\u5019\u8981\u6ce8\u610f\u53ef\u80fd\u5bfc\u81f4 \u6b7b\u9501 \u7684\u903b\u8f91\u3002</p>"},{"location":"languages/java/basic/multi_thread/#api","title":"\u5e76\u53d1 API \u4e2d\u7684\u5de5\u5177","text":"<p>\u4e0a\u6587\u63d0\u5230\u7684 <code>synchronized</code> \u7b49\u5173\u952e\u5b57\u5c5e\u4e8e \u8bed\u8a00\u7ea7\u522b \u7684\u9501\uff0cJDK1.5 \u4e2d\u589e\u52a0\u4e86\u66f4\u591a\u7684\u7c7b\uff0c\u4ee5\u4fbf\u66f4\u7075\u6d3b\u5730\u4f7f\u7528\u9501\u673a\u5236\u3002</p> <p><code>java.util.concurrent.locks</code> \u5305\u4e2d\u6709\uff1a</p> <p><code>Lock</code> \u63a5\u53e3\u3001<code>ReentrantLock</code> \u7c7b\u4e2d\uff1a<code>lock</code>\u3001<code>tryLock</code>\u3001<code>unLock</code> \u65b9\u6cd5\u3002</p> <p><code>ReadWriteLock</code> \u63a5\u53e3\u3001<code>ReentrantReadWriteLock</code> \u7c7b\u4e2d\uff1a<code>.writeLock().lock()</code>, <code>.readLock().unLock()</code></p>"},{"location":"languages/java/basic/multi_thread/#api_1","title":"\u5e76\u53d1API","text":"<p>\u63d0\u4f9b\u4e86\u5927\u91cf \u539f\u5b50\u53d8\u91cf \u53ca \u7ebf\u7a0b\u5b89\u5168 \u76f8\u5173\u5de5\u5177\u3002</p> <p>\u4ece JDK1.5 \u5f00\u59cb\uff0c<code>java.util.concurrent</code> \u5305\u53ca\u5176\u5b50\u5305\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5de5\u5177\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u4f7f\u7528\u7ebf\u7a0b\u3002</p> <p>\u8fd9\u91cc\u4ecb\u7ecd\u51e0\u4e2a\u7684\u5b9e\u7528\u7c7b\uff1a\u5355\u53d8\u91cf\u3001\u96c6\u5408\u3001Timer\u3001\u7ebf\u7a0b\u6c60</p>"},{"location":"languages/java/basic/multi_thread/#_11","title":"\u539f\u5b50\u53d8\u91cf","text":"<p><code>java.util.concurrent.atomic</code> \u5305\uff1a<code>AtomicInteger</code> \u7c7b\uff0c<code>getAndIncrement()</code> \u65b9\u6cd5</p>"},{"location":"languages/java/basic/multi_thread/#_12","title":"\u96c6\u5408\u4e0e\u7ebf\u7a0b","text":"<p>\u5728 JDK1.5 \u4e4b\u524d\uff1a</p> <ul> <li><code>ArrayList</code>\u3001<code>HashMap</code> \u4e0d\u662f \u7ebf\u7a0b\u5b89\u5168\u7684\uff0c<code>Vector</code>\u3001<code>Hashtable</code> \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</li> <li>\u4ea7\u751f\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\u5bf9\u8c61\uff1a <pre><code>Collections.synchronizedArrayList(list)\n</code></pre></li> </ul> <p><code>java.util.concurrent</code> \u5305\u4e2d\u589e\u52a0\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u7c7b\uff1a</p> <ul> <li><code>CopyOnWriteArrayList</code>\u3001<code>CopyOnWriteSet</code>\uff1a\u9002\u5408\u4e8e \u8bfb\u591a\u5199\u5c11 \u7684\u5bf9\u8c61</li> <li><code>ConcurrentHashMap</code>\uff1a<code>putIfAbsent()</code>\u3001<code>remove()</code>\u3001<code>replace()</code></li> <li><code>ArrayBlockingQueue</code>\uff1a\u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005\uff0c\u4f7f\u7528 <code>put()</code> \u53ca <code>take()</code>\u3002</li> </ul> <p>\u8fd9\u4e9b\u7c7b\u7684\u662f\u7528\u907f\u514d\u6211\u4eec\u624b\u52a8\u7f16\u5199 <code>wait</code>-<code>notify</code> \u76f8\u5173\u4ee3\u7801\uff0c\u65b9\u4fbf\u5f88\u591a\u3002</p>"},{"location":"languages/java/basic/multi_thread/#_13","title":"\u4f7f\u7528\u7ebf\u7a0b\u6c60","text":"<p>\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6bcf <code>new</code> \u4e00\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u7cfb\u7edf\u90fd\u8981\u4e3a\u5b83\u4f5c\u5f88\u591a \u73af\u5883\u51c6\u5907\uff0c\u8fd9\u5bfc\u81f4\u7ebf\u7a0b\u7684 \u521b\u5efa\u548c\u9500\u6bc1 \u90fd\u662f\u6709\u4e00\u5b9a \u5f00\u9500 \u7684\u3002\u5982\u679c\u6211\u4eec\u80fd \u63d0\u524d\u521b\u5efa\u597d \u4e00\u5b9a\u6570\u91cf\u7684\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u5f53\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u5b8c\uff0c\u6211\u4eec \u4e0d\u9500\u6bc1\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u800c\u662f\u7b49\u5f85\u6267\u884c\u672a\u6765\u65b0\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u5219\u4f1a\u5927\u5927\u63d0\u9ad8\u3002</p> <p>\u7ebf\u7a0b\u6c60\u76f8\u5173\u7684\u7c7b\uff1a<code>ExecutorService</code> \u63a5\u53e3\u3001<code>ThreadPoolExecutor</code> \u7c7b\u3001<code>Executors</code> \u5de5\u5177\u7c7b\u3002</p> <p>\u5e38\u89c1\u7684\u7528\u6cd5\u662f\uff1a <pre><code>ExecutorService pool = Excutors.newCachedThreadPool();\npool.execute(runnable);\n</code></pre> \u5176\u4e2d <code>runnable</code> \u662f\u4e00\u4e2a <code>Runnable</code> \u5bf9\u8c61\u3002</p>"},{"location":"languages/java/basic/multi_thread/#timer","title":"\u4f7f\u7528 Timer","text":"<p>\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>\u4f7f\u7528 <code>java.util.Timer</code> \u7c7b\uff1a\u91cd\u590d\u67d0\u4ef6\u4e8b</li> <li>\u4f7f\u7528 <code>javax.swing.Timer</code> \u7c7b\uff1a\u91cd\u590d\u6267\u884c <code>ActionListener</code></li> </ul> <p>\u7279\u522b\u6ce8\u610f\uff1a\u5728\u7ebf\u7a0b\u4e2d \u66f4\u65b0\u56fe\u5f62\u5316\u754c\u9762 \uff0c\u8981\u8c03\u7528\uff1a<code>SwingUtilities.invokeLater</code>\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u4f4e\u4e8e\u56fe\u5f62\u5316\u754c\u9762\uff0c\u6240\u6709\u9700\u8981\u5bf9\u754c\u9762\u8fdb\u884c\u66f4\u65b0\u7684\u64cd\u4f5c \u90fd\u8981\u4ea4\u7ed9 <code>Swing</code> \u4e3b\u7ebf\u7a0b\u53bb\u7edf\u4e00\u66f4\u65b0\u5b8c\u6210\u3002</p>"},{"location":"languages/java/basic/multi_thread/#_14","title":"\u6d41\u5f0f\u64cd\u4f5c\u53ca\u5e76\u884c\u6d41","text":"<p>\u4ece Java8 \u5f00\u59cb\uff0cJava \u63d0\u4f9b\u4e86 \u6d41\uff08stream\uff09 \u64cd\u4f5c\u3002</p> <p>\u8d77\u56e0\uff1a\u4e00\u4e9b\u548c\u96c6\u5408\u76f8\u5173\u7684\u5e38\u89c1\u4efb\u52a1\uff0c\u6bd4\u5982\u6c42\u548c\u3001\u8fc7\u6ee4\u3001\u6392\u5e8f\u7b49\uff0c\u6211\u4eec\u5e0c\u671b\u628a\u4ed6\u4eec\u62bd\u8c61\u51fa\u6765\u3002</p> <p>\u8fd9\u91cc\u7684 \u6d41 \u548c \u8f93\u5165\u8f93\u51fa\u6d41 \u4e0d\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u800c\u662f \u6d41\u6c34\u7ebf\u3001\u7a0b\u5e8f\u5316 \u7684\u610f\u601d\u3002</p>"},{"location":"languages/java/basic/multi_thread/#_15","title":"\u4e00\u822c\u7528\u6cd5","text":"<ul> <li> <p>\u5f97\u5230\u6d41\uff1a <pre><code>Stream&lt;T&gt; stream = collection.stream();\n</code></pre></p> </li> <li> <p>\u64cd\u4f5c\u6d41\uff1a <pre><code>int sumOfWeights = blocks.stream().filter(b-&gt;b.getColor == RED).mapToInt(b-&gt;b.getWeight()).sun();\n</code></pre></p> </li> </ul> <p>\u6d41\u5f0f\u64cd\u4f5c \u662f\u4e00\u79cd\u51fd\u6570\u5f0f\uff0c\u5e76\u4e14\u7c7b\u4f3c\u6d41\u6c34\u7ebf\u98ce\u683c\u7684\u64cd\u4f5c\u3002</p> <p>\u5982\u679c\u7528 Lambda \u8868\u8fbe\u5f0f\u914d\u5408\u6d41\u5f0f\u7f16\u7a0b\u5b9e\u73b0\u4e86 \u51fd\u6570\u5f0f\u7f16\u7a0b\u3002\u662f\u4e00\u79cd\u5168\u65b0\u7684\u601d\u8003\u95ee\u9898\u7684\u65b9\u6cd5\u3002</p>"},{"location":"languages/java/basic/multi_thread/#_16","title":"\u6d41\u7684\u5206\u7c7b","text":"<p><code>stream</code> \u7684\u64cd\u4f5c\u5206\u4e24\u7c7b\uff1a</p> <ul> <li>\u4e2d\u95f4\u7684 - \u4e2d\u95f4\u7684\u64cd\u4f5c\u5904\u4e8e\u4fdd\u6301\u6d41\u5904\u4e8e \u6253\u5f00\u72b6\u6001\uff0c\u5e76\u5141\u8bb8\u540e\u7eed\u7684\u64cd\u4f5c\uff0c\u5982\uff1a<code>filter</code>, <code>sort</code>, <code>limit</code>, <code>map</code></li> <li>\u672b\u7aef\u7684 - \u672b\u7aef\u7684\u64cd\u4f5c\u5fc5\u987b\u662f\u5bf9\u6d41\u7684\u6700\u7ec8\u64cd\u4f5c\uff0c\u5982\uff1a<code>max</code>, <code>min</code>, <code>forEach</code>, <code>findAny</code></li> </ul>"},{"location":"languages/java/basic/multi_thread/#_17","title":"\u4e00\u822c\u6b65\u9aa4\u662f","text":"<ol> <li>\u4ece\u67d0\u4e2a\u6e90\u5934\u83b7\u5f97\u4e00\u4e2a\u6d41</li> <li>\u6267\u884c\u4e00\u7cfb\u5217\u4e2d\u95f4\u64cd\u4f5c</li> <li>\u6267\u884c\u4e00\u4e2a\u672b\u7aef\u64cd\u4f5c</li> </ol>"},{"location":"languages/java/basic/multi_thread/#stream","title":"\u5982\u4f55\u5f97\u5230\u4e00\u4e2a <code>Stream</code>","text":"<p>\u5bf9\u4e8e\u6570\u7ec4\uff1a<code>Arrays.stream(ary)</code></p> <p>\u5bf9\u4e8e <code>Collection</code>\uff08\u5305\u62ec <code>List</code>\uff09\uff1a\u7528 <code>list.stream()</code></p> <p>\u5bf9\u4e8e <code>Map</code>\uff1a\u6ca1\u6709\u6d41\uff0c\u4f46\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff1a</p> <ul> <li><code>map.putIfAbsent</code></li> <li><code>map.computeIfPresent</code></li> <li><code>map.merge</code></li> </ul>"},{"location":"languages/java/basic/multi_thread/#_18","title":"\u6d41\u7684\u5b50\u63a5\u53e3","text":"<p><code>DoubleStream</code>, <code>IntStream</code>, <code>LongStream</code>, <code>Stream&lt;T&gt;</code></p>"},{"location":"languages/java/basic/multi_thread/#_19","title":"\u6d41\u7684\u5e76\u884c\u8ba1\u7b97","text":"<p>\u53ea\u9700\u5c06 <code>.stream()</code> \u66ff\u6362\u6210 <code>.parallelStream()</code>\uff0c\u5176\u4ed6\u90fd\u4e0d\u53d8\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u9664\u4e86 \u51fd\u6570\u5f0f\u8ba1\u7b97\uff0c\u53ef\u4ee5\u8bf4 \u6d41 \u5c31\u662f\u4e3a\u4e86 \u5e76\u884c\u8ba1\u7b97 \u800c\u751f\u7684\u3002</p>"},{"location":"languages/java/basic/network_multimedia_and_database/","title":"\u7f51\u7edc\u3001\u591a\u5a92\u4f53\u53ca\u6570\u636e\u5e93\u7f16\u7a0b","text":""},{"location":"languages/java/basic/network_multimedia_and_database/#_2","title":"\u7f51\u7edc\u7f16\u7a0b","text":""},{"location":"languages/java/basic/network_multimedia_and_database/#_3","title":"\u591a\u5a92\u4f53\u7f16\u7a0b","text":""},{"location":"languages/java/basic/network_multimedia_and_database/#_4","title":"\u6570\u636e\u5e93\u7f16\u7a0b","text":""},{"location":"languages/java/basic/programming_basic/","title":"\u7b80\u5355\u7684 Java \u7a0b\u5e8f","text":""},{"location":"languages/java/basic/programming_basic/#java_1","title":"Java \u7a0b\u5e8f\u7684\u7c7b\u578b\u4e0e\u57fa\u672c\u6784\u6210","text":"<p>Java \u7a0b\u5e8f\u6709\u5f88\u591a\u79cd\u7c7b\u578b\u3002\u800c\u5728 Java SE \u4e2d\u4e3b\u8981\u6709\u4e24\u79cd\u7c7b\u578b\uff1a Application \u548c Applet\uff0c\u4e8c\u8005\u7684\u7ed3\u6784\u548c\u8fd0\u884c\u73af\u5883\u6709\u6240\u4e0d\u540c\uff1a</p> <ul> <li>Application\uff1a\u524d\u8005\u662f\u72ec\u7acb\u7a0b\u5e8f\uff0c\u9700\u8981\u6267\u884c\u5668\uff08JVM\uff09\u6765\u8fd0\u884c</li> <li>Applet\uff1a\u5d4c\u5728 HTML \u7f51\u9875\u4e2d\u7684\u975e\u72ec\u7acb\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u7531\u4e13\u95e8\u7684 Applet View \u6765\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u7531 Web \u6d4f\u89c8\u5668\uff08\u8c03\u7528 JMV\uff09\u6765\u8fd0\u884c</li> </ul>"},{"location":"languages/java/basic/programming_basic/#application","title":"Application","text":"<p>HelloWorld.java <pre><code>public class HelloWorldApp {\n    public static void main(String args[]) {\n        System.out.println(\"Hello World!\");\n    }\n}\n</code></pre></p> <p>\u8981\u70b9\uff1a</p> <ul> <li>class \u662f\u4e3b\u4f53</li> <li>public \u7c7b\u540d\u4e0e\u6587\u4ef6\u540c\u540d</li> <li>main() \u7684\u5199\u6cd5\u662f\u56fa\u5b9a\u7684</li> </ul>"},{"location":"languages/java/basic/programming_basic/#applet","title":"Applet","text":"<ul> <li>\u6ca1\u6709\u5165\u53e3\u51fd\u6570 main\uff0c\u6545\u4e3a\u975e\u72ec\u7acb\u8fd0\u884c\u3002</li> <li>\u5b57\u8282\u7801\u6587\u4ef6 .class \u9700\u8981\u501f\u52a9\u652f\u6301Java\u7684\u6d4f\u89c8\u5668\u6765\u8fd0\u884c\u3002</li> </ul>"},{"location":"languages/java/basic/programming_basic/#_1","title":"\u7a0b\u5e8f\u7684\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u8fd0\u884c","text":"<ul> <li>\u7f16\u8f91\uff1a\u7eaf\u6587\u672c\u6587\u4ef6 .java \u2014\u2014 \u6ce8\u610f\u6587\u4ef6\u540d\u8981\u548c public \u7684\u7c7b\u540d\u4e00\u81f4\u3002</li> <li>\u7f16\u8bd1\uff1aJDK \u4e2d\u7684 javac \u5de5\u5177\u5c06\u6e90\u6587\u4ef6\uff08.java\uff09\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u6587\u4ef6\uff08.class\uff09 \u2014\u2014 \u5b57\u8282\u7801\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u662f JVM \u6307\u4ee4\u3002</li> <li>\u8fd0\u884c\uff1aJDK \u4e2d\u7684 java \u5de5\u5177 \u2014\u2014 \u6ce8\u610f <code>java</code> \u5de5\u5177\u540e\u8ddf\u7684\u662f \u7c7b \u4e0d\u662f \u6587\u4ef6\u3002</li> </ul>"},{"location":"languages/java/basic/programming_basic/#classpath","title":"\u8bbe\u5b9a classpath","text":"<p>\u5728 <code>java</code> \u53ca <code>java</code> \u547d\u4ee4\u884c\u4e0a\u4f7f\u7528 <code>-classpath/-cp</code> \u9009\u9879\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u7684\u7c7b\u5e93\uff1a <pre><code>javac -cp libxx.jar Source.java\n\njava -cp libxx.jar Source\n</code></pre></p>"},{"location":"languages/java/basic/programming_basic/#package","title":"\u4f7f\u7528 package \u65f6\u7684\u7f16\u8bd1","text":"<p>\u5b9e\u9645\u76ee\u5f55\u7ed3\u6784\u8981\u4e0e \u00b7package\u00b7 \u5173\u952e\u5b57\u540e\u8ddf\u7684\u6587\u4ef6\u8def\u5f84\u4e00\u81f4\u3002</p> <p>\u7f16\u8bd1\u53ca\u8fd0\u884c\uff1a <pre><code># Use -d option to make the dir for target classes. \njavac -d classes path/to/dir1/*.java path/to/dir2/*.java path/to/dir3/*.java\n\n# Use -cp option to specify the dir in which to find target class.\njava -cp classes path.to.target.Class\n</code></pre></p>"},{"location":"languages/java/basic/programming_basic/#applet_1","title":"Applet \u7a0b\u5e8f\u7684\u7f16\u8bd1\u548c\u8fd0\u884c","text":"<p>Java Applet \u7a0b\u5e8f\u5fc5\u987b\u5d4c\u5165\u5230 HTML \u4e2d\uff0c\u5e76\u7531\u8d1f\u8d23\u89e3\u91ca HTML \u6587\u4ef6\u7684 WWW \u6d4f\u89c8\u5668\u5145\u5f53\u89e3\u91ca\u5668\uff0c\u89e3\u91ca\u6267\u884c\u7a0b\u5e8f\u3002</p> <p>Java Applet \u5728 WWW \u4e2d\u5f15\u5165\u4e86\u52a8\u6001\u4ea4\u4e92\u7684\u5185\u5bb9\u3002</p> <p>\u5728\u7f16\u8bd1\u5f97\u5230 .class \u6587\u4ef6\u540e\uff0c\u4f7f\u7528 HTML \u4e2d\u7684  \u6807\u7b7e\u6765\u5d4c\u5165 Applet\u3002 <p>\u53ef\u4ee5\u4f7f\u7528\u3000appletViewer \u6765\u6267\u884c\u5185\u5d4c\u3000Applet \u7684 HTML \u6587\u4ef6\u3002 <pre><code>appletViewer xxx_including_applet.html\n</code></pre></p> <p>\u4ece Java8 \u5f00\u59cb\uff0c<code>Applet</code> \u7684\u8fd0\u884c\u53d7\u5230\u4e86\u4e25\u683c\u7684\u9650\u5236\uff0c\u7531\u6b64\u4e5f\u8bde\u751f\u4e86\u5f88\u591a\u66ff\u4ee3\u65b9\u6848\uff0c\u5982 <code>Flash</code>\u3001<code>SilverLight</code> \u7b49\u3002\u540e\u6765\u66f4\u76f4\u63a5\u7684\u76f4\u63a5\u4f7f\u7528 JavaScript \u6216 HTML5 \u91cc\u7684\u4e00\u4e9b\u529f\u80fd\u6765\u5b9e\u73b0\u7f51\u9875\u91cc\u9762\u7684\u4ea4\u4e92\u529f\u80fd\u3002</p>"},{"location":"languages/java/basic/programming_basic/#jdk","title":"JDK\u4e2d\u7684\u5176\u4ed6\u51e0\u4e2a\u5de5\u5177","text":"<ul> <li>javac\uff1a\u7f16\u8bd1</li> <li>java\uff1a\u8fd0\u884c\uff08\u7ec8\u7aef \u6216 GUI\uff09</li> <li>appletViewer\uff1a\u8fd0\u884c Applet \u7a0b\u5e8f</li> <li>jar\uff1a\u6253\u5305\u5de5\u5177</li> <li>javadoc\uff1a\u751f\u6210\u6587\u6863</li> <li>javap\uff1a\u67e5\u770b\u7c7b\u4fe1\u606f\u53ca\u53cd\u6c47\u7f16</li> <li>...</li> </ul>"},{"location":"languages/java/basic/programming_basic/#jar","title":"\u4f7f\u7528 jar \u6253\u5305","text":"<p>\u6253\u5305 <pre><code>javac -cvfm A.jar A.man A.class\n</code></pre> \u5176\u4e2d <code>c</code>\uff08create \u521b\u5efa\uff09\uff0c<code>v</code>\uff08verbose \u8be6\u60c5\uff09\uff0c<code>f</code> \u4e3a\u8f93\u51fa\u6587\u4ef6\u540d\uff0c<code>m</code> \u4e3a\u6e05\u5355\u6587\u4ef6\u540d\u3002</p> <p>\u8fd0\u884c <pre><code>java -jar A.jar\n</code></pre></p> <p>\u4e00\u822c\u6e05\u5355\u6587\u4ef6\u4f1a\u5199\u660e jar \u5305\u7684 \u7248\u672c\u3001\u6839\u8def\u5f84 \u548c \u4e3b\u7c7b\u540d <pre><code>Manifest-Version: 1.0\nClass-Path: .\nMain-Class: A\n</code></pre></p> <p>\u6ce8\uff1a\u6e05\u5355\u6587\u4ef6\u53ef\u4ee5\u4efb\u610f\u547d\u540d\uff0c\u5e38\u89c1\u7528\u6cd5\u662f MANIFEST.MF\u3002</p>"},{"location":"languages/java/basic/programming_basic/#javadoc","title":"\u4f7f\u7528 javadoc \u751f\u6210\u6587\u6863","text":"<pre><code>javadoc -d \u76ee\u5f55\u540d xxx.java\n</code></pre> <p><code>/**    */</code> \u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u7528\u4e00\u4e0b\u6807\u8bb0\uff1a</p> <ul> <li><code>@author</code>\uff1a\u7c7b\u8bf4\u660e\uff1b\u6807\u660e\u5f00\u53d1\u8be5\u7c7b\u6a21\u5757\u7684\u4f5c\u8005</li> <li><code>@version</code>\uff1a\u7c7b\u8bf4\u660e\uff1b\u6807\u660e\u8be5\u7c7b\u6a21\u5757\u7684\u7248\u672c</li> <li><code>@see</code>\uff1a\u7c7b\u3001\u5c5e\u6027\u3001\u65b9\u6cd5\u7684\u8bf4\u660e\uff1b\u53c2\u8003\u4e13\u9879\uff0c\u5373\u76f8\u5173\u4e3b\u9898</li> <li><code>@param</code>\uff1a\u65b9\u6cd5\u8bf4\u660e\uff1b\u5bf9\u65b9\u6cd5\u4e2d\u67d0\u53c2\u6570\u7684\u8bf4\u660e</li> <li><code>@return</code>\uff1a\u65b9\u6cd5\u8bf4\u660e\uff1b\u5bf9\u65b9\u6cd5\u8fd4\u56de\u503c\u7684\u8bf4\u660e</li> <li><code>@exception</code>\uff1a\u65b9\u6cd5\u8bf4\u660e\uff0c\u5bf9\u65b9\u6cd5\u53ef\u80fd\u8dd1\u51fa\u5f02\u5e38\u7684\u8bf4\u660e</li> </ul>"},{"location":"languages/java/basic/programming_basic/#java-api","title":"Java API \u7684\u6587\u6863","text":"<p>\u5b98\u65b9\u6587\u6863\uff1ahttps://docs.oracle.com/javase/8/docs/api/index.html</p>"},{"location":"languages/java/basic/programming_basic/#javap","title":"javap \u4ea7\u770b\u7c7b\u4fe1\u606f\u548c\u53cd\u6c47\u7f16","text":"<p>\u67e5\u770b\u7c7b\u4fe1\u606f <pre><code>javap \u7c7b\u540d\n</code></pre></p> <p>\u53cd\u6c47\u7f16 <pre><code>javap -c \u7c7b\u540d\n</code></pre> \u8f93\u51fa\u7684\u662f JVM \u6307\u4ee4\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/","title":"\u5de5\u5177\u7c7b\u53ca\u5e38\u7528\u7b97\u6cd5","text":"<p>\u5185\u5bb9\u63d0\u8981\uff1a</p> <p>Java\u8bed\u8a00\u7684\u57fa\u7840\u7c7b\uff0c\u5b57\u7b26\u4e32\u53ca\u65e5\u671f\uff0c\u96c6\u5408\uff0c\u6392\u5e8f\u4e0e\u67e5\u627e\uff0c\u6cdb\u578b\uff0c\u5e38\u7528\u7b97\u6cd5</p>"},{"location":"languages/java/basic/tools_and_algorithm/#java","title":"Java \u4e2d\u7684\u57fa\u7840\u7c7b","text":"<p>Java \u57fa\u7840\u7c7b\u5e93\uff1a</p> <ul> <li><code>java.lang</code> Java \u8bed\u8a00\u6838\u5fc3\u7c7b\u5e93<ul> <li>Java \u662f\u81ea\u52a8\u5bfc\u5165 <code>java.lang.*</code> \u7684</li> </ul> </li> <li><code>java.util</code> \u5b9e\u7528\u5de5\u5177</li> <li><code>java.io</code> \u6807\u51c6\u8f93\u5165/\u8f93\u51fa\u7c7b\u5e93</li> <li><code>java.awt</code>, <code>javax.swing</code> \u56fe\u5f62\u7528\u6237\u754c\u9762\uff08GUI\uff09\u7684\u7c7b\u5e93</li> <li><code>java.net</code> \u7f51\u7edc\u529f\u80fd\u7684\u7c7b\u5e93</li> <li><code>java.sql</code> \u6570\u636e\u5e93\u8bbf\u95ee\u7684\u7c7b\u5e93</li> </ul> <p>\u6587\u6863\uff1a\u5728\u7ebf JDK API \u6587\u6863\uff0c\u6587\u6863\u4e0b\u8f7d\uff0c\u66f4\u591a\u6587\u6863</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u9605\u8bfb JDK \u6e90\u7801 \uff0c\u4e00\u822c\u4f4d\u4e8e JDK \u76ee\u5f55\u4e0b\u7684 source.zip \u6587\u4ef6</p>"},{"location":"languages/java/basic/tools_and_algorithm/#object","title":"Object \u7c7b","text":"<p><code>Object</code> \u662f\u6240\u6709\u7c7b\u7684\u76f4\u63a5\u6216\u95f4\u63a5\u7236\u7c7b\u3002\u4ed6\u7684\u5b58\u5728 \u4fdd\u8bc1\u4e86\u6240\u6709\u7c7b\u7684\u4e00\u81f4\u6027\u3002</p> <ol> <li><code>equals()</code> \u65b9\u6cd5</li> </ol> <p>\u7b80\u5355\u5730\u8bf4\uff0c<code>equals()</code> \u5224\u65ad\u5185\u5bb9\uff0c<code>==</code> \u5224\u65ad\u5f15\u7528\uff1a <pre><code>Integer one = new Integer(1);\nInteger anotherOne = new Integer(1);\nif (one == anotherOne) {    // false\n    // ...\n}\nif (one.euqals(anotherOne)) {   // true\n    // ...\n}\n</code></pre></p> <p>\u5982\u679c\u8986\u76d6 <code>equals()</code> \u65b9\u6cd5\uff0c\u4e00\u822c\u4e5f\u8981\u8986\u76d6 <code>hashCode()</code> \u65b9\u6cd5\u3002\u76ee\u6807\u662f\u8ba9 \"equal\" \u7684\u5bf9\u8c61 \"hashCode\" \u5c3d\u91cf\u76f8\u7b49\u3002</p> <ol> <li><code>getClass()</code> \u65b9\u6cd5</li> </ol> <p><code>getClass()</code> \u662f\u4e00\u4e2a <code>final</code> \u65b9\u6cd5\uff0c\u4e0d\u80fd\u88ab\u91cd\u5199\uff08\u8986\u76d6\uff09\u3002</p> <p>\u5b83\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u5728\u8fd0\u884c\u65f6\u6240\u5bf9\u5e94\u7684\u7c7b\u7684\u8868\u793a\uff1a <pre><code>void printClassName(Object obj) {\n    System.out.println(\"The object's class is \" + obj.getClass().getName());\n}\n\nObject createNewInstanceOf(Object obj) {\n    return obj.getClass().newInstance();\n}\n</code></pre></p> <ol> <li><code>toString()</code> \u65b9\u6cd5</li> </ol> <p><code>toString()</code> \u65b9\u6cd5\u7528\u6765\u8fd4\u56de\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002</p> <p>\u5e38\u7528\u4e8e\u663e\u793a\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u6253\u5370\u51fd\u6570\u5b9e\u8d28\u4e0a\u5c31\u8c03\u7528\u4e86\u5bf9\u8c61\u7684 <code>toString</code> \u65b9\u6cd5\uff1a <pre><code>System.out.println(person);\n</code></pre></p> <p>\u4e5f\u53ef\u7528\u4e8e\u5b57\u7b26\u4e32\u7684 <code>+</code> \u53f7 <pre><code>\"current person is \" + person;\n</code></pre></p> <p>\u901a\u8fc7\u91cd\u8f7d <code>toString()</code> \u65b9\u6cd5\u53ef\u4ee5\u9002\u5f53\u663e\u793a\u5bf9\u8c61\u4fe1\u606f\u4ee5\u8fdb\u884c\u8c03\u8bd5\u3002</p> <ol> <li><code>finalize()</code></li> </ol> <p>\u5728\u5783\u573e\u6536\u96c6\u524d\u6e05\u9664\u5bf9\u8c61\u3002</p> <ol> <li><code>notify()</code>, <code>notifAall()</code>, <code>wait()</code></li> </ol> <p>\u4e0e\u7ebf\u7a0b\u76f8\u5173\u7684\u51fd\u6570\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/#_2","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5305\u88c5\u7c7b","text":"<p>\u4e3a\u4e86\u9002\u5e94\u9762\u5411\u5bf9\u8c61\u7684\u73af\u5883\uff0cJava \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e5f\u63d0\u4f9b\u4e86\u5305\u88c5\u7c7b\uff08wrapper\uff09\u3002\u5b83\u4eec\u662f\u8fd9\u4e9b\u57fa\u672c\u6570\u636e\u7c7b\u578b\u9762\u5411\u5bf9\u8c61\u7684\u4ee3\u8868\u3002</p> <p>\u4e0e 8 \u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\u76f8\u5bf9\u5e94\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u4e5f\u6709 8 \u79cd\uff1a<code>Character</code>, <code>Byte</code>, <code>Short</code>, <code>Integer</code>, <code>Long</code>, <code>Float</code>, <code>Double</code>, <code>Boolean</code>\u3002</p> <p>\u5305\u88c5\u7c7b\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u4e00\u4e9b\u5e38\u6570\uff0c\u4f8b\u5982\uff1a<code>Integer.MAX_VALUE</code>, <code>Double.NaN</code>, <code>Double.POSITIVE_INFINITY</code></li> <li>\u4e0e\u5b57\u7b26\u8f6c\u76f8\u4e92\u8f6c\u6362\u7684\u51fd\u6570\uff1a<code>valueOf(String)</code>, <code>toString()</code></li> <li>\u901a\u8fc7 <code>xxxValue()</code> \u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u6240\u5305\u88c5\u7684\u503c\uff0c\u4f8b\u5982\uff1a<code>Integer</code> \u5bf9\u8c61\u7684 <code>intValue()</code> \u65b9\u6cd5</li> <li>\u5bf9\u8c61\u4e2d\u6240\u5305\u88c5\u7684\u503c\u662f\u4e0d\u53ef\u6539\u53d8\uff08immutable\uff09\u7684\u3002\u5982\u8981\u6539\u53d8\u53ea\u80fd\u751f\u6210\u65b0\u7684\u5bf9\u8c61\uff0c\u7531\u6b64\u4fdd\u8bc1\u5bf9\u8c61\u672c\u8eab\u7684 \u7a33\u5b9a\u6027\u3002</li> <li><code>toString()</code>, <code>equals()</code> \u7b49\u65b9\u6cd5\u8fdb\u884c\u4e86\u8986\u76d6</li> </ul> <p>\u9664\u4e86\u4ee5\u4e0a\u7279\u70b9\uff0c\u6709\u7684\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5b9e\u7528\u7684\u65b9\u6cd5\u4ee5\u4fbf\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c<code>Double</code> \u7c7b\u5c31\u63d0\u4f9b\u4e86 <code>parseDouble()</code>, <code>max</code>, <code>min</code> \u65b9\u6cd5\u7b49\u3002</p> <p>\u5728 JDK1.5 \u4ee5\u4e0a\u63d0\u4f9b\u4e86 \u5305\u88c5\uff08boxing\uff09\u4e0e\u62c6\u5305\uff08unboxing\uff09 \u529f\u80fd\uff1a <pre><code>Integer I = 5;  // Integer I = Integer.valueOf(5);\nint i = I;  // int i = I.intValue();\n</code></pre></p>"},{"location":"languages/java/basic/tools_and_algorithm/#math","title":"Math \u7c7b","text":"<p>\u5c01\u88c5\u4e86\u4e00\u4e9b\u6570\u5b66\u4e0a\u5e38\u7528\u7684 \u9759\u6001\u51fd\u6570 \u548c \u9759\u6001\u5e38\u91cf\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/#system","title":"System \u7c7b","text":"<p>\u5728 Java \u4e2d\uff0c\u7cfb\u7edf\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6765\u83b7\u5f97\u3002</p> <ul> <li><code>System.getProperty(String name)</code> \u65b9\u6cd5\u83b7\u5f97\u7279\u5b9a\u7684\u7cfb\u7edf\u5c5e\u6027\u503c\u3002</li> <li><code>System.getProperties()</code> \u65b9\u6cd5\u83b7\u5f97\u4e00\u4e2a <code>Properties</code> \u7c7b\u7684\u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6240\u6709\u53ef\u7528\u7684\u7cfb\u7edf\u5c5e\u6027\u4fe1\u606f\u3002</li> </ul> <p>\u5728\u547d\u4ee4\u884c\u8fd0\u884c Java \u7a0b\u5e8f\u65f6\u53ef\u4f7f\u7528 <code>-D</code> \u9009\u9879\u6dfb\u52a0\u65b0\u7684\u7cfb\u7edf\u5c5e\u6027\u3002 <pre><code>java -D var=value MyProg\n</code></pre></p>"},{"location":"languages/java/basic/tools_and_algorithm/#_3","title":"\u5b57\u7b26\u4e32\u548c\u65e5\u671f","text":"<p>\u5b57\u7b26\u4e32\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ul> <li><code>String</code> \u7c7b\uff1a\u4e00\u7ecf\u521b\u5efa\u65e0\u6cd5\u4fee\u6539\uff0c\u5373 immutable</li> <li><code>StringBuffer</code>, <code>StringBuilder</code> \u7c7b\uff1a\u521b\u5efa\u4e4b\u540e\u5141\u8bb8\u518d\u505a\u4fee\u6539<ul> <li>\u5176\u4e2d <code>StringBuilder</code> \u662f JDK1.5 \u589e\u52a0\u7684\uff0c\u5b83\u662f \u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u6267\u884c\u6548\u7387\u66f4\u9ad8</li> </ul> </li> </ul> <p>\u7279\u522b\u6ce8\u610f\uff1a\u5728\u5faa\u73af\u4e2d\u4f7f\u7528 <code>String</code> \u7684 <code>+=</code> \u53ef\u80fd\u4f1a\u5e26\u6765\u6548\u7387\u95ee\u9898\u3002\u56e0\u4e3a immutable \u7684\u7279\u6027\u51b3\u5b9a\u5b83\u53ea\u80fd\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/#string","title":"String \u7c7b","text":"<p><code>String</code> \u7c7b\u5bf9\u8c61\u4fdd\u5b58\u4e0d\u53ef\u4fee\u6539\u7684 Unicode \u5b57\u7b26\u5e8f\u5217</p> <ul> <li><code>String</code> \u7c7b\u7684\u4e0b\u8ff0\u65b9\u6cd5\u80fd\u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 <code>String</code> \u5bf9\u8c61\u5b9e\u4f8b\uff1a<code>concat</code>, <code>replace</code>, <code>replaceAll</code>, <code>substring</code>, <code>toLowerCase</code>, <code>toUpperCase</code>, <code>trim</code>, <code>toString</code></li> <li>\u67e5\u627e\uff1a<code>endsWith</code>, <code>startsWith</code>, <code>indexOf</code>, <code>lastIndexOf</code></li> <li>\u6bd4\u8f83\uff1a<code>equals</code>, <code>equalsIgnoreCase</code></li> <li>\u5b57\u7b26\u53ca\u957f\u5ea6\uff1a<code>charAt</code>, <code>length</code></li> </ul> <p>\u6b64\u5916\uff0cJDK1.5 \u589e\u52a0\u4e86 <code>format</code> \u51fd\u6570\u3002</p> <p>\u9664\u4e86 immutable \u7684\u7279\u70b9\u5916\uff0c\u8fd8\u8981\u6ce8\u610f String \u5e38\u91cf \u7684\u5185\u90e8\u5316\uff08interned\uff09\u95ee\u9898\u3002\u5373\u540c\u6837\u7684\u5b57\u7b26\u4e32\u5e38\u91cf\u662f \u5408\u540c\uff08\u6307\u5411\u540c\u4e00\u4e2a\u5f15\u7528\uff09\u7684\u3002</p> <p>\u8fd9\u4fdd\u8bc1\u4e86<code>\"abc\" == \"abc\"</code>\uff0c\u4f46 <code>\"abc\" != new String(\"abc\")</code></p>"},{"location":"languages/java/basic/tools_and_algorithm/#stringbuffer","title":"StringBuffer \u7c7b","text":"<p><code>StringBuffer</code> \u7c7b\u5bf9\u8c61\u4fdd\u5b58\u53ef\u4fee\u6539\u7684 Unicode \u5b57\u7b26\u5e8f\u5217\uff0c<code>StringBuilder</code> \u7c7b\u4f3c\uff0c\u5b83\u6548\u7387\u66f4\u9ad8\uff0c\u4e0d\u7528\u8003\u8651\u7ebf\u7a0b\u5b89\u5168\u6027\u3002</p> <p>\u6784\u9020\u65b9\u6cd5\uff1a<code>StringBuffer()</code>, <code>StringBuffer(int capacity)</code>, <code>StringBuffer(String initialString)</code></p> <p>\u5b9e\u73b0\u4fee\u6539\u64cd\u4f5c\u7684\u65b9\u6cd5\uff1a<code>append</code>, <code>insert</code>, <code>reverse</code>, <code>setCharAt</code>, <code>setLength</code></p>"},{"location":"languages/java/basic/tools_and_algorithm/#_4","title":"\u5b57\u7b26\u4e32\u7684\u5206\u5272","text":"<p><code>java.util.StringToken</code> \u7c7b\u63d0\u4f9b\u4e86\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5206\u5272\u7684\u529f\u80fd\u3002</p> <p>\u6784\u9020\uff1a<code>StringTokenizer(String str, String delim);</code></p> <p>\u8be5\u7c7b\u7684\u91cd\u8981\u65b9\u6cd5\u6709\uff1a <pre><code>public int countTokens();   // \u5206\u5272\u4e32\u7684\u4e2a\u6570\npublic boolean hasMoreTokens(); // \u662f\u5426\u8fd8\u6709\u5206\u5272\u4e32\npublic String nextToken();  // \u5f97\u5230\u4e0b\u4e00\u4e2a\u5206\u5272\u4e32\n</code></pre></p> <p><code>String</code> \u7c7b\u7684 <code>matches</code>, <code>replaceAll</code>, <code>split</code> \u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/#_5","title":"\u65e5\u671f\u7c7b","text":"<p><code>Calendar</code> \u662f Java \u5185\u7f6e\u7684\u65e5\u5386\u7c7b\uff0c<code>Calendar.getTime()</code> \u5f97\u5230\u4e00\u4e2a <code>Date</code> \u7c7b\u7684\u5b9e\u4f8b\uff0c<code>Data.getTime</code> \u5f97\u5230\u4e00\u4e2a <code>long</code>\u3002</p> <p><code>SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")</code> \u7c7b\u6709 <code>.format</code>, <code>.parse</code> \u65b9\u6cd5\u7528\u6765\u683c\u5f0f\u5316\u3001\u89e3\u6790\u65f6\u95f4\u683c\u5f0f\u3002</p> <p>Java8 \u4e2d\u5f15\u5165\u4e86 time api <pre><code>import java.time.*;\nimport java.time.format.*;\n</code></pre> \u5176\u4e2d\uff0c\u4e3b\u8981\u7684\u7c7b\u6709\uff1a</p> <ul> <li><code>Instant</code> \u65f6\u523b\uff0c<code>Clock</code> \u65f6\u533a\uff0c<code>Duration</code> \u65f6\u95f4\u6bb5</li> <li>\u5e38\u7528\u7684\u7c7b <code>LocalDateTime</code>, <code>LocalDate</code>, <code>LocalTime</code>\uff0c\u5b83\u4eec\u90fd\u652f\u6301 <code>.of</code>, <code>.parse</code>, <code>.format</code>, <code>.plus</code>, <code>.minus</code> \u65b9\u6cd5</li> <li><code>DateTimeFormatter</code></li> </ul>"},{"location":"languages/java/basic/tools_and_algorithm/#_6","title":"\u96c6\u5408","text":"<p><code>Collection API</code> \u4e09\u5927\u7c7b\uff1a</p> <ul> <li><code>Collection</code> \u63a5\u53e3<ul> <li><code>List</code> \uff08<code>Collection</code> \u7684\u5b50\u63a5\u53e3\uff09\uff1a\u6709\u987a\u5e8f\uff0c\u53ef\u91cd\u590d</li> <li><code>Set</code> \uff08<code>Collection</code> \u7684\u5b50\u63a5\u53e3\uff09\uff1a\u65e0\u987a\u5e8f\uff0c\u4e0d\u91cd\u590d</li> </ul> </li> <li><code>Map</code> \u63a5\u53e3<ul> <li>\u952e\u503c\u5bf9 \u96c6\u5408</li> </ul> </li> </ul> <p><code>Collection</code> \u63a5\u53e3\u63d0\u4f9b\u5982\u4e0b\u57df\uff1a</p> <p> \u96c6\u5408UML</p> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u7531 <code>Collection</code> \u6d3e\u751f\u7684\u7c7b\uff1a</p> <p> \u96c6\u5408\u5c42\u6b21\u7ed3\u6784</p>"},{"location":"languages/java/basic/tools_and_algorithm/#list","title":"List","text":"<p><code>List</code> \u63a5\u53e3\uff1a\u7ebf\u6027\u8868\uff08linear list\uff09\u3002</p> <p>\u4e3b\u8981\u7684\u5b9e\u73b0\u7c7b\u6709\uff1a<code>ArrayList</code>, <code>LinkedList</code>\uff0c\u4ee5\u53ca\u65e9\u671f\u7684 <code>Vector</code></p> <p><code>List</code> \u63a5\u53e3\uff1a <pre><code>public interface List&lt;E&gt; extends Collection&lt;E&gt; {\n    E get(int index);\n    E set(int index, E element);\n    void add(int index, E element);\n    E remove(int index);\n    int indexOf(Object o);\n    //...\n}\n</code></pre></p> <p>\u6240\u6709\u7684 <code>Collection</code> \u90fd\u80fd\u4ea7\u751f \u8fed\u4ee3\u5668 <code>Iterator</code>\uff1a <pre><code>Iterator iterator = iterable.iterator();\nwhile (iterator.hasNext()) {\n    doSomething(iterator.next());\n}\n</code></pre></p> <p>Java \u4e2d\u7684 \"for-each\" \u8bed\u53e5\uff0c\u7f16\u8bd1\u5668\u5c31\u751f\u6210\u4e86 <code>Iterator</code>\uff0c\u901a\u8fc7\u8c03\u7528\u5b83\u7684 <code>hasNext()</code> \u65b9\u6cd5\u6765\u5224\u65ad\u662f\u5426\u7ee7\u7eed\u8fed\u4ee3\uff1a <pre><code>for (Element e : list) {\n    doSomething(e);\n}\n</code></pre></p>"},{"location":"languages/java/basic/tools_and_algorithm/#stack","title":"Stack","text":"<ul> <li>\u5148\u5165\u540e\u51fa\u8868\uff08LIFO\uff09</li> <li>\u7ebf\u6027\u6570\u636e\u7ed3\u6784</li> <li>\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u6cd5\uff1a <pre><code>public Object push(Object item);\npublic Object pop();\npublic boolean empty();\n</code></pre></li> </ul>"},{"location":"languages/java/basic/tools_and_algorithm/#queue","title":"Queue","text":"<ul> <li>\u5148\u8fdb\u5148\u51fa\u8868\uff08FIFO\uff09</li> <li>\u4e00\u79cd\u91cd\u8981\u7684\u5b9e\u73b0\u662f <code>LinkedList</code> \u7c7b\uff1a</li> </ul> \u53ef\u629b\u51fa\u5f02\u5e38 \u53ef\u8fd4\u56de\u5143\u7d20 Insert add(e) offer(e) Remove remove() poll() Examine element() peek() <p>\u51e0\u4e2a \u65e9\u671f \u7684\u7c7b\u6216\u63a5\u53e3\uff1a</p> <ul> <li>\u52a8\u6001\u6570\u7ec4\uff1a<code>Vector</code> \u73b0\u5728\u591a\u7528 <code>ArrayList</code><ul> <li>\u6bd4 JDK1 \u4e2d\u7684 <code>ArrayList</code> \u597d\uff0c\u6709 <code>elementAt</code> \u65b9\u6cd5</li> </ul> </li> <li>\u7ebf\u6027\u6808\uff1a<code>Stack</code> \u73b0\u5728\u591a\u7528 <code>LinkedList</code><ul> <li><code>Stack</code> \u662f <code>Vector</code> \u7684\u5b50\u7c7b\uff0c\u6709 <code>push</code>, <code>pop</code>, <code>pick</code> \u65b9\u6cd5\u3002</li> </ul> </li> <li>\u54c8\u5e0c\u8868\uff1a<code>Hashtable</code> \u73b0\u5728\u591a\u7528 <code>HashMap</code><ul> <li><code>Hashtable</code> \u5b9e\u73b0 <code>Map</code> \u63a5\u53e3\uff0c\u53c2\u89c1 <code>Properties</code> \u7c7b</li> </ul> </li> <li>\u679a\u4e3e\uff1a<code>Enumeration</code>\uff0c\u73b0\u5728\u591a\u7528 <code>Iterator</code><ul> <li><code>Enumeration</code> \u662f\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\u5b9e\u73b0 <code>Iterator</code> \u7684\u529f\u80fd</li> <li><code>Vector</code> \u7b49\u53ef\u4ee5\u5f97\u5230\u679a\u4e3e\u5668\uff1a <pre><code>Enumberation&lt;E&gt; e = v.elements();\nwhile (e.hasMoreElements()) {\n    doSomething(e.nextElement());\n}\n</code></pre> \u7531\u4e8e <code>Iterator</code> \u652f\u6301 \"for-each\" \u7684\u8fed\u4ee3\u5f62\u5f0f\uff0c\u6545\u66ff\u4ee3\u4e86 <code>Enumeration</code></li> </ul> </li> </ul>"},{"location":"languages/java/basic/tools_and_algorithm/#set","title":"Set","text":"<p><code>Set</code> \u63a5\u53e3\u6709\u4e24\u4e2a \u91cd\u8981\u5b9e\u73b0\uff0c<code>HashSet</code> \u548c <code>TreeSet</code>\uff0c\u5176\u4e2d <code>TreeSet</code> \u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u7528 <code>TreeMap</code> \u6765\u5b9e\u73b0\u7684\u3002</p> <p><code>Set</code> \u4e2d\u7684\u5bf9\u8c61\u4e0d\u91cd\u590d\uff0c\u5373\uff1a</p> <ul> <li><code>hashCode()</code> \u4e0d\u7b49</li> <li>\u5982\u679c <code>hashCode()</code> \u76f8\u7b49\uff0c\u518d\u770b <code>equals</code> \u6216 <code>==</code> \u662f\u5426\u4e3a <code>false</code></li> </ul> <p><code>Hashable</code> \u7684\u5b9e\u73b0\uff1a</p> <ul> <li><code>String</code> \u5bf9\u8c61\u7684\u54c8\u5e0c\u7801\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a $$ s[0] \\times 31^{n - 1} + s[1] \\times 31^{n - 2} + ... + s[n - 1] $$</li> </ul> <p></p> <p>\u6ce8\uff1a\u4e00\u822c\u6211\u4eec\u5728\u8986\u76d6\u7684\u65f6\u5019 \u8981\u540c\u65f6\u8986\u76d6 <code>hashCode</code> \u548c <code>equals</code> \u65b9\u6cd5\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/#map","title":"Map","text":"<p><code>Map</code> \u662f\u952e\u503c\u5bf9\u7684\u96c6\u5408</p> <ul> <li>\u5176\u4e2d\u53ef\u4ee5\u53d6\u5230 <code>entrySet()</code>, <code>ketSet()</code>, <code>values()</code></li> <li><code>Map.Entry</code> \u662f\u4e00\u4e2a\u5d4c\u5957\u63a5\u53e3</li> </ul> <p><code>Map</code> \u7c7b\u7684\u91cd\u8981\u5b9e\u73b0\uff1a<code>HashMap</code> \u7c7b\u548c <code>TreeMap</code> \u7c7b\uff0c\u5176\u4e2d <code>TreeMap</code> \u57fa\u4e8e\u7ea2\u9ed1\u6811</p> <p> Map \u7684\u5c42\u6b21\u7ed3\u6784</p>"},{"location":"languages/java/basic/tools_and_algorithm/#_7","title":"\u6392\u5e8f\u4e0e\u67e5\u627e","text":"<p>Java \u4e2d <code>Arrays</code> \u7c7b\u53ca <code>Collections</code></p>"},{"location":"languages/java/basic/tools_and_algorithm/#arrays","title":"Arrays","text":"<p><code>Arrays</code> \u63d0\u4f9b\u4e86 <code>sort()</code> \u548c <code>binarySearch()</code> \u65b9\u6cd5\uff1a <pre><code>public static void sort(List list);\npublic static void sort(List list, Comparator c);\npublic static int binarySearch(List list, Object key);\npublic static int binarySearch(List list, Object key, Comparator c);\n</code></pre> \u6ce8\uff1a\u4e00\u822c\u8c03\u7528 <code>binarySearch()</code> \u4e4b\u524d\u5148\u8c03\u7528\u4e00\u6b21 <code>sort()</code>\u3002</p> <p>\u770b\u5982\u4e0b\u4f8b\u5b50\uff1a <pre><code>String[] s = randStrings(4, 10);\nprint(s);\nArrays.&lt;String&gt;sort(s);\nprint(s);\nint loc = Arrays.&lt;String&gt;binarySearch(s, s[2]);\nSystem.out.println(\"Location of \" + s[2] + \" is \" + loc);\n</code></pre> \u6ce8\uff1a\u8fd9\u91cc\u6cdb\u578b <code>&lt;String&gt;</code> \u662f \u9650\u5b9a\u65b9\u6cd5\u7684\uff0c\u6545\u5199\u5728\u65b9\u6cd5\u524d\u9762\u3002</p> <p>\u5173\u4e8e\u6bd4\u8f83\uff1a</p> <ul> <li>\u8981\u4e48\u5bf9\u8c61\u662f <code>java.lang.Comparable</code>\uff0c\u5b9e\u73b0\u4e86\u5982\u4e0b\u65b9\u6cd5\uff1a <pre><code>public int compareTo(Object obj) {\n    return this.price - ((Book)obj).price;\n}\n</code></pre></li> <li>\u8981\u4e48\u63d0\u4f9b\u4e00\u4e2a <code>java.lang.Comparator</code>\uff0c\u5b9e\u73b0\u5982\u4e0b\u65b9\u6cd5\uff1a <pre><code>public int compare(T o1, T o2);\n</code></pre></li> </ul> <p>\u6ce8\uff1a\u8fd9\u4e9b\u65b9\u6cd5\u7684\u542b\u4e49\u4e0d\u80fd\u548c <code>equal</code> \u51b2\u7a81\uff0c\u5426\u5219 \u8bed\u4e49\u4e0a\u4e0d\u80fd\u89e3\u91ca\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/#collections","title":"Collections","text":"<p>\u6b64\u7c7b\u5b8c\u5168\u7531\u5728 <code>collection</code> \u4e0a\u8fdb\u884c\u64cd\u4f5c\u7684\u9759\u6001\u65b9\u6cd5\u7ec4\u6210\u3002</p> <p>\u5982 <code>sort</code>, <code>binary</code>, <code>reverse</code> \u7b49\u3002</p> <p>\u4ece Java8 \u5f00\u59cb\uff0c\u6211\u4eec\u5f80\u5f80\u76f4\u63a5\u7528 lambda \u8868\u8fbe\u5f0f \u6765\u5b9a\u4e49\u6bd4\u8f83\u5668\u3002\u4f8b\u5982\uff1a <pre><code>Collections.sort(school, (p1, p2)-&gt;p1.age-p2.age);\n</code></pre> \u4e00\u6b21\u6765\u5bf9\u5b66\u6821\u91cc\u7684\u5b66\u751f\u6309\u7167\u5e74\u9f84\u6392\u5e8f\u3002</p>"},{"location":"languages/java/basic/tools_and_algorithm/#_8","title":"\u6cdb\u578b","text":"<p>\u6cdb\u578b\uff08Generic\uff09\u662f JDK1.5 \u4e4b\u540e\u52a0\u5165\u7684\u6700\u91cd\u8981\u7684 Java \u8bed\u8a00\u7279\u6027\u3002</p> <p>\u4f7f\u7528\u6cdb\u578b\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u7c7b\u6709\u76f8\u540c\u7684\u5904\u7406\u65b9\u6cd5\uff1a <pre><code>Vector&lt;String&gt; v = new Vector&lt;String&gt;();\nv.addElement(\"one\");\nString s = v.elementAt(0);\n</code></pre></p> <p>\u6cdb\u578b\u7684\u597d\u5904\u5728\u4e8e\uff1a</p> <ul> <li>\u4f7f\u7c7b\u578b\u66f4\u5b89\u5168\u3002\u5426\u5219\uff0c\u6211\u4eec\u53ea\u80fd\u628a\u6240\u6709\u7684\u7c7b\u578b\u90fd\u5f53\u505a <code>Object</code> \u7f16\u7a0b\uff0c\u5e76\u5728\u4f7f\u7528\u65f6\u8fdb\u884c \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd9\u5c31\u4e0d\u5177\u5907\u5b89\u5168\u6027\u3002</li> <li>\u4f7f\u7528\u66f4\u5e7f\u6cdb\uff0c\u53ef\u4ee5\u7f16\u5199\u9488\u5bf9\u4e0d\u540c\u7c7b\u7684\u76f8\u540c\u5904\u7406\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e9b\u65b9\u6cd5\u4e4b\u95f4 \u8fd8\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u3002</li> </ul>"},{"location":"languages/java/basic/tools_and_algorithm/#_9","title":"\u81ea\u5b9a\u4e49\u6cdb\u578b","text":"<ul> <li>\u81ea\u5b9a\u4e49\u6cdb\u578b\u7c7b</li> <li>\u81ea\u5b9a\u4e49\u6cdb\u578b\u65b9\u6cd5 \u2014\u2014 \u6ce8\u610f\u8fd9\u91cc <code>&lt;&gt;</code> \u8981\u5199\u5230\u65b9\u6cd5\u540d\u5b57\u524d\u9762</li> </ul>"},{"location":"languages/java/basic/tools_and_algorithm/#_10","title":"\u5bf9\u7c7b\u578b\u7684\u9650\u5b9a","text":"<ul> <li> <p>\u4f7f\u7528 <code>?</code>\uff0c\u8868\u793a\u4efb\u610f\u7c7b\u578b\uff0c\u4f8b\u5982 <code>Collections</code> \u7684 <code>reverse</code> \u65b9\u6cd5 <pre><code>reverse(List&lt;?&gt; list)\n</code></pre></p> </li> <li> <p>\u4f7f\u7528 <code>extends</code>\uff0c\u5982 <code>Set</code> \u7684 <code>addAll</code> \u65b9\u6cd5 <pre><code>addAll(Collection&lt;? extends E&gt; col)\n</code></pre> \u5373\u7528\u5b50\u7c7b\u58f0\u660e\uff0c</p> </li> <li> <p>\u4f7f\u7528 <code>super</code>\uff0c\u5982 <code>Collections</code> \u7684 <code>fill</code> \u65b9\u6cd5 <pre><code>fill(List&lt;? super T&gt; list, T obj)\n</code></pre> \u5373\u7528 \u8d85\u7c7b \u58f0\u660e\uff0c\u4f8b\u5982\u58f0\u660e\u8fd9\u662f\u4e00\u4e2a\u6c34\u679c\u5bb9\u5668\uff0c\u4f7f\u7528\u65f6\u5019\u53ef\u4ee5\u6dfb\u52a0\u82f9\u679c\u3001\u9999\u8549\u3002</p> </li> </ul> <p>\u6ce8\uff1a\u6cdb\u578b\u4e00\u5b9a\u662f\u4e00\u4e2a \u5f15\u7528\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>Integer</code> \u4f46\u4e0d\u80fd\u4f7f\u7528 <code>int</code>\u3002</p> <p>\u6cdb\u578b\u53ef\u4ee5\u6709\u591a\u79cd \u590d\u6742 \u7684\u7ec4\u5408\uff1a <pre><code>// Arrays.sort()\npublic static &lt;T&gt; void sort(T[] a, Comparator&lt;? super T&gt; c)\n\n// Stream.map()\npublic &lt;R&gt; Stream&lt;R&gt; map(Function&lt;? super T, ? extends R&gt; mapper)\n\n// Collections.max()\npublic static &lt;T extends Object &amp; Comparable&lt;? super T&gt;&gt;T max(Collection&lt;? extends T&gt; coll)\n</code></pre></p>"},{"location":"languages/java/basic/tools_and_algorithm/#_11","title":"\u5e38\u7528\u7b97\u6cd5","text":""},{"location":"languages/java/basic/tools_and_algorithm/#_12","title":"\u904d\u5386","text":"<p>\u904d\u5386\uff08exhaust\uff09\uff0c\u4e5f\u53eb \u7a77\u4e3e\uff0c\u5373\u5728\u6709\u9650\u8303\u56f4\u5185\uff0c\u5bf9\u6240\u6709\u7684\u503c\u90fd\u8fdb\u884c\u8bd5\u9a8c\u548c\u5224\u65ad\uff0c\u4ece\u800c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\u3002</p> <p>\u904d\u5386\u7684\u57fa\u672c\u6a21\u5f0f\uff1a <pre><code>for( : ) { if(); }\n</code></pre> \u7ecf\u5178\u95ee\u9898\uff1a\u627e\u52301000\u4ee5\u5185\u7684\u201c\u6c34\u4ed9\u82b1\u6570\u201d\uff08\u5b9a\u4e49\uff1a\u6570\u503c\u7b49\u4e8e\u5404\u4f4d\u6570\u7684\u7acb\u65b9\u548c\uff09</p>"},{"location":"languages/java/basic/tools_and_algorithm/#_13","title":"\u8fed\u4ee3","text":"<p>\u8fed\u4ee3\uff08iteration\uff09\uff0c\u6307\u591a\u6b21\u4f7f\u7528\u540c\u4e00\u516c\u5f0f\u8fdb\u884c\u8ba1\u7b97\uff0c\u6bcf\u6b21\u5c06\u7ed3\u679c\u518d\u4ee3\u5165\u516c\u5f0f\uff0c\u4ece\u800c\u9010\u6b65\u903c\u8fd1\u7cbe\u786e\u89e3\u3002</p> <p>\u8fed\u4ee3\u7684\u57fa\u672c\u6a21\u5f0f\uff1a <pre><code>while( end() ) {\n    x = f(x);\n}\n</code></pre> \u7ecf\u5178\u95ee\u9898\uff1a\u4e8c\u5206\u6cd5\u6c42\u5e73\u65b9\u6839</p>"},{"location":"languages/java/basic/tools_and_algorithm/#_14","title":"\u9012\u5f52","text":"<p>\u9012\u5f52\uff08recursion\uff09\uff0c\u5c31\u662f\u4e00\u4e2a\u8fc7\u7a0b\u8c03\u7528\u8be5\u8fc7\u7a0b\u672c\u8eab\u3002\u4e00\u822c\u8fc7\u7a0b\u7684\u6267\u884c\u9700\u8981\u7528\u5230\u5b83\u7684 \u4e0a\u4e00\u6b65\u6216\u51e0\u6b65\u7684\u7ed3\u679c\u3002</p> <p>\u9012\u5f52\u7684\u57fa\u672c\u6a21\u5f0f\uff1a <pre><code>f(n) {\n    f(n - 1)\n}\n</code></pre> \u7ecf\u5178\u6848\u4f8b\uff1a\u9012\u5f52\u6c42\u9636\u4e58</p>"},{"location":"languages/java/basic/tools_and_algorithm/#_15","title":"\u56de\u6eaf","text":"<p>\u56de\u6eaf\uff08back-track\uff09\uff0c\u6216\u79f0 \u8bd5\u63a2\u56de\u6eaf\u6cd5\uff0c\u5148\u9009\u62e9\u67d0\u4e00\u53ef\u80fd\u7684\u7ebf\u7d22\u8fdb\u884c\u8bd5\u63a2\uff0c\u6bcf\u4e00\u6b65\u90fd\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u5c06\u6bcf\u4e00\u65b9\u5f0f\u90fd\u4e00\u4e00\u8bd5\u63a2\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u6761\u4ef6\u5c31\u8fd4\u56de\u7ea0\u6b63\uff0c\u53cd\u590d\u8fdb\u884c\u8fd9\u79cd\u8bd5\u63a2\u518d\u8fd4\u56de\u7ea0\u6b63\uff0c\u77e5\u9053\u7684\u51fa \u5168\u90e8\u7b26\u5408\u6761\u4ef6 \u7684\u7b54\u6848\u6216\u8005 \u95ee\u9898\u65e0\u89e3 \u4e3a\u6b62\u3002</p> <p>\u56de\u6eaf\u7684\u57fa\u672c\u6a21\u5f0f\uff1a <pre><code>x++;\nif () x--;\n</code></pre> \u7ecf\u5178\u4f8b\u5b50\uff1a\u516b\u7687\u540e\u95ee\u9898</p>"},{"location":"network/sciencetific_surfing/","title":"\u79d1\u5b66\u4e0a\u7f51","text":""},{"location":"network/sciencetific_surfing/#gfw","title":"GFW","text":""},{"location":"network/sciencetific_surfing/#vpn","title":"VPN","text":""},{"location":"network/sciencetific_surfing/#socks5","title":"Socks5\u4ee3\u7406","text":""},{"location":"open_source/","title":"\u7d22\u5f15\u9875","text":""},{"location":"open_source/#_2","title":"\u6570\u636e\u5e93","text":""},{"location":"open_source/#_3","title":"\u5206\u5e03\u5f0f\u6280\u672f","text":""},{"location":"open_source/#_4","title":"\u5206\u5e03\u5f0f\u670d\u52a1","text":"<ul> <li>Dubbo</li> </ul>"},{"location":"open_source/#_5","title":"\u5206\u5e03\u5f0f\u6d88\u606f","text":"<p>\u6d88\u606f\u5373\u5f02\u6b65\u670d\u52a1</p> <ul> <li>Kafka</li> </ul>"},{"location":"open_source/#_6","title":"\u5206\u5e03\u5f0f\u8c03\u5ea6","text":"<ul> <li>ZooKeeper</li> </ul>"},{"location":"open_source/database/leveldb/","title":"LevelDB","text":"<ul> <li> <p>Github</p> </li> <li> <p>Handbook</p> </li> </ul> <p>Authors: Sanjay Ghemawat (sanjay@google.com) and Jeff Dean (jeff@google.com)</p>"},{"location":"open_source/database/leveldb/#_1","title":"\u6982\u8ff0","text":"<p>LevelDB\u662fGoogle\u7684\u5206\u5e03\u5f0f\u7ed3\u6784\u5316\u6570\u636e\u5b58\u50a8\u7cfb\u7edf BigTable \u7684\u5355\u673a\u7248\u672c\u3002BigTable\u5728 \u6570\u5343\u53f0 \u5546\u7528\u670d\u52a1\u5668\u4e0a\u7ba1\u7406 PB \u91cf\u7ea7\u6570\u636e\uff0c\u4e3aGoogle\u7f51\u9875\u7d22\u5f15\u3001\u8c37\u6b4c\u5730\u7403\u3001\u8c37\u6b4c\u91d1\u878d\u7b49\u9879\u76ee\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u670d\u52a1\u3002</p> <p>LevelDB\u7684\u5b9e\u73b0\u57fa\u4e8eLSMT\uff0c\u4e3b\u9898\u601d\u60f3\u662f\uff1a \u5c06\u6570\u636e\u9996\u5148\u66f4\u65b0\u5728\u5185\u5b58\u4e2d\uff0c\u5f53\u5185\u5b58\u4e2d\u7684\u6570\u636e\u8fbe\u5230\u4e00\u5b9a\u7684\u9608\u503c\uff0c\u5c06\u8fd9\u90e8\u5206\u6570\u636e\u771f\u6b63\u5237\u65b0\u5230\u78c1\u76d8\u6587\u4ef6\u4e2d \uff0c\u56e0\u800c\u83b7\u5f97\u6781\u9ad8\u7684\u5199\u6027\u80fd\u3002</p> <ul> <li>LevelDB\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u57fa\u4e8eLSMT\uff0c\u653e\u5f03\u90e8\u5206\u8bfb\u7684\u6027\u80fd\uff0c\u6362\u53d6\u6700\u5927\u7684\u5199\u5165\u80fd\u529b\uff1b</li> <li>\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u5224\u65ad\u6307\u5b9a\u7684key\u662f\u5426\u5728SSTable\u4e2d\uff0c\u52a0\u901f\u67e5\u627e\uff1b</li> <li>\u5185\u5b58\u6570\u636e\u5e93\u7528\u8df3\u8868\u5b9e\u73b0\uff1b</li> <li>\u7528LRUCache\u505a\u7f13\u5b58\u3002</li> </ul> <p>LevelDB\u7684\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>memtable</li> <li>immutable memtable</li> <li>log</li> <li>sstable</li> <li>manifest</li> <li>current</li> </ul>"},{"location":"open_source/database/leveldb/#_2","title":"\u80cc\u666f\u548c\u7814\u53d1\u52a8\u673a","text":""},{"location":"open_source/database/leveldb/#_3","title":"\u80cc\u666f","text":"<p>\u4ece\u786c\u4ef6\u89d2\u5ea6\u51fa\u53d1\uff0c\u51e0\u4e4e\u5bf9\u4e8e\u6240\u6709\u5b58\u50a8\u4ecb\u8d28\uff0c \u987a\u5e8f\u5b58\u50a8\u7684\u6548\u7387\u4e00\u5b9a\u6bd4\u968f\u673a\u5b58\u50a8\u66f4\u9ad8 \uff0c\u5e76\u4e14\u8981\u9ad8\u5f88\u591a\u3002\u4e0b\u56fe\u53ef\u4ee5\u76f4\u89c2\u9610\u8ff0\u4e86\u4e24\u8005\u7684\u6548\u7387\u5dee\uff0c\u5176\u4e2d\u7ea2\u8272\u90e8\u5206\u548c\u7eff\u8272\u90e8\u5206\u5206\u522b\u8868\u793a\u786c\u76d8\u968f\u673a\u8bfb\u53d6\u548c\u987a\u5e8f\u8bfb\u53d6\u7684\u541e\u5410\u91cf\uff1a</p> <p></p> <p>\u4ece\u7eb5\u5750\u6807\u53ef\u4ee5\u770b\u51fa\u4e8c\u8005\u5dee\u7684\u4e0d\u662f\u4e00\u70b9\u534a\u70b9\uff0c\u800c\u662f\u5df2\u7ecf\u6709\u6570\u91cf\u7ea7\u7684\u5dee\u8ddd\u4e86\uff0c\u800c\u4e14 \u51e0\u4e4e\u8fbe\u5230\u4e86\u4e09\u4e2a\u6570\u91cf\u7ea7 \u3002</p>"},{"location":"open_source/database/leveldb/#_4","title":"\u52a8\u673a","text":"<p>\u5982\u679c\u80fd\u591f\u53d1\u660e\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u5145\u5206\u4f7f\u7528\u987a\u5e8f\u8bfb\u5199\u7684\u6027\u80fd\u4f18\u52bf\uff0c\u81ea\u7136\u4f1a\u5927\u5927\u63d0\u9ad8\u7cfb\u7edf\u7684 IO\u80fd\u529b \u3002\u5bf9\u4e8e\u8bb8\u591a\u79d1\u6280\u516c\u53f8\u800c\u8a00\uff0c\u5c24\u5176\u662f\u5927\u6570\u636e\u516c\u53f8\uff0c\u56e0\u4e3a\u6570\u636e\u91cf\u5e26\u6765\u7684\u673a\u5668\u5f00\u9500\u7684\u8d39\u7528\u5360\u636e\u4e86\u65e5\u5e38\u652f\u51fa\u7684\u5927\u5934\u3002\u5982\u679c\u80fd\u591f\u4f18\u5316\u8fd9\u4e2a\u95ee\u9898\uff0c\u663e\u7136\u53ef\u4ee5 \u8282\u7ea6\u5927\u91cf\u7684\u8d44\u6e90 \u3002</p> <p>\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u5c06\u6240\u6709\u7684\u8bfb\u5199\u90fd\u8bbe\u8ba1\u6210 \u987a\u5e8f\u8bfb\u5199 \uff0c\u6bd4\u5982 \u65e5\u5fd7\u7cfb\u7edf \u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u518d\u8bb0\u5f55\u65e5\u5fd7\u7684\u65f6\u5019\u603b\u662f\u6dfb\u52a0\u5728\u6587\u4ef6\u672b\u5c3e\uff0c\u800c\u4e0d\u4f1a\u63d2\u5165\u5728\u6587\u4ef6\u4e2d\u95f4\u3002\u663e\u7136\u5199\u7684\u64cd\u4f5c\u662f\u987a\u5e8f\u7684\uff0c\u4f46\u5f53\u6211\u4eec\u9700\u8981\u67e5\u627e\u7684\u5185\u5bb9\u5728\u6587\u4ef6\u4e2d\u95f4\u7684\u65f6\u5019\uff0c\u987a\u5e8f\u8bfb\u9700\u8981\u8bfb\u5165\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u3002</p> <p>\u65e5\u5fd7\u7cfb\u7edf\u7684\u4e3b\u8981\u5e94\u7528\u6709\u4e24\u4e2a\uff1a</p> <ul> <li> <p>\u6570\u636e\u5e93\u7684\u65e5\u5fd7 - \u5f53\u6211\u4eec\u7528\u6570\u636e\u5e93\u6267\u884c\u5199\u5165\u6216\u8005\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u4f1a\u5c06\u6240\u6709\u53d8\u66f4\u5199\u6210log\u8bb0\u5f55\u4e0b\u4fe9\uff1b</p> </li> <li> <p>\u6d88\u606f\u7cfb\u7edf\u7684\u4e2d\u95f4\u4ef6 - \u6bd4\u5982 kafka</p> </li> </ul> <p>\u5728\u590d\u6742\u7684\u589e\u5220\u6539\u67e5\u573a\u666f\u4e2d\uff0c\u5c24\u5176\u662f\u6d89\u53ca\u5230 \u6279\u91cf\u8bfb\u5199 \u7684\u573a\u666f\uff0c\u7b80\u5355\u7684\u6587\u4ef6\u987a\u5e8f\u8bfb\u5199\u5c31\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u4e86\u3002B+\u6811\u548c\u54c8\u5e0c\u8868\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u90fd\u4f1a\u5f15\u5165\u6bd4\u8f83\u6162\u7684\u968f\u673a\u8bfb\u5199\u64cd\u4f5c\u3002\u6211\u4eec\u9700\u8981 \u5c3d\u91cf\u5c11\u7684\u968f\u673a\u8bfb\u5199 \uff0cLSMT\u727a\u7272\u4e86\u4e00\u4e9b\u8bfb\u64cd\u4f5c\u7684\u6027\u80fd\uff0c\u4fdd\u8bc1\u4e86\u5199\u64cd\u4f5c\u7684\u6027\u80fd\uff0c\u80fd\u591f\u8ba9\u6240\u6709\u64cd\u4f5c\u987a\u5e8f\u5316\uff0c\u51e0\u4e4e\u5b8c\u5168\u907f\u514d\u4e86\u968f\u673a\u8bfb\u5199\u3002</p> <p>LevelDB\u6b63\u662f\u57fa\u4e8eLSMT\u5b9e\u73b0\u7684\u3002</p>"},{"location":"open_source/database/leveldb/#lsmt","title":"LSMT","text":"<p>LSMT\u5199\u5165\u6027\u80fd\u6781\u9ad8\u7684\u539f\u7406\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5c3d\u91cf\u51cf\u5c11\u968f\u673a\u5199\u7684\u6b21\u6570\u3002\u5bf9\u4e8e\u6bcf\u6b21\u5199\u5165\u64cd\u4f5c\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u5c06\u6700\u65b0\u7684\u6570\u636e\u9a7b\u7559\u5728\u78c1\u76d8\u4e2d\uff0c\u800c\u662f\u5c06\u5176\u62c6\u5206\u6210\uff1a</p> <ul> <li> <p>\u4e00\u6b21\u65e5\u5fd7\u6587\u4ef6\u7684\u987a\u5e8f\u5199</p> </li> <li> <p>\u4e00\u6b21\u5185\u5b58\u4e2d\u6570\u636e\u7684\u63d2\u5165</p> </li> </ul>"},{"location":"open_source/database/leveldb/#sstable","title":"SSTable","text":"<p>SSTable\u7684\u5168\u79f0\u662fSorted String Table\uff0c\u672c\u8d28\u662f\u4e00\u4e2aKV\u7ed3\u6784\u987a\u5e8f\u6392\u5217\u7684\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u57fa\u672c\u7684SSTable\u5c31\u662f\u4e0a\u56fe\u4e2d\u7684\u53f3\u4fa7\u90e8\u5206\uff0c\u5373\u952e\u503c\u5bf9\u6309\u7167\u952e\u7684\u5927\u5c0f\u6392\u5e8f\uff0c\u5e76\u5b58\u50a8\u5728\u6587\u4ef6\u5f53\u4e2d\u3002\u5f53\u9700\u8981\u67e5\u627e\u67d0\u4e2a\u952e\u5bf9\u5e94\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u5c06 \u6574\u4e2a\u6587\u4ef6\u8bfb\u5165\u5185\u5b58 \uff0c\u8fdb\u884c\u67e5\u627e\u3002\u540c\u6837\uff0c\u5199\u5165\u4e5f\u662f\u5982\u6b64\uff0c\u6211\u4eec\u4f1a\u5c06\u63d2\u5165\u7684\u64cd\u4f5c\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\uff0c\u5f97\u5230\u7ed3\u679c\u4e4b\u540e\u76f4\u63a5\u8986\u76d6\u539f\u6765\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u5728\u6587\u4ef6\u5f53\u4e2d\u4fee\u6539\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u7275\u626f\u5230\u5927\u91cf\u7684\u6570\u636e\u79fb\u52a8\u3002</p> <p>\u5982\u679c\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u91cf\u8fc7\u5927\uff0c\u6211\u4eec\u9700\u8981\u53e6\u5916\u5efa\u7acb\u4e00\u4e2a \u7d22\u5f15\u6587\u4ef6 \uff0c\u5b58\u50a8\u4e0d\u540c\u7684\u952e\u5bf9\u5e94\u7684\u504f\u79fb\u91cf\uff0c\u65b9\u4fbf\u6211\u4eec\u5728\u8bfb\u53d6\u6587\u4ef6\u7684\u65f6\u5019\u5feb\u901f\u67e5\u627e\u5230\u6211\u4eec\u60f3\u8981\u67e5\u627e\u7684\u6587\u4ef6\u3002\u7d22\u5f15\u6587\u4ef6\u5373\u4e0a\u56fe\u4e2d\u7684\u5de6\u4fa7\u90e8\u5206\u3002</p> <p>\u6ce8\u610f\uff1aSSTable\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u6211\u4eec\u53ea\u4f1a\u7528\u65b0\u7684SSTable\u53bb\u8986\u76d6\u5c31\u5f97\uff0c\u800c\u4e0d\u4f1a\u5728\u539f\u672c\u7684\u57fa\u7840\u4e0a\u4fee\u6539\u3002\u56e0\u4e3a\u4fee\u6539\u4f1a\u6d89\u53ca\u5230\u968f\u673a\u8bfb\u5199\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u6240\u5e0c\u671b\u7684\u3002</p>"},{"location":"open_source/database/leveldb/#lsmt_1","title":"LSMT","text":"<p>LSMT\u7684\u5168\u79f0\u662fLog-structed Merge-tree\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u5728SSTable\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2aMemtable\uff0cMemtable\u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u4e2a \u5b58\u653e\u5728\u5185\u5b58\u4e2d\u7684\u8868\u7ed3\u6784 \u3002\u5f53\u7136\u4e5f\u4e0d\u4e00\u5b9a\u662f\u8868\u7ed3\u6784\uff0c\u4e5f\u53ef\u4ee5\u662f\u6811\u7ed3\u6784\uff0c\u53ea\u8981\u662f\u4e00\u4e2a\u652f\u6301\u5feb\u901f\u589e\u5220\u6539\u67e5\u7684\u6570\u636e\u7ed3\u6784\u5373\u53ef\uff0c\u6bd4\u5982\u7ea2\u9ed1\u6811\u3001\u8df3\u8868\u90fd\u53ef\u4ee5\u3002</p> <p>\u5728\u5176\u57fa\u7840\u4e0a\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2alog\u6587\u4ef6\uff0c\u548c\u6570\u636e\u5e93\u5f53\u4e2d\u7684log\u4e00\u6837\uff0c\u8bb0\u5f55\u6570\u636e\u53d1\u751f\u7684\u53d8\u5316\u3002\u65b9\u4fbf\u7cfb\u7edf\u6545\u969c\u6216\u6570\u636e\u4e22\u5931\u7684\u65f6\u5019\u8fdb\u884c\u627e\u56de\u3002</p> <p></p>"},{"location":"open_source/database/leveldb/#_5","title":"\u67e5\u627e","text":"<p>\u5f53\u9700\u8981\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u5148\u67e5\u627eMemtable\uff0c\u5982\u679cMemtable\u4e2d\u6ca1\u6709\u627e\u5230\uff0c\u6211\u4eec\u518d\u4e00\u4e2a\u4e00\u4e2a\u67e5\u627eSSTable\uff0c\u7531\u4e8eSSTable\u5f53\u4e2d\u7684\u6570\u636e\u4e5f\u662f\u987a\u5e8f\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u6574\u4e2a\u67e5\u627e\u7684\u8fc7\u7a0b\u4f1a\u5f88\u5feb\u3002</p> <p>\u6709\u4e00\u4e2a\u95ee\u9898 \u2014\u2014 \u7531\u4e8e SSTable\u7684\u6570\u91cf\u53ef\u80fd\u4f1a\u5f88\u591a \uff0c\u800c\u4e14\u6211\u4eec\u5fc5\u987b\u8981\u987a\u5e8f\u67e5\u627e\uff0c\u6240\u4ee5\u5f53SSTable\u6570\u91cf\u5f88\u5927\u7684\u65f6\u5019\uff0c\u4e5f\u4f1a\u5f71\u54cd\u67e5\u627e\u901f\u5ea6\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165 \u5e03\u9686\u8fc7\u6ee4\u5668 \u8fdb\u884c\u4f18\u5316\u3002\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2aSSTable\u5efa\u7acb\u4e00\u4e2a\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u67d0\u4e00\u4e2aSSTable\u5f53\u4e2d\u3002\u5e03\u9686\u8fc7\u6ee4\u5668\u5224\u65ad\u5143\u7d20\u4e0d\u5b58\u5728\u4e00\u5b9a\u662f\u51c6\u786e\u7684\uff0c\u4f46\u5224\u65ad\u5b58\u5728\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u5931\u8d25\u6982\u7387\uff0c\u4f46\u8fd9\u4e2a\u6982\u7387\u662f\u53ef\u4ee5\u63a7\u5236\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5408\u7406\u7684\u53c2\u6570\uff0c\u662f\u7684\u5931\u8bef\u7387\u8db3\u591f\u4f4e\u3002</p> <p>\u52a0\u4e0a\u4e86\u5e03\u9686\u8fc7\u6ee4\u5668\u4e4b\u540e\u7684\u67e5\u627e\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u5982\u56fe\u6240\u793a\uff0c\u90e8\u5206SSTable\u5148\u901a\u8fc7\u5e03\u9686\u8fc7\u6ee4\u5668\u5224\u65ad\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e4b\u540e\uff0c\u5728\u8fdb\u884c\u67e5\u627e\u3002</p>"},{"location":"open_source/database/leveldb/#_6","title":"\u589e\u3001\u5220\u3001\u6539","text":"<p>\u9664\u4e86\u67e5\u627e\u4e4b\u5916\u7684\u5176\u4ed6\u64cd\u4f5c\u90fd\u53d1\u751f\u5728Memtable\u4e2d\uff0c\u6bd4\u5982\u5f53\u6211\u4eec\u8981\u589e\u52a0\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u5728Memtable\u4e2d\u589e\u52a0\uff0c\u800c\u4e0d\u662f\u5199\u5165\u6587\u4ef6\u3002\u8fd9\u4e5f\u4fdd\u8bc1\u4e86\u589e\u52a0\u7684\u901f\u5ea6\u53ef\u4ee5\u975e\u5e38\u5feb\u3002</p> <p>\u4fee\u6539\u3001\u5220\u9664\u4e0e\u4e4b\u7c7b\u4f3c\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u7684\u5143\u7d20\u521a\u597d\u5728Memtable\u5f53\u4e2d\uff0c\u76f4\u63a5\u4fee\u6539\u5373\u53ef\uff1b\u5982\u679c\u4e0d\u5728Memtable\u5f53\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u8981\u5148\u67e5\u627e\u518d\u53bb\u4fee\u6539\u514d\u4e0d\u4e86\u78c1\u76d8IO\uff0c\u8fd9\u4f1a\u6d88\u8017\u5927\u91cf\u8d44\u6e90\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u5728Memtable\u4e2d\u64cd\u4f5c\uff0c\u6211\u4eec\u4f1a\u63d2\u5165\u8fd9\u4e2a\u5143\u7d20\uff0c\u6807\u8bb0\u6210\u4fee\u6539\u6216\u662f\u5220\u9664\u3002</p> <p>\u7efc\u4e0a\uff0c\u6211\u4eec \u53ef\u4ee5\u628a\u589e\u3001\u5220\u3001\u6539\u4e09\u4e2a\u64cd\u4f5c\u90fd\u770b\u6210\u662f\u6dfb\u52a0 \uff0c\u4f46\u8fd9\u4e48\u505a\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898 \u2014\u2014 Memtable\u5f53\u4e2d\u5f88\u5feb\u5c31\u4f1a\u79ef\u7d2f\u5927\u91cf\u6570\u636e \uff0c\u5185\u5b58\u8d44\u6e90\u5f88\u5bb9\u6613\u7206\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u671f\u5c06Memtable\u5f53\u4e2d\u7684\u5185\u5bb9\u5b58\u50a8\u5230\u78c1\u76d8\uff0c\u5b58\u50a8\u6210\u4e00\u4e2aSSTable\u3002\u8fd9\u4e5f\u662fSSTable\u7684\u6765\u6e90 \u2014\u2014 \u7531Memtable\u4e2d\u7684\u6570\u636e\u843d\u76d8\u4ea7\u751f\u3002</p> <p></p> <p>\u540c\u6837\uff0c\u5927\u91cf\u7684\u843d\u76d8\u64cd\u4f5c\u4e5f\u4f1a\u5bfc\u81f4 SSTable\u7684\u6570\u91cf\u66b4\u589e \uff0c\u6839\u636e\u4e0a\u8ff0\u5206\u6790\uff0cSSTable\u7684\u6570\u91cf\u589e\u52a0\u4f1a\u5f71\u54cd\u6211\u4eec\u67e5\u627e\u7684\u6548\u7387\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u50a8\u5b58\u4e86\u8bb8\u591a\u4fee\u6539\u548c\u5220\u9664\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u9700\u8981\u5427\u8fd9\u4e9b\u4fe1\u606f\u843d\u5b9e\u3002\u4e3a\u4e86\u8fbe\u6210\u8fd9\u70b9\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u671f\u5c06\u6240\u6709SSTable \u5408\u5e76\uff0c\u5e76\u5728\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u6570\u636e\u7684\u5220\u9664\u3001\u4fee\u6539\u5de5\u4f5c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e4b\u524d\u7684\u5220\u9664\u3001\u4fee\u6539\u64cd\u4f5c\u53ea\u662f\u88ab\u8bb0\u5f55\u4e86\u4e0b\u6765\uff0c\u77e5\u9053\u5408\u5e76\u7684\u65f6\u5019\u624d\u771f\u6b63\u6267\u884c\u3002</p> <p></p> <p>\u6574\u4e2a\u5f52\u5e76\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\u4e2d\u7684\u5f52\u5e76\u64cd\u4f5c\uff0c\u4f46\u9700\u8981\u5728\u6b64\u57fa\u7840\u4e0a\u52a0\u4e0a\u72b6\u6001\u7684\u5224\u65ad\u3002</p>"},{"location":"open_source/database/leveldb/#_7","title":"\u9002\u7528\u573a\u666f","text":"<p>\u603b\u7ed3\u6765\u8bf4LSMT\u9002\u7528\u4e8e \u5927\u91cf\u5199\u3001\u5c11\u91cf\u8bfb \u7684\u573a\u666f\u3002</p> <p>\u5bf9\u6bd4B+\u6811\uff0c\u5728B+\u6811\u4e2d\uff0c\u6211\u4eec\u4e3a\u4e86\u80fd\u591f\u5feb\u901f\u8bfb\u53d6\u800c\u4f7f\u7528\u4e86\u591a\u8def\u5e73\u8861\u6811\uff0c\u8fd9\u6837\u53ef\u4ee5\u8fc5\u901f\u627e\u5230\u5bf9\u5e94key\u7684\u8282\u70b9\uff0c\u4e4b\u540e\u53ea\u9700\u8981\u8bfb\u5165\u8282\u70b9\u4e2d\u7684\u5185\u5bb9\u5373\u53ef\u3002\u4f46\u5e73\u8861\u6811\u9700\u8981\u4fdd\u6301\u5176\u7279\u6709\u7684\u6027\u8d28\uff0c\u5bfc\u81f4\u6211\u4eec\u5728\u5199\u5165\u6570\u636e\u7684\u65f6\u5019\u9700\u8981 \u5bf9\u6811\u7684\u7ed3\u6784\u8fdb\u884c\u8c03\u6574\u548c\u53d8\u52a8 \uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u5230\u591a\u6b21\u6587\u4ef6\u7684\u968f\u673a\u8bfb\u5199\u3002\u5f53\u6570\u636e\u91cf\u5f88\u5927\u7684\u65f6\u5019\u4f1a\u5e26\u6765\u5de8\u5927\u5f00\u9500\u3002</p> <p>LSMT\u7684\u8bfb\u53d6\u901f\u5ea6\u76f8\u6bd4B+\u6811\u8981\u4f4e\uff0c\u4f46\u5bf9\u4e8e\u5927\u6570\u636e\u7684\u5199\u5165\u652f\u6301\u66f4\u597d\u3002\u8bb8\u591a\u5927\u6570\u636e\u573a\u666f\u5bf9\u7cfb\u7edfIO\u6709\u7740\u5f88\u9ad8\u7684\u8981\u6c42\uff0c\u6bd4\u5982\u6d88\u606f\u7cfb\u7edf\u3001\u5206\u5e03\u5f0f\u5b58\u50a8\u7b49\u3002\u8fd9\u4e2a\u65f6\u5019B+\u6811\u5c31\u6709\u4e9b\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u76f8\u53cd\u5730\uff0c\u5728\u5bf9\u67e5\u627e\u6548\u7387\u8981\u6c42\u5f88\u9ad8\u7684\u573a\u666f\u4e0b\uff0cLSMT\u5c31\u4e0d\u5408\u9002\u4e86\u3002</p>"},{"location":"open_source/database/leveldb/#_8","title":"\u4e3b\u4f53\u67b6\u6784","text":""},{"location":"open_source/database/leveldb/#_9","title":"\u8bbe\u8ba1\u4eae\u70b9","text":""},{"location":"open_source/database/leveldb/#_10","title":"\u53c2\u8003\u6587\u732e","text":"<p>[1] leveldb-handbook</p> <p>[2] TechFlow\u8bb2\u89e3LSMT</p>"},{"location":"open_source/database/redius/","title":"Redius","text":"<p>Home page</p> <p>Github</p>"},{"location":"open_source/distributed_system/message/","title":"\u5206\u5e03\u5f0f\u6d88\u606f","text":""},{"location":"open_source/distributed_system/message/#kafka","title":"Kafka","text":""},{"location":"open_source/distributed_system/rpc/","title":"\u5206\u5e03\u5f0f\u670d\u52a1","text":""},{"location":"open_source/distributed_system/rpc/#dubbo","title":"Dubbo","text":""},{"location":"open_source/distributed_system/schedule/","title":"\u5206\u5e03\u5f0f\u8c03\u5ea6","text":""},{"location":"open_source/distributed_system/schedule/#zookeeper","title":"ZooKeeper","text":""},{"location":"open_source/traffic_control/sentinel/","title":"Sentinel","text":"<p>Java \u4e3b\u9879\u76ee</p> <p>C++ \u539f\u751f\u7248\u672c</p>"},{"location":"open_source/traffic_control/sentinel/#_1","title":"\u662f\u4ec0\u4e48","text":"<p>\u968f\u7740\u5fae\u670d\u52a1\u7684\u6d41\u884c\uff0c\u670d\u52a1\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u7a33\u5b9a\u6027\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002Sentinel \u662f\u9762\u5411\u5206\u5e03\u5f0f\u670d\u52a1\u67b6\u6784\u7684\u6d41\u91cf\u63a7\u5236\u7ec4\u4ef6\uff0c\u4e3b\u8981\u4ee5\u6d41\u91cf\u4e3a\u5207\u5165\u70b9\uff0c\u4ece\u9650\u6d41\u3001\u6d41\u91cf\u6574\u5f62\u3001\u7194\u65ad\u964d\u7ea7\u3001\u7cfb\u7edf\u8d1f\u8f7d\u4fdd\u62a4\u3001\u70ed\u70b9\u9632\u62a4\u7b49\u591a\u4e2a\u7ef4\u5ea6\u6765\u5e2e\u52a9\u5f00\u53d1\u8005\u4fdd\u969c\u5fae\u670d\u52a1\u7684\u7a33\u5b9a\u6027\u3002</p>"},{"location":"operating_system/","title":"\u6982\u8ff0","text":""},{"location":"operating_system/#_2","title":"\u5b66\u4e60\u64cd\u4f5c\u7cfb\u7edf\u7684\u76ee\u7684","text":"<p>\u4ece\u670d\u52a1\u7aef\u7a0b\u5e8f\u5458\u7684\u89d2\u5ea6\uff0c\u4ece\u5b9e\u7528\u4e3b\u4e49\uff08pragmatic\uff09\u7684\u7acb\u573a\u51fa\u53d1\u3002\u5b66\u4e60\u64cd\u4f5c\u7cfb\u7edf\u7684\u76ee\u7684\uff0c\u4e0d\u662f\u8ba9\u4f60\u53bb\u53d1\u660e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u6253\u8d25Linux\uff1b\u4e5f\u4e0d\u662f\u6210\u4e3a\u5185\u6838\u5f00\u53d1\u4eba\u5458\uff1b\u800c\u662f\u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u7528\u6237\u6001\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u600e\u6837\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4f5c\u4e3a\u7a0b\u5e8f\u5458\u5e94\u8be5\u5982\u4f55\u624d\u80fd\u5145\u5206\u5229\u7528\u597d\u8fd9\u4e2a\u73af\u5883\uff0c\u54ea\u4e9b\u505a\u6cd5\u662f\u6709\u76ca\u7684\uff0c\u54ea\u4e9b\u505a\u6cd5\u662f\u65e0\u7528\u529f\uff0c\u54ea\u4e9b\u5219\u662f\u5e2e\u5012\u5fd9\u3002 \u2014\u2014\u9648\u7855</p>"},{"location":"operating_system/basic/memory_management/","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6267\u884c\u7a0b\u5e8f\u3002\u5728\u6267\u884c\u65f6\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u673a\u5668\u8bbf\u95ee\u6570\u636e\u5e94\u8be5\u81f3\u5c11\u90e8\u5206\u5728\u5185\u5b58\u91cc\u3002</p> <p>\u4e3a\u4e86\u63d0\u9ad8CPU\u7684\u5229\u7528\u7387\u548c\u54cd\u5e94\u7528\u6237\u7684\u901f\u5ea6\uff0c\u901a\u7528\u8ba1\u7b97\u673a\u5728\u5185\u5b58\u91cc\u5fc5\u987b\u4fdd\u7559\u591a\u4e2a\u8fdb\u7a0b\u3002\u5185\u5b58\u7ba1\u7406\u65b9\u6848\u6709\u5f88\u591a\uff0c\u91c7\u7528\u7684\u65b9\u6cd5\u4e5f\u4e0d\u540c\uff1b\u6bcf\u4e2a\u7b97\u6cd5\u7684\u6709\u6548\u6027\u53d6\u51b3\u4e8e\u7279\u5b9a\u7684\u60c5\u51b5\u3002\u7cfb\u7edf\u5185\u5b58\u7ba1\u7406\u65b9\u6848\u7684\u9009\u62e9\u53d6\u51b3\u4e8e\u5f88\u591a\u56e0\u7d20\uff0c\u7279\u522b\u662f\u7cfb\u7edf\u7684\u786c\u4ef6\u8bbe\u8ba1\u3002\u5927\u591a\u6570\u7b97\u6cd5\u90fd\u9700\u8981\u786c\u4ef6\u652f\u6301\u3002</p>"},{"location":"operating_system/basic/memory_management/#_2","title":"\u5185\u5b58\u7ba1\u7406\u7b56\u7565","text":"<p>\u4e00\u7ec4\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2aCPU\u3002\u6b63\u662f\u7531\u4e8eCPU\u8c03\u5ea6\uff0c\u63d0\u9ad8\u4e86CPU\u7684\u5229\u7528\u7387\u548c\u8ba1\u7b97\u673a\u54cd\u5e94\u7528\u6237\u7684\u901f\u5ea6\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u5b9e\u73b0\u6027\u80fd\u7684\u6539\u8fdb\uff0c\u5e94\u5c06\u591a\u4e2a\u7a0b\u5e8f\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5fc5\u987b\u5171\u4eab\u5185\u5b58\u3002</p> <p>\u8fd9\u4e00\u90e8\u5206\u8ba8\u8bba\u5185\u5b58\u7684\u5404\u79cd\u7ba1\u7406\u65b9\u6cd5\u3002\u5185\u5b58\u7ba1\u7406\u7b97\u6cd5\u6709\u5f88\u591a\uff1a\u4ece\u539f\u59cb\u7684\u88f8\u673a\u65b9\u6cd5\uff0c\u5230\u5206\u9875\u548c\u5206\u6bb5\u7684\u65b9\u6cd5\u3002\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6709\u5404\u81ea\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\u3002\u4e3a\u7279\u5b9a\u7cfb\u7edf\u9009\u62e9\u5185\u5b58\u7ba1\u7406\u65b9\u6cd5\u53d6\u51b3\u4e8e\u5f88\u591a\u56e0\u7d20\uff0c\u7279\u522b\u662f\u7cfb\u7edf\u7684\u786c\u4ef6\u8bbe\u8ba1\u3002\u6b63\u5982\u5c06\u4f1a\u770b\u5230\uff0c\u8bb8\u591a\u7b97\u6cd5\u90fd\u9700\u8981\u786c\u4ef6\u652f\u6301\uff0c\u5bfc\u81f4\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u7ba1\u7406\u548c\u786c\u4ef6\u7684\u7d27\u5bc6\u7ed3\u5408\u3002</p>"},{"location":"operating_system/basic/memory_management/#_3","title":"\u80cc\u666f","text":"<p>\u5185\u5b58\u662f\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684\u6838\u5fc3\u3002\u5185\u5b58\u7531\u4e00\u4e2a\u5f88\u5927\u7684\u5b57\u8282\u6570\u7ec4\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b57\u8282\u90fd\u6709\u5404\u81ea\u7684\u5730\u5740\u3002CPU\u6839\u636e\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u503c\u4ece\u5185\u5b58\u4e2d\u63d0\u53d6\u6307\u4ee4\uff0c\u8fd9\u4e9b\u6307\u4ee4\u53ef\u80fd\u5f15\u8d77\u5bf9\u7279\u5b9a\u5185\u5b58\u5730\u5740\u7684\u989d\u5916\u52a0\u8f7d\u4e0e\u5b58\u50a8\u3002</p> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a\u5178\u578b\u7684\u6307\u4ee4\u6267\u884c\u5468\u671f\uff0c\u9996\u5148\u4ece\u5185\u5b58\u8bfb\u53d6\u6307\u4ee4\u3002\u63a5\u7740\uff0c\u8be5\u6307\u4ee4\u4f1a\u88ab\u89e3\u7801\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u64cd\u4f5c\u6570\u3002\u5728\u6307\u4ee4\u5bf9\u64cd\u4f5c\u6570\u6267\u884c\u540e\uff0c\u5b83\u7684\u7ed3\u679c\u53ef\u80fd\u5b58\u56de\u5230\u5185\u5b58\u3002\u5185\u5b58\u5355\u5143\u53ea\u770b\u5230\u5730\u5740\u6d41\uff0c\u800c\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e9b\u5730\u5740\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff08\u7531\u6307\u4ee4\u8ba1\u6570\u5668\u3001\u7d22\u5f15\u3001\u95f4\u63a5\u5bfb\u5740\u3001\u5e38\u4eae\u5730\u5740\u7b49\uff09\u6216\u5b83\u4eec\u662f\u4ec0\u4e48\uff08\u6307\u4ee4\u6216\u6570\u636e\uff09\u7684\u5730\u5740\u3002\u76f8\u5e94\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u5185\u5b58\u5730\u5740\u662f\u5982\u4f55\u7531\u7a0b\u5e8f\u4ea7\u751f\u7684\uff0c\u800c\u53ea\u662f\u5bf9\u8fd0\u884c\u7a0b\u5e8f\u4ea7\u751f\u7684\u7684\u5185\u5b58\u5730\u5740\u5e8f\u5217\u611f\u5174\u8da3\u3002</p>"},{"location":"operating_system/basic/memory_management/#_4","title":"\u57fa\u672c\u786c\u4ef6","text":"<p>CPU\u5185\u7f6e\u5bc4\u5b58\u5668\u901a\u5e38\u53ef\u4ee5\u5728\u4e00\u4e2aCPU\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210\u8bbf\u95ee\u3002\u4f46\u5185\u5b58\u8bbf\u95ee\u53ef\u80fd\u9700\u8981\u591a\u4e2aCPU\u65f6\u949f\u5468\u671f\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u6ca1\u6709\u6570\u636e\u4ee5\u4fbf\u5b8c\u6210\u6b63\u5728\u6267\u884c\u7684\u6307\u4ee4\uff0cCPU\u901a\u5e38\u9700\u8981 \u6682\u505c\uff08stall\uff09\u3002\u8865\u6551\u63aa\u65bd\u662f\u5728CPU\u4e0e\u5185\u5b58\u4e4b\u95f4\u2014\u2014\u901a\u5e38\u662f\u5728CPU\u82af\u7247\u4e0a\u2014\u2014\u589e\u52a0 \u9ad8\u901f\u7f13\u5b58\uff08cache\uff09\u3002\u4e3a\u7ba1\u7406CPU\u5185\u7f6e\u7684\u7f13\u5b58\uff0c\u786c\u4ef6\u52a0\u5feb\u5185\u5b58\u8bbf\u95ee\uff0c\u65e0\u9700\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u7684\u63a7\u5236\u3002</p> <p>\u51fa\u4e8e\u4fdd\u62a4\uff0c\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u5355\u72ec\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u57fa\u5730\u5740\u5bc4\u5b58\u5668\uff08base register\uff09\u542b\u6709\u6700\u5c0f\u7684\u5408\u6cd5\u7684\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u754c\u5730\u5740\u5bc4\u5b58\u5668\uff08limit register\uff09\u6307\u5b9a\u4e86\u8303\u56f4\u7684\u5927\u5c0f\u3002\u5982\u4e0b\u5982\u6240\u793a\uff1a</p> <p> \u57fa\u5730\u5740\u5bc4\u5b58\u5668\u548c\u63a5\u7ebf\u5730\u5740\u5bc4\u5b58\u5668\u5b9a\u4e49\u903b\u8f91\u5730\u5740\u7a7a\u95f4</p> <p>\u5185\u5b58\u7a7a\u95f4\u4fdd\u62a4\u7684\u5b9e\u73b0\u662f\u901a\u8fc7CPU\u786c\u4ef6\u5bf9\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u4ea7\u751f\u7684\u5730\u5740\u4e0e\u5bc4\u5b58\u5668\u7684\u5730\u5740\u8fdb\u884c\u6bd4\u8f83\u6765\u5b8c\u6210\u7684\u3002\u5f53\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u6267\u884c\u7684\u7a0b\u5e8f\u8bd5\u56fe\u8bbf\u95ee\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u6216\u5176\u4ed6\u7528\u6237\u5185\u5b58\u65f6\uff0c\u4f1a\u9677\u5165\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u5219\u5c06\u5176\u4f5c\u4e3a\u81f4\u547d\u9519\u8bef\u6765\u5904\u7406\uff0c\u5982\u4e0b\u5982\u6240\u793a\u3002\u8fd9\u79cd\u65b9\u6848\u9632\u6b62\u7528\u6237\u7a0b\u5e8f\u65e0\u610f\u6216\u6545\u610f\u4fee\u6539\u64cd\u4f5c\u7cfb\u7edf\u6216\u5176\u4ed6\u7528\u6237\u7684\u4ee3\u7801\u6216\u6570\u636e\u7ed3\u6784\u3002</p> <p> \u91c7\u7528\u57fa\u5730\u5740\u5bc4\u5b58\u5668\u548c\u63a5\u7ebf\u5730\u5740\u5bc4\u5b58\u5668\u7684\u786c\u4ef6\u5730\u5740\u4fdd\u62a4</p> <p>\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u6267\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u65e0\u9650\u5236\u5730\u8bbf\u95ee\u64cd\u4f5c\u7cfb\u7edf\u53ca\u7528\u6237\u7684\u5185\u5b58\u3002\u8fd9\u9879\u89c4\u5b9a\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\uff1a\u52a0\u8f7d\u7528\u6237\u7a0b\u5e8f\u5230\u7528\u6237\u5185\u5b58\uff0c\u8f6c\u50a8\u51fa\u73b0\u9519\u8bef\u7684\u7a0b\u5e8f\uff0c\u8bbf\u95ee\u548c\u4fee\u6539\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\uff0c\u6267\u884c\u7528\u6237\u5185\u5b58\u7684I/O\uff0c\u4ee5\u53ca\u63d0\u4f9b\u8bb8\u591a\u5176\u4ed6\u670d\u52a1\u7b49\u3002\u4f8b\u5982\uff0c\u591a\u4efb\u52a1\u7cfb\u7edf\u7684\u64cd\u4f5c\u7cfb\u7edf\u5728\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\uff0c\u5e94\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u5b58\u8d37\u5185\u5b58\uff0c\u518d\u4ece\u5185\u5b58\u4e2d\u8c03\u5165\u4e0b\u4e2a\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u5230\u5bc4\u5b58\u5668\u3002</p>"},{"location":"operating_system/basic/memory_management/#_5","title":"\u5730\u5740\u7ed1\u5b9a","text":"<p>\u5728\u78c1\u76d8\u4e0a\u7b49\u5f85\u8c03\u5230\u5185\u5b58\u4ee5\u4fbf\u6267\u884c\u7684\u8fdb\u7a0b\u5f62\u6210 \u8f93\u5165\u961f\u5217\uff08input queue\uff09\u3002</p> <p>\u7528\u6237\u7a0b\u5e8f\u5728\u6267\u884c\u524d\u4e00\u822c\u4f1a\u7ecf\u8fc7\u82e5\u5e72\u6b65\u9aa4\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p> \u4e00\u4e2a\u7528\u6237\u7a0b\u5e8f\u7684\u591a\u6b65\u9aa4\u5904\u7406</p> <p>\u901a\u5e38\uff0c\u6570\u636e \u7ed1\u5b9a\uff08bind\uff09\u5230\u5b58\u50a8\u5668\u5730\u5740\u53ef\u5728\u6cbf\u9014\u7684\u7684\u4efb\u4f55\u4e00\u6b65\u8fdb\u884c\uff1a</p> <ul> <li>\u7f16\u8bd1\u65f6\uff08compile time\uff09\uff1a\u5982\u679c\u5728\u7f16\u8bd1\u65f6\u5c31\u53ef\u4ee5\u77e5\u9053\u8fdb\u7a0b\u5728\u5185\u5b58\u4e2d\u7684\u9a7b\u7559\u5730\u5740\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u751f\u6210 \u7edd\u5bf9\u4ee3\u7801\uff08absolute code\uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4e8b\u5148\u77e5\u9053\u7528\u6237\u8fdb\u7a0b\u9a7b\u7559\u5728\u5185\u5b58\u5730\u5740 R \u5904\uff0c\u90a3\u4e48\u751f\u6210\u7684\u7f16\u8bd1\u4ee3\u7801\u5c31\u53ef\u4ee5\u4ece\u8be5\u4f4d\u7f6e\u5f00\u59cb\u5e76\u5411\u540e\u5ef6\u4f38\u3002\u5982\u679c\u5c06\u6765\u5f00\u59cb\u5730\u5740\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u91cd\u65b0\u7f16\u8bd1\u4ee3\u7801\u3002MS-DOS\u7684.COM\u683c\u5f0f\u7684\u7a0b\u5e8f\u5c31\u662f\u5728\u7f16\u8bd1\u65f6\u7ed1\u5b9a\u6210\u7edd\u5bf9\u4ee3\u7801\u7684\u3002</li> <li>\u52a0\u8f7d\u65f6\uff08load time\uff09\uff1a\u5982\u679c\u5728\u7f16\u8bd1\u65f6\u5e76\u4e0d\u77e5\u9053\u8fdb\u7a0b\u5c06\u9a7b\u7559\u5728\u4f55\u5904\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5c31\u5e94\u8be5\u751f\u6210 \u53ef\u91cd\u5b9a\u4f4d\u4ee3\u7801\uff08relocatable code\uff09\u3002\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6700\u540e\u7ed1\u5b9a\u4f1a\u5ef6\u8fdf\u5230\u52a0\u8f7d\u65f6\u624d\u8fdb\u884c\u3002\u5982\u679c\u5f00\u59cb\u5730\u5740\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u7528\u6237\u4ee3\u7801\u5df2\u5408\u5e76\u66f4\u6539\u7684\u503c\u3002</li> <li>\u6267\u884c\u65f6\uff08runtime time\uff09\u5982\u679c\u8fdb\u7a0b\u5728\u6267\u884c\u65f6\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5185\u5b58\u6bb5\u79fb\u5230\u53e6\u4e00\u4e2a\u5185\u5b58\u6bb5\uff0c\u90a3\u4e48\u7ed1\u5b9a\u5e94\u5ef6\u8fdf\u5230\u6267\u884c\u65f6\u624d\u8fdb\u884c\u3002\u5982\u4e0b\u8282\u6240\u5c5e\uff0c\u91c7\u7528\u8fd9\u79cd\u65b9\u6848\u9700\u8981\u7279\u5b9a\u786c\u4ef6\u652f\u6301\u3002\u5927\u591a\u6570\u7684\u901a\u7528\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002</li> </ul>"},{"location":"operating_system/basic/memory_management/#_6","title":"\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u548c\u7269\u7406\u5730\u5740\u7a7a\u95f4","text":"<p>CPU\u751f\u6210\u7684\u5730\u5740\u901a\u5e38\u79f0\u4e3a \u903b\u8f91\u5730\u5740\uff08logical address\uff09\uff0c\u800c\u5185\u5b58\u5355\u5143\u770b\u5230\u7684\u5730\u5740\uff08\u5373\u52a0\u8f7d\u5230 \u5185\u5b58\u5730\u5740\u5bc4\u5b58\u5668\uff08memory-address register\uff09\u7684\u5730\u5740\uff09\u901a\u5e38\u79f0\u4e3a \u7269\u7406\u5730\u5740\uff08physical address\uff09\u3002</p> <p>\u7f16\u8bd1\u65f6\u548c\u52a0\u8f7d\u65f6\u7684\u5730\u5740\u7ed1\u5b9a\u65b9\u6cd5\u751f\u6210\u76f8\u540c\u7684\u903b\u8f91\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u3002\u7136\u800c\uff0c\u6267\u884c\u65f6\u7684\u5730\u5740\u7ed1\u5b9a\u65b9\u6848\u751f\u6210\u4e0d\u540c\u7684\u903b\u8f91\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u5e38\u79f0\u903b\u8f91\u5730\u5740\u4e3a \u865a\u62df\u5730\u5740\uff08virtual address\uff09\u3002\u5728 \u57fa\u7840\u68b3\u7406 \u90e8\u5206\u6211\u4eec\u5bf9 \u903b\u8f91\u5730\u5740 \u548c \u865a\u62df\u5730\u5740 \u4e0d\u52a0\u533a\u5206\u3002\u6709\u7a0b\u5e8f\u751f\u6210\u7684\u903b\u8f91\u5730\u5740\u96c6\u5408\u79f0\u4e3a \u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff08logical address space\uff09\uff0c\u8fd9\u4e9b\u903b\u8f91\u5730\u5740\u5bf9\u5e94\u7684\u6240\u6709\u7269\u7406\u5730\u5740\u96c6\u5408\u79f0\u4e3a \u7269\u7406\u5730\u5740\u7a7a\u95f4\uff08physical address space\uff09\u3002</p> <p>\u4ece\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u8fd0\u884c\u65f6\u6620\u5c04\u662f\u7531 \u5185\u5b58\u7ba1\u7406\u5355\u5143\uff08Memory-Management Unit\uff0cMMU\uff09\u7684\u786c\u4ef6\u8bbe\u5907\u6765\u5b8c\u6210\u3002\u6709\u591a\u79cd\u65b9\u6848\u6765\u5b8c\u6210\u8fd9\u79cd\u6620\u5c04\uff0c\u8fd9\u91cc\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u6848\u4e3a\u4f8b\uff08\u4e5f\u662f\u524d\u8ff0\u57fa\u5730\u5740\u5bc4\u5b58\u5668\u65b9\u6848\u7684\u63a8\u5e7f\uff09\u3002\u57fa\u5730\u5740\u5bc4\u5b58\u5668\u8fd9\u91cc\u79f0\u4e3a \u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668\uff08relocation register\uff09\u3002</p> <p> \u4f7f\u7528\u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668\u7684\u52a8\u6001\u91cd\u5b9a\u4f4d</p>"},{"location":"operating_system/basic/memory_management/#_7","title":"\u52a8\u6001\u52a0\u8f7d","text":"<p>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6240\u6709\u6570\u636e\u90fd\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5219\u8fdb\u7a0b\u7684\u5927\u5c0f\u5c06\u53d7\u9650\u4e8e\u5185\u5b58\u7684\u5927\u5c0f\u3002\u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684\u5185\u5b58\u7a7a\u95f4\u5229\u7528\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528 \u52a8\u6001\u52a0\u8f7d\uff08dynamic loading\uff09\u3002</p>"},{"location":"operating_system/basic/memory_management/#_8","title":"\u52a8\u6001\u94fe\u63a5\u4e0e\u5171\u4eab\u5e93","text":"<p>\u52a8\u6001\u94fe\u63a5\u5e93\uff08dynamically linked library\uff09\u4e3a\u7cfb\u7edf\u5e93\uff0c\u53ef\u94fe\u63a5\u5230\u7528\u6237\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u8fd0\u884c\u3002\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ea\u652f\u6301 \u9759\u6001\u94fe\u63a5\uff08static linking\uff09\uff0c\u5b83\u7684\u7cfb\u7edf\u5e93\u4e0e\u5176\u4ed6\u76ee\u6807\u6a21\u5757\u4e00\u6837\uff0c\u901a\u8fc7\u52a0\u8f7d\u7a0b\u9700\uff0c\u88ab\u5408\u5e76\u5230\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u6620\u50cf\u3002\u52a8\u6001\u94fe\u63a5\u7c7b\u4f3c\u4e8e\u52a8\u6001\u52a0\u8f7d\u3002\u8fd9\u91cc\uff0c\u4e0d\u662f\u52a0\u8f7d\u800c\u662f\u8fde\u63a5\uff0c\u4f1a\u5ef6\u8fdf\u5230\u8fd0\u884c\u65f6\u3002\u8fd9\u79cd\u529f\u80fd\u901a\u5e38\u7528\u4e8e\u7cfb\u7edf\u5e93\uff0c\u5982\u8bed\u8a00\u7684\u5b50\u7a0b\u5e8f\u5e93\u3002\u6ca1\u6709\u8fd9\u79cd\u529f\u80fd\uff0c\u7cfb\u7edf\u5185\u7684\u6240\u6709\u7a0b\u5e8f\u90fd\u9700\u8981\u4e00\u4efd\u8bed\u8a00\u5e93\u7684\u526f\u672c\uff08\u6216\u81f3\u5c11\u90a3\u4e9b\u88ab\u7a0b\u5e8f\u6240\u5f15\u7528\u7684\u5b50\u7a0b\u5e8f\uff09\u3002\u8fd9\u79cd\u8981\u6c42\u6d6a\u8d39\u4e86\u78c1\u76d8\u7a7a\u95f4\u548c\u5185\u5b58\u7a7a\u95f4\u3002</p> <p>\u5982\u679c\u6709\u52a8\u6001\u94fe\u63a5\uff0c\u5728\u4e8c\u8fdb\u5236\u6620\u50cf\u5185\uff0c\u6bcf\u4e2a\u5e93\u7a0b\u5e8f\u7684\u5f15\u7528\u90fd\u6709\u4e00\u4e2a \u5b58\u6839\uff08stub\uff09\u3002\u5b58\u6839\u662f\u4e00\u5c0f\u6bb5\u4ee3\u7801\uff0c\u7528\u6765\u6307\u51fa\u5982\u4f55\u5b9a\u4f4d\u9002\u5f53\u7684\u5185\u5b58\u9a7b\u7559\u5e93\u7a0b\u5e8f\uff0c\u6216\u8005\u5728\u7a0b\u5e8f\u4e0d\u5728\u5185\u5b58\u65f6\u5e94\u5982\u4f55\u52a0\u8f7d\u5e93\u3002</p> <p>\u52a8\u6001\u94fe\u63a5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5e93\u7684\u66f4\u65b0\uff08\u5982\u4fee\u6539bug\uff09\u3002\u7248\u672c\u4fe1\u606f\u5305\u542b\u5728\u7a0b\u5e8f\u548c\u5e93\u4e2d\u3002\u4e00\u4e2a\u54ed\u7684\u591a\u4e2a\u7248\u672c\u90fd\u53ef\u4ee5\u52a0\u8f7d\u5230\u5185\u5b58\uff0c\u7a0b\u5e8f\u5c06\u901a\u8fc7\u7248\u672c\u4fe1\u606f\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2a\u5e93\u7684\u526f\u672c\u3002\u6b21\u8981\u66f4\u6539\u4fdd\u7559\u76f8\u540c\u7684\u7248\u672c\u53f7\uff0c\u800c\u4e3b\u8981\u66f4\u6539\u5219\u589e\u52a0\u7248\u672c\u53f7\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u91c7\u7528\u65b0\u5e93\u7f16\u8bd1\u7684\u7a0b\u5e8f\u624d\u4f1a\u53d7\u65b0\u5e93\u7684\u4e0d\u517c\u5bb9\u6539\u52a8\u7684\u5f71\u54cd\u3002\u5728\u65b0\u5e93\u5b89\u88c5\u4e4b\u524d\u94fe\u63a5\u7684\u5176\u4ed6\u7a0b\u5e8f\u5c06\u7ee7\u7eed\u4f7f\u7528\u8f83\u65e7\u7684\u5e93\u3002\u8fd9\u79cd\u7cfb\u7edf\u4e5f\u79f0\u4e3a \u5171\u4eab\u5e93\uff08shared library\uff09\u3002</p> <p>\u4e0e\u52a8\u6001\u52a0\u8f7d\u4e0d\u540c\uff0c\u52a8\u6001\u94fe\u63a5\u901a\u5e38\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e2e\u52a9\u3002\u5982\u679c\u5185\u5b58\u4e2d\u7684\u8fdb\u7a0b\u662f\u5f7c\u6b64\u4fdd\u62a4\u7684\uff0c\u90a3\u4e48\u53ea\u6709\u64cd\u4f5c\u7cfb\u7edf\u624d\u53ef\u4ee5\u68c0\u67e5\u6240\u9700\u7a0b\u5e8f\u662f\u5426\u5728\u67d0\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\u5185\uff0c\u6216\u662f\u5141\u8bb8\u591a\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u540c\u6837\u7684\u5185\u5b58\u5730\u5740\u3002\u8fd9\u4e2a\u6982\u5ff5\u5c06\u5728 \u5206\u9875 \u90e8\u5206\u88ab\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u3002</p>"},{"location":"operating_system/basic/memory_management/#_9","title":"\u4ea4\u6362","text":"<p>\u8fdb\u7a0b\u5fc5\u987b\u5728\u5185\u5b58\u4e2d\u4ee5\u4fbf\u6267\u884c\u3002\u4e0d\u8fc7\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u6682\u65f6\u4ece\u5185\u5b58 \u4ea4\u6362\uff08swap\uff09\u5230 \u5907\u4efd\u5b58\u50a8\uff08backing store\uff09\uff0c\u5f53\u518d\u6b21\u6267\u884c\u65f6\u5728\u8c03\u56de\u5230\u5185\u5b58\u4e2d\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p> \u4f7f\u7528\u78c1\u76d8\u4f5c\u4e3a\u5b58\u50a8\u4ed3\u5e93\u7684\u4e24\u4e2a\u8fdb\u7a0b\u7684\u4ea4\u6362</p> <p>\u4ea4\u6362\u6709\u53ef\u80fd\u8ba9\u6240\u6709\u8fdb\u7a0b\u7684\u603b\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\u8d85\u8fc7\u771f\u5b9e\u7cfb\u7edf\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u591a\u9053\u7a0b\u5e8f\u7a0b\u5ea6\u3002</p>"},{"location":"operating_system/basic/memory_management/#_10","title":"\u6807\u51c6\u4ea4\u6362","text":"<p>\u6807\u51c6\u4ea4\u6362\u5728\u5185\u5b58\u548c\u5907\u4efd\u5b58\u50a8\u4e4b\u95f4\u79fb\u52a8\u8fdb\u7a0b\u3002\u7cfb\u7edf\u7ef4\u62a4\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684\u6240\u6709\u8fdb\u7a0b\u7684 \u5c31\u7eea\u961f\u5217\uff08ready queue\uff09\uff0c\u5b83\u4eec\u7684\u6620\u50cf\u5728\u5907\u4efd\u5b58\u50a8\u6216\u5185\u5b58\u4e2d\u3002\u5f53CPU\u51b3\u5b9a\u8981\u6267\u884c\u4e00\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u4ed6\u8c03\u7528\u5206\u6d3e\u5668\u3002\u5206\u914d\u5668\u68c0\u67e5\u961f\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u5728\u5185\u5b58\u4e2d\u3002\u5982\u679c\u4e0d\u5728\uff0c\u5e76\u4e14\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u533a\u57df\uff0c\u90a3\u4e48\u5206\u6d3e\u5668\u4f1a\u6362\u51fa\uff08swap out\uff09\u5f53\u524d\u4f4d\u4e8e\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u6362\u5165\uff08swap in\uff09\u6240\u9700\u8fdb\u7a0b\u3002\u7136\u540e\u91cd\u65b0\u52a0\u8f7d\u5bc4\u5b58\u5668\uff0c\u5e76\u5c06\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u6240\u9009\u8fdb\u7a0b\u3002</p> <p>\u8fd9\u79cd\u4ea4\u6362\u7cfb\u7edf\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u95f4\u76f8\u5f53\u9ad8\u3002\u56e0\u6b64\u77e5\u9053\u4e00\u4e2a\u8fdb\u7a0b\u771f\u6b63\u9700\u8981\u7684\u5185\u5b58\u7a7a\u95f4\u800c\u4e0d\u662f\u53ef\u80fd\u9700\u8981\u7684\u5185\u5b58\u7a7a\u95f4\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u7528\u6237\u9700\u8981\u544a\u8bc9\u7cfb\u7edf\u5b83\u7684\u5185\u5b58\u9700\u6c42\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u5177\u6709\u52a8\u6001\u5185\u5b58\u9700\u6c42\u7684\u8fdb\u7a0b\u9700\u8981\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\uff08<code>request_memory()</code>\u548c<code>release_memory()</code>\uff09\u6765\u901a\u77e5\u64cd\u4f5c\u7cfb\u7edf\u5b83\u7684\u5185\u5b58\u9700\u6c42\u53d8\u5316\u60c5\u51b5\u3002</p> <p>\u8003\u8651\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u6362\u51fa\u8fdb\u7a0b P_1 \u800c\u6362\u5165\u8fdb\u7a0b P_2\uff0c\u663e\u7136 P_1 \u5e94\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u3002\u7136\u800c\u5982\u679c\u5982\u679cI/O\u5f02\u6b65\u8bbf\u95ee\u7528\u6237\u5185\u5b58\u7684I/O\u7f13\u51b2\u533a\uff0c\u90a3\u4e48\u8be5\u8fdb\u7a0b\u5c31\u4e0d\u80fd\u6362\u51fa\u3002I/O\u64cd\u4f5c\u53ef\u80fd\u8bd5\u56fe\u4f7f\u7528\u73b0\u5728\u5df2\u5c5e\u4e8e\u8fdb\u7a0b P_2 \u7684\u5185\u5b58\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6709\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff1a</p> <ul> <li>\u4e0d\u80fd\u6362\u51fa\u7b49\u5f85\u5904\u7406I/O\u7684\u8fdb\u7a0b\uff1b</li> <li>I/O\u64cd\u4f5c\u7684\u6267\u884c\u53ea\u80fd\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u7f13\u51b2\u3002</li> </ul> <p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u53ea\u6709\u5728\u8fdb\u7a0b\u6362\u5165\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7f13\u51b2\u4e0e\u8fdb\u7a0b\u5185\u5b58\u4e4b\u95f4\u624d\u80fd\u8fdb\u884c\u6570\u636e\u8f6c\u79fb\u3002\u8fd9\u79cd \u53cc\u7f13\u51b2\uff08double buffering\uff09\u672c\u8eab\u589e\u52a0\u4e86\u5f00\u9500\u3002\u6211\u4eec\u73b0\u5728\u9700\u8981\u518d\u6b21\u590d\u5236\u6570\u636e\uff0c\u4ece\u5185\u6838\u5185\u5b58\u5230\u7528\u6237\u5185\u5b58\uff0c\u7136\u540e\u7528\u6237\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u5b83\u3002</p> <p>\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u9002\u7528\u6807\u51c6\u4ea4\u6362\uff0c\u800c\u662f\u4f7f\u7528\u4e00\u4e9b\u5e38\u89c1\u53d8\u79cd\uff1a</p> <ul> <li>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u7981\u6b62\u4ea4\u6362\uff1b\u5f53\u7a7a\u95f2\u5185\u5b58\uff08\u672a\u88ab\u64cd\u4f5c\u7cfb\u7edf\u6216\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58\uff09\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\u65f6\uff0c\u542f\u7528\u4ea4\u6362\u3002\u5f53\u7a7a\u95f2\u5185\u5b58\u6570\u91cf\u589e\u52a0\u4e86\uff0c\u5c31\u505c\u6b62\u4ea4\u6362\u3002</li> <li>\u4ea4\u6362\u8fdb\u7a0b\u7684\u90e8\u5206\uff08\u800c\u4e0d\u662f\u6574\u4e2a\u8fdb\u7a0b\uff09\uff0c\u4ee5\u964d\u4f4e\u4ea4\u6362\u65f6\u95f4\u3002</li> </ul> <p>\u901a\u5e38\u8fd9\u4e9b\u4ea4\u6362\u7684\u53d8\u79cd\u4e0e\u865a\u62df\u5185\u5b58\u4e00\u8d77\u5de5\u4f5c\u3002</p>"},{"location":"operating_system/basic/memory_management/#_11","title":"\u79fb\u52a8\u7cfb\u7edf\u7684\u4ea4\u6362","text":"<p>\u79fb\u52a8\u7cfb\u7edf\u901a\u5e38\u4e0d\u652f\u6301\u4efb\u4f55\u5f62\u5f0f\u7684\u4ea4\u6362\u3002\u79fb\u52a8\u8bbe\u5907\u901a\u5e38\u91c7\u7528\u95ea\u5b58\uff0c\u5bfc\u81f4\u7684\u7a7a\u95f4\u7ea6\u675f\u662f\u79fb\u52a8\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8005\u907f\u514d\u4ea4\u6362\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u53e6\u5916\u5176\u4ed6\u7684\u539f\u56e0\uff1a</p> <ul> <li>\u95ea\u5b58\u5199\u5165\u6b21\u6570\u7684\u9650\u5236</li> <li>\u5185\u5b58\u95ea\u5b58\u4e4b\u95f4\u541e\u5410\u91cf\u7684\u5dee\u5f02</li> </ul>"},{"location":"operating_system/basic/memory_management/#_12","title":"\u8fde\u7eed\u5185\u5b58\u5206\u914d","text":"<p>\u5185\u5b58\u901a\u5e38\u5206\u4e3a\u4e24\u4e2a\u533a\u57df\uff1a\u4e00\u4e2a\u7528\u4e8e \u9a7b\u7559\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e \u7528\u6237\u8fdb\u7a0b\u3002\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u653e\u5728\u4f4e\u5185\u5b58\u6216\u9ad8\u5185\u5b58\u3002\u5f71\u54cd\u8fd9\u4e00\u51b3\u5b9a\u7684\u4e3b\u8981\u56e0\u7d20\u662f\u4e2d\u65ad\u5411\u91cf\u7684\u4f4d\u7f6e\u3002\u7531\u4e8e\u4e2d\u65ad\u5411\u91cf\u901a\u5e38\u4f4d\u4e8e\u4f4e\u5185\u5b58\u3002\u56e0\u6b64\u5de5\u7a0b\u5e08\u4e00\u822c\u5c06\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u653e\u5728\u4f4e\u5185\u5b58\u3002</p> <p>\u9700\u8981\u8003\u8651\uff0c\u5982\u4f55\u5c06\u8f93\u5165\u961f\u5217\u4e2d\u9700\u8981\u8c03\u5165\u5185\u5b58\u7684\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002\u5728\u91c7\u7528 \u8fde\u7eed\u5185\u5b58\u5206\u914d\uff08contiguous memory allocation\uff09\u65f6\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4f4d\u4e8e\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u4e0e\u5305\u542b\u4e0b\u4e00\u8fdb\u57ce\u7684\u5185\u5b58\u76f8\u8fde\u3002</p>"},{"location":"operating_system/basic/memory_management/#_13","title":"\u5185\u5b58\u4fdd\u62a4","text":"<p>\u524d\u9762\u8ba8\u8bba\u8fc7\u57fa\u4e8e\u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668\u548c\u754c\u9650\u5bc4\u5b58\u5668\u7684\u5185\u5b58\u5730\u5740\u4fdd\u62a4\u673a\u5236\u3002\u540c\u65f6\u91cd\u5b9a\u4f4d\u65b9\u6848\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\u4ee5\u4fbf \u64cd\u4f5c\u7cfb\u7edf\u52a8\u6001\u6539\u53d8\u5176\u5927\u5c0f\u3002\u8fd9\u4e00\u7075\u6d3b\u6027\u7528\u9014\u5e7f\u6cdb\u3002\u4f8b\u5982\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u9a71\u52a8\u7a0b\u5e8f\u9700\u8981\u4ee3\u7801\u548c\u7f13\u51b2\u7a7a\u95f4\u3002\u5982\u679c\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\uff08\u6216\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u7684\u670d\u52a1\uff09\u4e0d\u5e38\u4f7f\u7528\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u5728\u5185\u5b58\u4e2d\u4fdd\u7559\u5b83\u7684\u4ee3\u7801\u548c\u6570\u636e\uff0c\u8fd9\u90e8\u5206\u7a7a\u95f4\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u76ee\u7684\u3002\u8fd9\u7c7b\u4ee3\u7801\u6709\u65f6\u79f0\u4e3a \u6682\u65f6\uff08transient\uff09\u7684\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\uff1b\u5b83\u4eec\u6839\u636e\u9700\u8981\u8c03\u5165\u8c03\u51fa\u3002</p>"},{"location":"operating_system/basic/memory_management/#_14","title":"\u5185\u5b58\u5206\u914d","text":"<p>\u6700\u7b80\u5355\u7684\u5206\u914d\u65b9\u6cd5\u4e4b\u4e00\uff0c\u5c31\u662f\u5c06\u5185\u5b58\u5206\u4e3a\u591a\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684 \u5206\u533a\uff08partition\uff09\u3002\u6bcf\u4e2a\u5206\u533a\u53ef\u4ee5\u53ea\u5305\u542b\u4e00\u4e2a\u8fdb\u7a0b\u3002\u56e0\u6b64\uff0c\u591a\u9053\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u53d7\u9650\u4e8e\u5206\u533a\u6570\u3002\u5982\u679c\u4f7f\u7528\u8fd9\u79cd \u591a\u5206\u533a\u65b9\u6cd5\uff08multiple-partition method\uff09\uff0c\u90a3\u4e48\u5f53\u4e00\u4e2a\u5206\u533a\u7a7a\u95f2\u65f6\uff0c\u5b83\u7684\u5206\u533a\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u8fdb\u7a0b\u3002</p> <p>\u5bf9\u4e8e \u53ef\u53d8\u5206\u533a\uff08variable-partition\uff09\u65b9\u6848\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u8868\uff0c\u7528\u4e8e\u8bb0\u5f55\u54ea\u4e9b\u5185\u5b58\u53ef\u7528\u548c\u54ea\u4e9b\u5185\u5b58\u5df2\u7528\u3002\u5f00\u59cb\uff0c\u6240\u6709\u5185\u5b58\u90fd\u53ef\u7528\u4e8e\u7528\u6237\u8fdb\u7a0b\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u5927\u5757\u7684\u53ef\u7528\u5185\u5b58\uff0c\u79f0\u4e3a \u5b54\uff08hole\uff09\u3002\u6700\u7ec8\uff0c\u5185\u5b58\u662f\u4e00\u4e2a\u5305\u62ec\u5404\u79cd\u5927\u5c0f\u7684\u5b54\u7684\u96c6\u5408\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u662f\u901a\u8fc7 \u52a8\u6001\u5b58\u50a8\u5206\u914d\u95ee\u9898\uff08dynamic storage-allocation problem\uff09\uff08\u6839\u636e\u4e00\u7ec4\u7a7a\u95f2\u5b54\u6765\u5206\u914d\u5927\u5c0f\u4e3a n \u7684\u8bf7\u6c42\uff09\u7684\u4e00\u4e2a\u7279\u4f8b\u3002\u8fd9\u4e2a\u95ee\u9898\u6709\u8bb8\u591a\u89e3\u51b3\u65b9\u6848\u3002\u4ece\u4e00\u7ec4\u53ef\u7528\u5b54\u4e2d\u9009\u62e9\u4e00\u4e2a\u7a7a\u95f2\u5b54\u7684\u6700\u4e3a\u5e38\u7528\u7684\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ul> <li>\u9996\u6b21\u9002\u5e94\uff08first-fit\uff09\uff1a\u5206\u914d\u9996\u4e2a\u8db3\u591f\u5927\u7684\u5b54\u3002\u67e5\u627e\u53ef\u4ee5\u4ece\u5934\u5f00\u59cb\uff0c\u4e5f\u53ef\u4ee5\u4ece\u4e0a\u6b21\u9996\u6b21\u9002\u5e94\u7ed3\u675f\u65f6\u5f00\u59cb\u3002\u4e00\u65e6\u627e\u5230\u8db3\u591f\u5927\u7684\u7a7a\u95f2\u5b54\uff0c\u5c31\u53ef\u4ee5\u505c\u6b62\u3002</li> <li>\u6700\u4f18\u9002\u5e94\uff08best-fit\uff09\uff1a\u5206\u914d\u6700\u5c0f\u7684\u8db3\u591f\u5927\u7684\u5b54\u3002\u5e94\u67e5\u627e\u6574\u4e2a\u8868\uff0c\u9664\u975e\u5217\u8868\u6309\u5927\u5c0f\u6392\u5e8f\u3002\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4ea7\u751f\u6700\u5c0f\u5269\u4f59\u5b54\u3002</li> <li>\u6700\u5dee\u9002\u5e94\uff08worst-fit\uff09\uff1a\u5206\u914d\u6700\u5927\u7684\u5b54\u3002\u540c\u6837\uff0c\u5e94\u8be5\u67e5\u627e\u6574\u4e2a\u5217\u8868\uff0c\u9664\u975e\u5217\u8868\u6309\u5927\u5c0f\u6392\u5e8f\u3002\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4ea7\u751f\u6700\u5927\u5269\u4f59\u5b54\uff0c\u8be5\u5b54\u53ef\u80fd\u6bd4\u6700\u4f18\u9002\u5e94\u4ea7\u751f\u7684\u8f83\u5c0f\u5269\u4f59\u5b54\u66f4\u4e3a\u9002\u7528\u3002</li> </ul> <p>\u6a21\u62df\u7ed3\u679c\u663e\u793a\uff0c\u9996\u6b21\u9002\u5e94\u548c\u6700\u4f18\u9002\u5e94\u5728\u6267\u884c\u65f6\u95f4\u548c\u5229\u7528\u7a7a\u95f4\u65b9\u9762\u90fd\u597d\u4e8e\u6700\u5dee\u9002\u5e94\u3002\u9996\u6b21\u9002\u5e94\u548c\u6700\u4f18\u9002\u5e94\u5728\u5229\u7528\u7a7a\u95f4\u65b9\u9762\u96be\u5206\u4f2f\u4ef2\uff0c\u4f46\u662f\u9996\u6b21\u9002\u5e94\u66f4\u5feb\u4e00\u4e9b\u3002</p>"},{"location":"operating_system/basic/memory_management/#_15","title":"\u788e\u7247","text":"<p>\u5185\u5b58\u5206\u914d\u7684\u9996\u6b21\u9002\u5e94\u548c\u6700\u4f18\u9002\u5e94\u7b97\u6cd5\u90fd\u6709 \u5916\u90e8\u788e\u7247\uff08external fragmentation\uff09\u7684\u95ee\u9898\u3002\u91c7\u7528\u9996\u6b21\u9002\u5e94\u65b9\u6cd5\u7684\u7edf\u8ba1\u8bf4\u660e\uff0c\u4e0d\u7ba1\u4f7f\u7528\u4ec0\u4e48\u4f18\u5316\uff0c\u5047\u5b9a\u6709 N \u4e2a\u53ef\u5206\u914d\u5757\uff0c\u90a3\u4e48\u53ef\u80fd\u6709 0.5N \u4e2a\u5757\u4e3a\u5916\u90e8\u788e\u7247\u3002\u5373 \\frac{1}{3} \u7684\u5185\u5b58\u53ef\u80fd\u4e0d\u80fd\u4f7f\u7528\u3002\u8fd9\u4e00\u7279\u6027\u79f0\u4e3a 50%\u89c4\u5219\uff0850-percent rule\uff09\u3002</p> <p>\u5185\u5b58\u788e\u7247\u4e5f\u53ef\u4ee5\u662f\u5916\u90e8\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u5185\u90e8\u7684\u3002\u5047\u8bbe\u6709\u4e00\u4e2a 18464 \u5b57\u8282\u5927\u5c0f\u7684\u5b54\uff0c\u5e76\u91c7\u7528\u591a\u5206\u533a\u5206\u914d\u65b9\u6848\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u8fdb\u7a0b\u9700\u8981 18462 \u5b57\u8282\u3002\u5982\u679c\u53ea\u80fd\u5206\u914d\u6240\u8981\u6c42\u7684\u5757\uff0c\u90a3\u4e48\u8fd8\u5269\u4e0b\u4e00\u4e2a 2 \u4e2a\u5b57\u8282\u7684\u5b54\u3002\u7ef4\u62a4\u8fd9\u4e2a\u5b54\u7684\u5f00\u9500\u8981\u6bd4\u5b54\u672c\u8eab\u5927\u5f88\u591a\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u6309\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\u4e3a\u5355\u4f4d\uff08\u800c\u4e0d\u662f\u5b57\u8282\uff09\u6765\u5206\u914d\u5185\u5b58\u3002\u91c7\u7528\u8fd9\u79cd\u65b9\u6848\uff0c\u8fdb\u7a0b\u6240\u5206\u914d\u7684\u5185\u5b58\u53ef\u80fd\u6bd4\u6240\u9700\u8981\u7684\u8981\u5927\u3002\u8fd9\u4e24\u4e2a\u6570\u5b57\u53ea\u5dee\u79f0\u4e3a \u5185\u90e8\u788e\u7247\uff08internal fragmentation\uff09\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u5728\u5206\u533a\u5185\u90e8\uff0c\u4f46\u53c8\u4e0d\u80fd\u7528\u3002</p> <p>\u5916\u90e8\u788e\u7247\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f \u7d27\u7f29\uff08compaction\uff09\uff0c\u5b83\u7684\u76ee\u7684\u662f\u79fb\u52a8\u5185\u5b58\u5185\u5bb9\uff0c\u4ee5\u4fbf\u5c06\u6240\u6709\u7a7a\u95f2\u7a7a\u95f4\u5408\u5e76\u6210\u4e00\u6574\u5757\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u5f00\u9500\u6602\u8d35\u3002</p> <p>\u5916\u90e8\u788e\u7247\u95ee\u9898\u7684\u53e6\u4e00\u4e2a\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u5141\u8bb8\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u662f\u4e0d\u8fde\u7eed\u7684\uff1b\u8fd9\u6837\uff0c\u53ea\u8981\u6709\u7269\u7406\u5185\u5b58\u53ef\u7528\uff0c\u5c31\u5141\u8bb8\u4e3a\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u3002\u6709\u4e24\u79cd\u4e92\u8865\u7684\u6280\u672f\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\uff1a\u5206\u6bb5\u548c\u5206\u9875\u3002\u8fd9\u4e24\u4e2a\u6280\u672f\u4e5f\u53ef\u4ee5\u7ec4\u5408\u8d77\u6765\u3002</p> <p>\u788e\u7247\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\uff1b\u5f53\u9700\u8981\u7ba1\u7406\u6570\u636e\u5757\u65f6\u5b83\u5c31\u53ef\u80fd\u51fa\u73b0\u3002\u5728\u5b58\u50a8\u7ba1\u7406\u90e8\u5206\u4e5f\u4f1a=\u6709\u8ba8\u8bba\u3002</p>"},{"location":"operating_system/basic/memory_management/#_16","title":"\u5206\u6bb5","text":"<p>\u6b63\u5982\u5df2\u7ecf\u770b\u5230\u7684\uff0c\u7528\u6237\u7684\u5185\u5b58\u89c6\u56fe\u548c\u5b9e\u9645\u7684\u7269\u7406\u5185\u5b58\u4e0d\u4e00\u6837\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8e\u7a0b\u5e8f\u5458\u7684\u5185\u5b58\u89c6\u56fe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u548c\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u6309\u7269\u7406\u6027\u8d28\u6765\u5904\u7406\u5185\u5b58\u662f\u4e0d\u65b9\u4fbf\u7684\u3002\u5982\u679c\u786c\u4ef6\u53ef\u4ee5\u63d0\u4f9b\u5185\u5b58\u673a\u5236\uff0c\u4ee5\u4fbf\u5c06\u7a0b\u5e8f\u5458\u7684\u5185\u5b58\u89c6\u56fe\u6620\u5c04\u5230\u5b9e\u9645\u7684\u7269\u7406\u5185\u5b58\uff0c\u90a3\u4e48\u4f1a\u5982\u4f55\uff1f\u8fd9\u6837\uff0c\u7cfb\u7edf\u5c06\u6709\u66f4\u591a\u7684\u81ea\u7531\u6765\u7ba1\u7406\u5185\u5b58\uff0c\u800c\u7a0b\u5e8f\u5458\u5c06\u6709\u4e00\u4e2a\u66f4\u81ea\u7136\u7684\u7f16\u7a0b\u73af\u5883\u3002\u5206\u6bb5\u63d0\u4f9b\u4e86\u8fd9\u79cd\u673a\u5236\u3002</p>"},{"location":"operating_system/basic/memory_management/#_17","title":"\u57fa\u672c\u65b9\u6cd5","text":"<p>\u5728\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u773c\u4e2d\uff0c\u5185\u5b58\u4e0d\u662f\u4e00\u4e2a\u5b57\u8282\u7684\u7ebf\u6027\u6570\u7ec4\uff0c\u6709\u7684\u5305\u542b\u6307\u4ee4\u800c\u5176\u4ed6\u7684\u5305\u542b\u6570\u636e\u3002\u4ed6\u4eec\u773c\u4e2d\u7684\u5185\u5b58\u901a\u5e38\u662f\u4e00\u7ec4\u4e0d\u540c\u957f\u5ea6\u7684\u6bb5\uff0c\u8fd9\u4e9b\u6bb5\u4e4b\u95f4\u5e76\u6ca1\u6709\u4e00\u5b9a\u7684\u987a\u5e8f\u3002</p> <p> \u7a0b\u5e8f\u5458\u773c\u4e2d\u7684\u7a0b\u5e8f</p> <p>\u7a0b\u5e8f\u5458\u773c\u4e2d\u7684\u7a0b\u5e8f\u662f\u7531\u4e3b\u7a0b\u5e8f\u52a0\u4e0a\u4e00\u7ec4\u65b9\u6cd5\u3001\u8fc7\u7a0b\u6216\u51fd\u6570\u6240\u6784\u6210\u7684\u3002\u5b83\u8fd8\u53ef\u4ee5\u5305\u62ec\u5404\u79cd\u6570\u636e\u7ed3\u6784\uff1a\u5bf9\u8c61\u3001\u6570\u7ec4\u3001\u5806\u6808\u3001\u53d8\u91cf\u7b49\u3002\u6bcf\u4e2a\u6a21\u5757\u6216\u6570\u636e\u5143\u7d20\u901a\u8fc7\u540d\u79f0\u6765\u5f15\u7528\u3002\u7a0b\u5e8f\u5458\u4f1a\u8bf4\u201c\u5806\u6808\u201d\u3001\u201c\u6570\u5b66\u5e93\u201d \u548c \u201c\u4e3b\u7a0b\u5e8f\u201d \u7b49\uff0c\u800c\u5e76\u4e0d\u5173\u5fc3\u8fd9\u4e9b\u5143\u7d20\u6240\u5728\u5185\u5b58\u7684\u4f4d\u7f6e\u3002\u5979\u4e0d\u5173\u5fc3\u5806\u6808\u5f0f\u653e\u5728\u51fd\u6570<code>Sqrt()</code>\u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\u3002\u8fd9\u4e9b\u6bb5\u7684\u957f\u5ea6\u662f\u4e0d\u540c\u7684\uff0c\u5176\u957f\u5ea6\u662f\u6709\u8fd9\u4e9b\u6bb5\u5728\u7a0b\u5e8f\u4e2d\u7684\u76ee\u7684\u51b3\u5b9a\u7684\u3002\u6bb5\u5185\u7684\u5143\u7d20\u662f\u901a\u8fc7\u5b83\u4eec\u8ddd\u79bb\u6bb5\u9996\u7684\u504f\u79fb\u6765\u6307\u5b9a\uff1a\u7a0b\u5e8f\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\u3001\u5728\u5806\u6808\u91cc\u7684\u7b2c 7 \u4e2a\u6808\u5e27\u3001\u51fd\u6570<code>Sqrt()</code>\u7684\u7b2c\u4e94\u6761\u6307\u4ee4\u3002</p> <p>\u5206\u6bb5\uff08segmentation\uff09\u5c31\u662f\u652f\u6301\u8fd9\u79cd\u7528\u6237\u89c6\u56fe\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u6848\u3002\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u662f\u7531\u4e00\u7ec4\u6bb5\u6784\u6210\u3002\u6bcf\u4e2a\u6bb5\u90fd\u6709\u540d\u79f0\u548c\u957f\u5ea6\u3002\u5730\u5740\u6307\u5b9a\u4e86\u6bb5\u540d\u79f0\u548c\u6bb5\u5185\u504f\u79fb\u3002\u56e0\u6b64\u7528\u6237\u901a\u8fc7\u4e24\u4e2a\u91cf\u6765\u6307\u5b9a\u5730\u5740\uff1a\u6bb5\u540d\u79f0\u548c\u6bb5\u504f\u79fb\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u7b80\u5355\u8d77\u89c1\uff0c\u6bb5\u662f\u7f16\u53f7\u7684\uff0c\u662f\u901a\u8fc7\u77ed\u53f7\u800c\u4e0d\u662f\u6bb5\u540d\u79f0\u6765\u5f15\u7528\u3002\u56e0\u6b64\uff0c\u903b\u8f91\u5730\u5740\u7531\u6709\u5e8f\u5bf9\uff08two tuple\uff09\u7ec4\u6210\uff1a</p> <p>&lt;\u6bb5\u53f7\uff0c\u504f\u79fb&gt;</p> <p>\u901a\u5e38\uff0c\u5728\u7f16\u8bd1\u7528\u6237\u7a0b\u5e8f\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u8f93\u5165\u7a0b\u5e8f\u6765\u81ea\u52a8\u6784\u9020\u6bb5\u3002</p> <p>\u4e00\u4e2a C \u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u521b\u5efa\u5982\u4e0b\u6bb5\uff1a</p> <ul> <li>\u4ee3\u7801</li> <li>\u5168\u5c40\u53d8\u91cf</li> <li>\u5806\uff08\u5185\u5b58\u4ece\u5806\u4e0a\u5206\u914d\uff09</li> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u4f7f\u7528\u7684\u6808</li> <li>\u6807\u51c6\u7684 C \u5e93</li> </ul> <p>\u5728\u7f16\u8bd1\u65f6\u94fe\u63a5\u7684\u5e93\u53ef\u80fd\u5206\u914d\u4e0d\u540c\u7684\u6bb5\u3002\u52a0\u8f7d\u7a0b\u5e8f\u4f1a\u88c5\u5165\u6240\u6709\u8fd9\u4e9b\u6bb5\uff0c\u5e76\u4e3a\u5b83\u4eec\u5206\u914d\u6bb5\u53f7\u3002</p>"},{"location":"operating_system/basic/memory_management/#_18","title":"\u5206\u6bb5\u786c\u4ef6","text":"<p>\u867d\u7136\u7528\u6237\u73b0\u5728\u80fd\u901a\u8fc7\u4e8c\u4f4d\u5730\u5740\u6765\u5f15\u7528\u7a0b\u5e8f\u5185\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u5b9e\u9645\u7269\u7406\u5185\u5b58\u4ecd\u7136\u662f\u4e00\u7ef4\u7684\u5b57\u8282\u5e8f\u5217\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5e94\u5b9a\u4e49\u4e00\u4e2a\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u6620\u5c04\u7528\u6237\u5b9a\u4e49\u7684\u4e8c\u7ef4\u5730\u5740\u5230\u4e00\u7ef4\u7269\u7406\u5730\u5740\u3002\u8fd9\u4e2a\u5730\u5740\u662f\u901a\u8fc7 \u6bb5\u8868\uff08segment table\uff09\u6765\u5b9e\u73b0\u7684\u3002\u6bb5\u8868\u7684\u6bcf\u4e2a\u6761\u76ee\u90fd\u6709 \u6bb5\u57fa\u5730\u5740\uff08segment base\uff09\u548c \u6bb5\u754c\u9650\uff08segment limit\uff09\u3002\u6bb5\u57fa\u5730\u5740\u5305\u542b\u8be5\u6bb5\u5728\u5185\u5b58\u4e2d\u7684\u5f00\u59cb\u7269\u7406\u5730\u5740\uff0c\u800c\u6bb5\u754c\u9650\u6307\u5b9a\u8be5\u6bb5\u7684\u957f\u5ea6\u3002</p> <p> \u5206\u6bb5\u786c\u4ef6</p> <p>\u6bb5\u8868\u7684\u4f7f\u7528\u5982\u4e0a\u56fe\u6240\u793a\u3002\u6bcf\u4e2a\u903b\u8f91\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u6bb5\u53f7 s \u548c\u6bb5\u504f\u79fb d\u3002\u6bb5\u53f7\u7528\u4f5c\u6bb5\u8868\u7684\u7d22\u5f15\uff0c\u903b\u8f91\u5730\u5740\u7684\u504f\u79fb d \u5e94\u4f4d\u4e8e 0 \u548c\u6bb5\u754c\u9650\u4e4b\u95f4\u3002\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u90a3\u4e48\u4f1a\u9677\u5165\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff08\u903b\u8f91\u5730\u5740\u8bd5\u56fe\u8bbf\u95ee\u6bb5\u7684\u5916\u9762\uff09\u3002\u5982\u679c\u504f\u79fb d \u5408\u6cd5\uff0c\u90a3\u4e48\u5c31\u4e0e\u57fa\u5740\u76f8\u52a0\u5f97\u5230\u6240\u9700\u5b57\u8282\u7684\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u56e0\u6b64\uff0c\u6bb5\u8868\u5b9e\u9645\u4e0a\u4e8c\u5143\u7ec4 \uff08\u57fa\u5740\u5bc4\u5b58\u5668\u503c\uff0c \u754c\u9650\u5bc4\u5b58\u5668\u503c\uff09 \u7684\u6570\u7ec4\u3002</p> <p> \u5206\u6bb5\u7684\u4f8b\u5b50</p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u524d\u8ff0\u4f8b\u5b50\u4e2d\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u548c\u7269\u7406\u5185\u5b58\u4e4b\u95f4\u901a\u8fc7\u6bb5\u8868\u6620\u5c04\u3002</p>"},{"location":"operating_system/basic/memory_management/#_19","title":"\u5206\u9875","text":"<p>\u5206\u6bb5\u5141\u8bb8\u8fdb\u7a0b\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\u662f\u975e\u8fde\u7eed\u7684\u3002\u5206\u9875\uff08paging\uff09\u662f\u63d0\u4f9b\u8fd9\u79cd\u4f18\u52bf\u7684\u53e6\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u65b9\u6848\u3002\u7136\u800c\uff0c\u5206\u9875\u907f\u514d\u4e86\u5916\u90e8\u788e\u7247\u548c\u7d27\u7f29\uff0c\u800c\u5206\u6bb5\u4e0d\u53ef\u4ee5\u3002\u5206\u9875\u4e5f\u907f\u514d\u4e86 \u5c06\u4e0d\u540c\u5927\u5c0f\u7684\u5185\u5b58\u5757\u5339\u914d\u5230\u4ea4\u6362\u7a7a\u95f4 \u7684\u9ebb\u70e6\u95ee\u9898\u3002\u5728\u5206\u9875\u5f15\u5165\u4e4b\u524d\u91c7\u7528\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u6848\u90fd\u6709\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u4e2a\u95ee\u9898\u51fa\u73b0\u7684\u539f\u56e0\u662f\uff1a\u5f53\u4f4d\u4e8e\u5185\u5b58\u7684\u4ee3\u7801\u548c\u6570\u636e\u6bb5\u9700\u8981\u6362\u51fa\u65f6\uff0c\u5e94\u5728\u5907\u4efd\u5b58\u50a8\u4e0a\u627e\u5230\u7a7a\u95f4\u3002\u5907\u4efd\u5b58\u50a8\u4e5f\u6709\u540c\u6837\u7684\u4e0e\u5185\u5b58\u76f8\u5173\u7684\u788e\u7247\u95ee\u9898\uff0c\u4f46\u662f\u8bbf\u95ee\u66f4\u6162\uff0c\u56e0\u6b64\u7d27\u7f29\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u7531\u4e8e\u6bd4\u65e9\u8d77\u65b9\u6cd5\u66f4\u4f18\u8d8a\uff0c\u5404\u79cd\u5f62\u5f0f\u7684\u5206\u9875\u4e3a\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u6240\u91c7\u7528\uff0c\u5305\u62ec\u5927\u578b\u673a\u548c\u667a\u80fd\u624b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b9e\u73b0\u5206\u9875\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u548c\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u534f\u4f5c\u3002</p>"},{"location":"operating_system/basic/memory_management/#_20","title":"\u57fa\u672c\u65b9\u6cd5","text":"<p>\u5b9e\u73b0\u5206\u9875\u7684\u57fa\u672c\u65b9\u6cd5\u6d89\u53ca\u5c06\u7269\u7406\u5185\u5b58\u5206\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\uff0c\u79f0\u4e3a \u5e27 \u6216 \u9875\u5e27\uff08frame\uff09\uff1b\u800c\u5c06\u903b\u8f91\u5185\u5b58\u4e5f\u5206\u4e3a\u540c\u6837\u5927\u5c0f\u7684\u5757\uff0c\u79f0\u4e3a \u9875 \u6216 \u9875\u9762\uff08page\uff09\u3002\u5f53\u9700\u8981\u6267\u884c\u4e00\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u5b83\u7684\u9875\u4ece\u6587\u4ef6\u7cfb\u7edf\u6216\u5907\u4efd\u5b58\u50a8\u7b49\u6e90\u5904\uff0c\u52a0\u8f7d\u5230\u5185\u5b58\u53ef\u7528\u5e27\u3002\u5907\u4efd\u5b58\u50a8\u5212\u5206\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\uff0c\u5b83\u4e0e\u5355\u4e2a\u5185\u5b58\u4e2d\u6216\u591a\u4e2a\u5185\u5b58\u5e27\uff08\u7c07\uff09\u7684\u5927\u5c0f\u4e00\u6837\u3002\u8fd9\u4e2a\u76f8\u5f53\u7b80\u5355\u7684\u65b9\u6cd5\u529f\u80fd\u5f3a\u4e14\u53d8\u5316\u591a\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u4e00\u4e2a 64 \u4f4d\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u800c\u7cfb\u7edf\u7684\u7269\u7406\u5185\u5b58\u5c0f\u4e8e 2^{64} \u5b57\u8282\u3002</p> <p> \u5206\u9875\u7684\u786c\u4ef6\u652f\u6301</p> <p>\u5206\u9875\u7684\u786c\u4ef6\u652f\u6301\u5982\u4e0a\u56fe\u6240\u793a\u3002\u7531CPU\u751f\u6210\u7684\u6bcf\u4e2a\u5730\u5740\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u9875\u7801\uff08page number\uff09(p)\u548c \u9875\u504f\u79fb\uff08page offset\uff09(d)\u3002\u9875\u7801\u4f5c\u4e3a \u9875\u8868 \u7684\u7d22\u5f15\u3002\u9875\u8868\u5305\u542b\u6bcf\u9875\u6240\u5728\u7269\u7406\u5185\u5b58\u7684\u57fa\u5730\u5740\u3002\u8fd9\u4e2a\u57fa\u5730\u5740\u4e0e\u9875\u504f\u79fb\u7684\u7ec4\u5408\u5c31\u5f62\u6210\u4e86\u7269\u7406\u5185\u5b58\u5730\u5740\uff0c\u53ef\u53d1\u9001\u5230\u7269\u7406\u5355\u5143\u3002\u5185\u5b58\u7684\u5206\u9875\u6a21\u578b\u5982\u4e0b\u5982\u6240\u793a\uff1a</p> <p> \u903b\u8f91\u5185\u5b58\u548c\u7269\u7406\u5185\u5b58\u7684\u5206\u9875\u6a21\u578b</p> <p>\u9875\u5927\u5c0f\uff08\u4e0e\u5e27\u5927\u5c0f\u4e00\u6837\uff09\u662f\u7531\u786c\u4ef6\u6765\u51b3\u5b9a\u7684\u3002\u4e5f\u5f97\u5927\u5c0f\u4e3a 2 \u7684\u5e42\uff1b\u6839\u636e\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u7684\u4e0d\u540c\uff0c\u9875\u5927\u5c0f\u53ef\u4ee5\u4ece 512 \u5b57\u8282\u5230 1 GB\u4e0d\u7b49\u3002\u5982\u679c\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u4e3a 2^m\uff0c\u9875\u5927\u5c0f\u4e3a 2^n \u5b57\u8282\uff0c\u90a3\u4e48\u903b\u8f91\u5730\u5740\u7684\u9ad8 m - n \u4f4d\u8868\u793a\u9875\u7801\uff0c\u800c\u4f4e n \u4f4d\u8868\u793a\u9875\u504f\u79fb\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5176\u4e2d p \u662f\u9875\u8868\u7d22\u5f15\uff08\u9875\u7801\uff09\uff0cd \u4e3a\u9875\u5185\u504f\u79fb\u3002</p> \u83b7\u53d6 Linux \u7cfb\u7edf\u7684\u9875\u7684\u5927\u5c0f <p>\u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u9875\u5927\u5c0f\u6839\u636e\u67b6\u6784\u800c\u53d8\u5316\uff0c\u6709\u591a\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u9875\u5927\u5c0f\u3002\u4e00\u79cd\u65b9\u6cd5\u91c7\u7528\u7cfb\u7edf\u8c03\u7528 <code>getpagesize()</code> \u3002\u53e6\u4e00\u4e2a\u7b56\u7565\u662f\u7ec8\u7aef\u547d\u4ee4 <pre><code>getconf PAGESIZE\n</code></pre> \u8fd9\u4e9b\u65b9\u6cd5\u90fd\u8fd4\u56de\u6309\u5b57\u8282\u8ba1\u6570\u7684\u9875\u5927\u5c0f\u3002</p> <p>\u4e0d\u96be\u6ce8\u610f\u5230\uff0c\u5206\u9875\u672c\u8eab\u662f\u4e00\u79cd\u52a8\u6001\u7684\u91cd\u5b9a\u4f4d\u3002\u6bcf\u4e2a\u903b\u8f91\u5730\u5740\u7531\u5206\u9875\u786c\u4ef6\u7ed1\u5b9a\u7ed1\u5b9a\u4e3a\u67d0\u4e2a\u7269\u7406\u5730\u5740\u3002\u91c7\u7528\u5206\u9875\u7c7b\u4f3c\u4e8e\u91c7\u7528\u4e00\u7ec4\u57fa\u5740\uff08\u91cd\u5b9a\u4f4d\uff09\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a\u57fa\u5740\u5bf9\u5e94\u7740\u4e00\u4e2a\u5185\u5b58\u5e27\u3002</p> <p>\u7531\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u7269\u7406\u5185\u5b58\uff0c\u5854\u5f71\u4e4b\u9053\u7269\u7406\u5185\u5b58\u7684\u5206\u914d\u7ec6\u8282\uff1a\u54ea\u4e9b\u5e27\u5df2\u5206\u914d\uff0c\u54ea\u4e9b\u5e27\u7a7a\u7740\uff0c\u603b\u5171\u6709\u591a\u5c11\u9488\uff0c\u7b49\u7b49\u3002\u8fd9\u4e9b\u4fe1\u606f\u901a\u5e38\u4fdd\u5b58\u5728\u79f0\u4e3a \u5e27\u8868\uff08frame table\uff09\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u5728\u5e27\u8868\u4e2d\uff0c\u6bcf\u4e2a\u6761\u76ee\u5bf9\u5e94\u7740\u4e00\u4e2a\u5e27\uff0c\u4ee5\u8868\u793a\u8be5\u5e27\u662f\u7a7a\u95f2\u8fd8\u662f\u5df2\u5360\u7528\uff1b\u5982\u679c\u5360\u7528\uff0c\u662f\u88ab\u54ea\u4e2a\uff08\u6216\u54ea\u4e9b\uff09\u8fdb\u7a0b\u7684\u54ea\u4e2a\u9875\u6240\u5360\u7528\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2a\u9875\u8868\u7684\u526f\u672c\uff0c\u5982\u540c\u9700\u8981\u7ef4\u62a4\u6307\u4ee4\u8ba1\u6570\u5668\u548c\u5bc4\u5b58\u5668\u5185\u5bb9\u4e00\u6837\u3002\u6bcf\u5f53\u64cd\u4f5c\u7cfb\u7edf\u81ea\u5df1\u5c06\u903b\u8f91\u5730\u5740\u6620\u5c04\u6210\u7269\u7406\u5730\u5740\uff0c\u8fd9\u4e2a\u526f\u672c\u53ef\u7528\u4e8e\u8f6c\u6362\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u5206\u914d\u5230CPU\u65f6\uff0cCPU\u5206\u6d3e\u5668\u4e5f\u6839\u636e\u8be5\u526f\u672c\u6765\u5b9a\u4e49\u786c\u4ef6\u4e5f\u8868\u3002\u56e0\u6b64\uff0c\u5206\u9875\u589e\u52a0\u4e86\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\u3002</p>"},{"location":"operating_system/basic/memory_management/#_21","title":"\u786c\u4ef6\u652f\u6301","text":"<p>\u6bcf\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u90fd\u6709\u81ea\u5df1\u4fdd\u5b58\u9875\u8868\u7684\u65b9\u6cd5\u3002\u6709\u7684\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u4e00\u4e2a\u9875\u8868\u3002\u9875\u8868\u7684\u6307\u9488\uff0c\u4e0e\u5176\u4ed6\u5bc4\u5b58\u5668\u7684\u503c\uff08\u5982\u6307\u4ee4\u8ba1\u6570\u5668\uff09\uff0c\u4e00\u8d77\u88ab\u5b58\u5165 PCB\u3002\u5f53\u5206\u6d3e\u5668\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u4ed6\u9996\u5148\u52a0\u8f7d\u7528\u6237\u5bc4\u5b58\u5668\uff0c\u5e76\u6839\u636e\u4fdd\u5b58\u7684\u7528\u6237\u9875\u8868\u6765\u5b9a\u4e49\u6b63\u786e\u7684\u9875\u8868\u503c\u3002\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e00\u4e2a\u6216\u591a\u4e2a\u9875\u8868\uff0c\u4ee5\u4fbf\u51cf\u5c11\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\u3002</p> <p>\u7531\u4e8e\u6bcf\u6b21\u8bbf\u95ee\u5185\u5b58\u90fd\u9700\u8981\u7ecf\u8fc7\u5206\u9875\u6620\u5c04\uff0c\u56e0\u6b64\u6548\u7387\u662f\u4e00\u4e2a\u91cd\u8981\u800c\u8003\u8651\u56e0\u7d20\u3002</p> <p>\u9875\u8868\u7684\u786c\u4ef6\u5b9e\u73b0\u6709\u591a\u79cd\u65b9\u6cd5\u3002\u6700\u7b80\u5355\u7684\u4e00\u79cd\u662f\uff1a\u5c06\u591c\u8868\u4f5c\u4e3a\u4e00\u7ec4\u4e13\u7528\u7684 \u5bc4\u5b58\u5668 \u6765\u5b9e\u73b0\u3002</p> <p>\u5982\u679c\u9875\u8868\u8f83\u5c0f\uff08\u4f8b\u5982 256 \u4e2a\u6761\u76ee\uff09\uff0c\u90a3\u4e48\u5c1a\u4e14\u53ef\u4ee5\u7528\u5bc4\u5b58\u5668\u5b9e\u73b0\u3002\u4f46\u662f\uff0c\u5927\u591a\u6570\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684\u9875\u8868\u5f88\u5927\uff08\u4f8b\u5982 100 \u4e07\u4e2a\u6761\u76ee\uff09\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u673a\u5668\uff0c\u9700\u8981\u5c06\u591c\u8868\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u5c06 \u9875\u8868\u57fa\u5730\u5740\u5bc4\u5b58\u5668\uff08Page-Table Base Register, PTBR\uff09\u6307\u5411\u9875\u8868\u3002\u6539\u53d8\u9875\u8868\u53ea\u9700\u6539\u53d8\u8fd9\u4e00\u5bc4\u5b58\u5668\u5c31\u53ef\u4ee5\uff0c\u8fd9\u4e5f\u5927\u5927\u964d\u4f4e\u4e86\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\u3002</p> <p>\u7136\u800c\u91c7\u7528\u8fd9\u79cd\u65b9\u6848\u8bbf\u95ee\u4e00\u4e2a\u5b57\u8282\u9700\u8981 \u4e24\u6b21 \u8bbf\u95ee\u5185\u5b58\uff08\u4e00\u6b21\u7528\u4e8e\u9875\u8868\u6761\u76ee\uff0c\u4e00\u6b21\u7528\u4e8e\u5b57\u8282\uff09\uff0c\u76f8\u5f53\u4e8e\u5185\u5b58\u8bbf\u95ee\u901f\u5ea6\u51cf\u534a\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u91c7\u7528\u4e13\u7528\u7684\u3001\u8f83\u5c0f\u7684\u3001\u67e5\u627e\u5feb\u8bfb\u7684\u9ad8\u901f\u786c\u4ef6\u7f13\u51b2\uff0c\u5b83\u79f0\u4e3a \u8f6c\u6362\u8868\u7f13\u51b2\u533a\uff08Translation Look-aside Buffer, TLB\uff09\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p> \u903b\u8f91\u5185\u5b58\u548c\u7269\u7406\u5185\u5b58\u7684\u5206\u9875\u6a21\u578b</p> <p>\u6709\u7684CPU\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\u53c2\u4e0e\u7f13\u5b58\u4e2d LRU \u6761\u76ee\u7684\u66ff\u6362\u3002\u53e6\u5916\uff0c\u6709\u7684 TLB \u5141\u8bb8\u56fa\u6709\u6761\u76ee\u3002\u901a\u5e38\uff0c\u91cd\u8981\u7684\u5185\u6838\u4ee3\u7801\u6761\u76ee\u662f\u56fa\u5b9a\u4e0b\u6765\u7684\u3002</p> <p>\u6709\u7684TLB\u5728\u6bcf\u4e2a\u6761\u76ee\u4e2d\u8fd8\u4fdd\u5b58 \u5730\u5740\u7a7a\u95f4\u6807\u8bc6\u7b26\uff08Address-Space Identifierm, ASID\uff09\u3002ASID\u552f\u4e00\u6807\u8bc6\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u4e3a\u8fdb\u7a0b\u63d0\u4f9b\u5730\u5740\u7a7a\u95f4\u7684\u4fdd\u62a4\u3002</p> <p>\u547d\u4e2d\u7387\uff08hit ratio\uff09\u53ef\u4ee5\u8861\u91cf TLB \u6761\u76ee\u547d\u4e2d\u7684\u6bd4\u7387\u3002\u5bf9\u4e8e\u4efb\u610f\u5185\u5b58\u5b57\u8282\uff0cTLB \u547d\u4e2d\u610f\u5473\u7740\u4e00\u6b21\u5185\u5b58\u8bbf\u95ee\uff0c\u672a\u547d\u4e2d\u5219\u610f\u5473\u7740\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\u3002\u57fa\u4e8eCPU\u8bbf\u5b58\u65f6\u95f4\uff08\u5982 100 ns\uff09\uff0c\u53ef\u4ee5\u6c42\u5f97 \u6709\u6548\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\uff08effective memory-access time\uff09\u3002</p> Intel Core i7 \u7684\u4e24\u7ea7 TLB <p>Intel Core i7 CPU \u6709\u4e00\u4e2a 128 \u6307\u4ee4\u6761\u76ee\u7684 L1 TLB \u548c 64 \u6570\u636e\u6761\u76ee\u7684 L1 TLB\u3002\u5f53 L1 \u672a\u547d\u4e2d\u65f6\uff0cCPU \u82b1\u8d39 6 \u4e2a\u5468\u671f\u6765\u68c0\u67e5 L2 TLB \u7684 512 \u6761\u76ee\u3002L2 \u672a\u547d\u4e2d\u610f\u5473\u7740\uff0cCPU \u9700\u8981\u901a\u8fc7\u5185\u5b58\u7684\u9875\u8868\u6761\u4ef6\u6765\u67e5\u627e\u76f8\u5173\u7684\u5e27\u5730\u5740\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u6570\u767e\u4e2a\u5468\u671f\uff0c\u6216\u8005\u901a\u8fc7\u4e2d\u65ad\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u5b8c\u6210\u5b83\u7684\u5de5\u4f5c\u3002</p>"},{"location":"operating_system/basic/memory_management/#_22","title":"\u4fdd\u62a4","text":"<p>\u5206\u9875\u73af\u5883\u4e0b\u7684\u5185\u5b58\u4fdd\u62a4\u662f\u901a\u8fc7\u4e0e\u6bcf\u4e2a\u5e27\u5173\u8054\u4fdd\u62a4\u4f4d\u6765\u5b9e\u73b0\u7684\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u4f4d\u4fdd\u5b58\u5728\u9875\u8868\u4e2d\u3002</p> <p>\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f4d\u5b9a\u4e49\u4e00\u4e2a\u9875\u662f\u53ef\u8bfb\u53ef\u5199\u6216\u53ea\u8bfb\u3002\u975e\u6cd5\u8bbf\u95ee\u4f1a\u9677\u5165\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u4f4d\u901a\u5e38\u4e0e\u9875\u8868\u603b\u7684\u6bcf\u4e00\u6761\u6728\u76f8\u5173\u8054\uff1a\u6709\u6548-\u65e0\u6548\u4f4d\uff08valid-invalie bit\uff09\u3002\u8868\u793a\u76f8\u5173\u7684\u9875\u662f\u5426\u5728\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u5185\u3002\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u5bf9\u8be5\u4f4d\u7684\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u5141\u8bb8\u6216\u4e0d\u5141\u8bb8\u5bf9\u67d0\u9875\u7684\u8bbf\u95ee\u3002</p> <p> \u9875\u8868\u7684\u6709\u6548\u4f4d\uff08v\uff09\u6216\u65e0\u6548\u4f4d\uff08i\uff09</p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5982\u679c\u8bd5\u56fe\u4ea7\u751f\u9875\u8868 6 \u6216 7 \u7684\u5730\u5740\u65f6\uff0c\u5219\u4f1a\u53d1\u73b0\u6709\u6548-\u65e0\u6548\u4f4d\u4e3a\u65e0\u6548\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6355\u6349\u5230\u8fd9\u4e00\u975e\u6cd5\u64cd\u4f5c\uff08\u65e0\u6548\u4f4d\u5f15\u7528\uff09\u3002</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u5f88\u5c11\u4f1a\u4f7f\u7528\u5b83\u7684\u5168\u90e8\u5730\u5740\u7a7a\u95f4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bb8\u591a\u8fdb\u7a0b\u53ea\u7528\u5230\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u5982\u679c\u4e3a\u5730\u5740\u8303\u56f4\u5185\u7684\u6240\u6709\u9875\u90fd\u5728\u9875\u8868\u4e2d\u5efa\u7acb\u4e00\u4e2a\u6761\u76ee\u662f\u975e\u5e38\u6d6a\u8d39\u7684\uff01\u4e3a\u6b64\u6709\u7684\u7cfb\u7edf\u63d0\u4f9b\u786c\u4ef6\uff0c\u5982 \u9875\u8868\u957f\u5ea6\u5bc4\u5b58\u5668\uff08Page-Table Length Register, PTLR\uff09\u6765\u8868\u793a\u9875\u8868\u7684\u5927\u5c0f\uff0c\u8be5\u5bc4\u5b58\u5668\u7684\u503c\u53ef\u7528\u4e8e\u68c0\u67e5\u6bcf\u4e2a\u903b\u8f91\u5730\u5740\u4ee5\u9a8c\u8bc1\u5176\u662f\u5426\u4f4d\u4e8e\u8fdb\u7a0b\u7684\u6709\u6548\u8303\u56f4\u5185\u3002\u5982\u679c\u68c0\u6d4b\u65e0\u6cd5\u901a\u8fc7\uff0c\u5219\u4f1a\u88ab\u64cd\u4f5c\u7cfb\u7edf\u6355\u6349\u5230\u3002</p>"},{"location":"operating_system/basic/memory_management/#_23","title":"\u5171\u4eab\u9875","text":"<p>\u5206\u9875\u7684\u4f18\u70b9\u4e4b\u4e00\u662f\u53ef\u4ee5 \u5171\u4eab \u516c\u5171\u4ee3\u7801\u3002\u5bf9\u4e8e\u5206\u65f6\u73af\u5883\uff0c\u8fd9\u79cd\u8003\u8651\u5c24\u5176\u91cd\u8981\u3002\u5047\u8bbe\u4e00\u4e2a\u652f\u6301 40 \u4e2a\u7528\u6237\u7684\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u90fd\u6267\u884c\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\u3002\u5982\u679c\u8be5\u6587\u672c\u7f16\u8f91\u5668\u5305\u62ec 150KB \u7684\u4ee3\u7801\u53ca 50KB \u7684\u6570\u636e\u7a7a\u95f4\uff0c\u5219\u9700\u8981 8000KB \u6765\u652f\u6301\u8fd9 40 \u4e2a\u7528\u6237\u3002\u5982\u679c\u4ee3\u7801\u662f \u53ef\u91cd\u5165\u4ee3\u7801\uff08reentrant code\uff09\u6216 \u7eaf\u4ee3\u7801\uff08pure code\uff09\uff0c\u5219\u53ef\u4ee5\u5171\u4eab\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p> \u5206\u9875\u73af\u5883\u7684\u4ee3\u7801\u5171\u4eab</p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u8fd9\u91cc\u6709 3 \u4e2a\u8fdb\u7a0b\uff0c\u5b83\u4eec\u5171\u4eab 3 \u9875\u7684\u7f16\u8f91\u5668\uff0c\u8fd9\u91cc\u6bcf\u9875\u5927\u5c0f\u4e3a 50KB \uff08\u4e3a\u4e86\u7b80\u5316\u56fe\u793a\u8fd9\u91cc\u91c7\u7528\u5927\u9875\u9762\uff09\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u5f97\u6570\u636e\u9875\u3002</p> <p>\u53ef\u91cd\u5165\u4ee3\u7801 \u662f\u4e0d\u80fd\u81ea\u6211\u4fee\u6539\u7684\u4ee3\u7801\uff1a\u5b83\u5728\u6267\u884c\u671f\u95f4\u4e0d\u4f1a\u6539\u53d8\u3002\u56e0\u6b64\uff0c\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u76f8\u540c\u4ee3\u7801\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u5bc4\u5b58\u5668\u526f\u672c\u548c\u6570\u636e\u5b58\u50a8\uff0c\u4ee5\u4fbf\u4fdd\u5b58\u8fdb\u7a0b\u6267\u884c\u7684\u6570\u636e\u3002\u5f53\u7136\uff0c\u4e0d\u540c\u8fdb\u7a0b\u7684\u6570\u636e\u4e0d\u540c\u3002</p> <p>\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u79e9\u5e8f\u4fdd\u5b58\u4e00\u4e2a\u7f16\u8f91\u5668\u526f\u672c\u3002\u6bcf\u4e2a\u7528\u6237\u7684\u9875\u8868\u6620\u5c04\u5230\u7f16\u8f91\u5668\u7684\u540c\u4e00\u4e2a\u7269\u7406\u526f\u672c\uff0c\u4f46\u662f\u6570\u636e\u9875\u6620\u5c04\u5230\u4e0d\u540c\u7684\u5e27\u3002\u56e0\u6b64\uff0c\u4e3a\u652f\u6301 40 \u4e2a\u7528\u6237\uff0c\u53ea\u9700\u4e00\u4e2a\u7f16\u8f91\u5668\u526f\u672c\uff08150KB\uff09\uff0c\u5728\u52a0\u4e0a 40 \u4e2a\u7528\u6237\u6570\u636e\u7684\u7a7a\u95f4 50KB\uff0c\u603b\u7684\u9700\u6c42\u7a7a\u95f4\u4e3a 2150KB \u800c\u975e 8000KB\uff0c\u8fd9\u4e2a\u8282\u7701\u8fd8\u662f\u5f88\u5927\u7684\u3002</p> <p>\u5176\u4ed6\u5927\u91cf\u4f7f\u7528\u7684\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u5171\u4eab\uff0c\u5982\u7f16\u8f91\u5668\u3001\u7a97\u53e3\u7cfb\u7edf\u3001\u8fd0\u884c\u65f6\u5e93\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u7b49\u3002\u4e3a\u4e86\u5171\u4eab\uff0c\u4ee3\u7801\u5e94\u53ef\u91cd\u5165\u3002\u5171\u4eab\u4ee3\u7801\u7684\u53ea\u8bfb\u5c5e\u6027\u4e0d\u5e94\u7531\u4ee3\u7801\u7684\u6b63\u786e\u6027\u6765\u4fdd\u8bc1\uff1b\u800c\u5e94\u7531\u64cd\u4f5c\u7cfb\u7edf\u6765\u5f3a\u5236\u5b9e\u73b0\u3002</p> <p>\u7cfb\u7edf\u5185\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5171\u4eab\u5185\u5b58\uff0c\u7c7b\u4f3c\u4e8e\u901a\u8fc7\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4efb\u52a1\u7684\u5730\u5740\u7a7a\u95f4\u3002\u6b64\u5916\uff0c\u5bf9\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u5171\u4eab\u5185\u5b58\uff0c\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u5171\u4eab\u9875\u6765\u5b9e\u73b0\u5171\u4eab\u5185\u5b58\u3002</p>"},{"location":"operating_system/basic/memory_management/#_24","title":"\u9875\u8868\u7ed3\u6784","text":"<p>\u8fd9\u90e8\u5206\u63a2\u8ba8\u7ec4\u7ec7\u4e5f\u8868\u7684\u4e00\u4e9b\u6700\u5e38\u7528\u6280\u672f\u3002</p>"},{"location":"operating_system/basic/memory_management/#_25","title":"\u5206\u5c42\u9875\u8868","text":"<p>\u5927\u591a\u6570\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u5927\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff082^{32} ~ 2^{64}\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9875\u8868\u672c\u8eab\u53ef\u4ee5\u975e\u5e38\u5927\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u5177\u6709 32 \u4f4d\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002\u5982\u679c\u7cfb\u7edf\u7684\u9875\u5927\u5c0f\u4e3a 4KB\uff082^{12}\uff09\u3002\u5047\u8bbe\u6bcf\u4e2a\u6761\u76ee\u6709 4 \u5b57\u8282\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8fdb\u7a0b\u9700\u8981 4MB \u7269\u7406\u5730\u5740\u7a7a\u95f4\u6765\u5b58\u50a8\u9875\u8868\u672c\u8eab\u3002\u5728\u5185\u5b58\u4e2d\u4e3a\u8fd9\u4e2a\u9875\u8868\u5f00\u8f9f\u8fde\u7eed\u7a7a\u95f4\u5f00\u9500\u592a\u5927\u3002</p> <p>\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u4e24\u5c42\u5206\u9875\u7b97\u6cd5\uff0c\u5c06\u9875\u8868\u518d\u5206\u9875\u3002</p> <p>\u5982\u4e0b\u56fe\u4f8b\u5b50\uff0c\u5047\u8bbe\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5177\u6709 32 \u4f4d\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u548c 4K \u5927\u5c0f\u7684\u9875\u3002\u4e00\u4e2a\u903b\u8f91\u5730\u5740\u88ab\u5206\u4e3a 20 \u4f4d\u7684\u9875\u7801\u548c 12 \u4f4d\u7684\u9875\u504f\u79fb\u3002\u56e0\u4e3a\u8981\u5bf9\u9875\u8868\u8fdb\u884c\u518d\u5206\u9875\uff0c\u6240\u4ee5\u8be5\u9875\u7801\u53ef\u5206\u4e3a 10 \u4f4d\u7684\u9875\u7801\u548c 10 \u4f4d\u7684\u9875\u504f\u79fb\u3002\u8fd9\u6837\uff0c\u4e00\u4e2a\u903b\u8f91\u5730\u5740\u5c31\u5206\u4e3a\u5982\u4e0b\u5f62\u5f0f\uff1a</p> <p> \u5206\u9875\u73af\u5883\u7684\u4ee3\u7801\u5171\u4eab</p>"},{"location":"operating_system/basic/memory_management/#_26","title":"\u54c8\u5e0c\u9875\u8868","text":""},{"location":"operating_system/basic/memory_management/#_27","title":"\u5012\u7f6e\u9875\u8868","text":""},{"location":"operating_system/basic/memory_management/#intel-3264","title":"Intel 32\u4f4d\u548c64\u4f4d\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"operating_system/basic/memory_management/#arm","title":"ARM\u67b6\u6784","text":""},{"location":"operating_system/basic/memory_management/#_28","title":"\u865a\u5b58\u7ba1\u7406","text":"<p>\u4e0a\u4e00\u90e8\u5206\u8ba8\u8bba\u4e86\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5404\u79cd\u5185\u5b58\u7ba1\u7406\u7b56\u7565\u3002\u641c\u6709\u8fd9\u4e9b\u7b56\u7565\u90fd\u6709\u5171\u540c\u7684\u76ee\u6807\uff1a\u540c\u65f6\u5c06\u591a\u4e2a\u8fdb\u7a0b\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u4ee5\u4fbf\u5141\u8bb8\u591a\u9053\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u7b56\u7565\u90fd\u503e\u5411\u4e8e\u8981\u6c42\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u6267\u884c\u4e4b\u524d\u5e94\u5b8c\u5168\u5904\u4e8e\u5185\u5b58\u4e2d\u3002</p> <p>\u865a\u62df\u5185\u5b58\u6280\u672f\u5141\u8bb8\u6267\u884c\u8fdb\u7a0b\u4e0d\u5fc5\u5b8c\u5168\u5904\u4e8e\u5185\u5b58\u3002\u8fd9\u79cd\u65b9\u6848\u7684\u4e00\u4e2a\u4e3b\u8981\u4f18\u70b9\u662f\uff1a\u7a0b\u5e8f\u53ef\u4ee5\u5927\u4e8e\u7269\u7406\u5185\u5b58\u3002\u6b64\u5916\uff0c\u865a\u62df\u5185\u5b58\u5c06\u5185\u5b58\u62bd\u8c61\u6210\u4e00\u4e2a\u5de8\u5927\u7684\u3001\u7edf\u4e00\u7684\u5b58\u50a8\u6570\u7ec4\uff0c\u8fdb\u800c\u5b9e\u73b0\u4e86\u7528\u6237\u770b\u5230\u7684\u903b\u8f91\u5185\u5b58\u4e0e\u7269\u7406\u5185\u5b58\u7684\u5206\u79bb\u3002\u8fd9\u79cd\u6280\u672f\u4f7f\u5f97\u5f00\u53d1\u4eba\u5458\u4e0d\u518d\u4f46\u62c5\u5fe7\u5185\u5b58\u5bb9\u91cf\u7684\u9650\u5236\u3002\u865a\u62df\u5185\u5b58\u8fd8\u5141\u8bb8\u8fdb\u7a0b\u8f7b\u677e\u5171\u4eab\u6587\u4ef6\u548c\u5b9e\u73b0\u5185\u5b58\u5171\u4eab\u3002\u6b64\u5916\uff0c\u5b83\u4e3a\u521b\u5efa\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u673a\u5236\u3002\u7136\u800c\uff0c\u865a\u62df\u5185\u5b58\u7684\u5b9e\u73b0\u5e76\u4e0d\u5bb9\u6613\uff0c\u5e76\u4e14\u4f7f\u7528\u4e0d\u5f53\u8fd8\u53ef\u80fd\u4f1a\u5927\u5927\u964d\u4f4e\u6027\u80fd\u3002\u8fd9\u4e00\u90e8\u5206\u4ee5\u8bf7\u6c42\u8c03\u9875\u4e3a\u4f8b\u8ba8\u8bba\u865a\u62df\u5185\u5b58\uff0c\u5e76\u8ba8\u8bba\u5176\u590d\u6742\u6027\u548c\u5f00\u9500\u3002</p>"},{"location":"operating_system/basic/memory_management/#_29","title":"\u80cc\u666f","text":""},{"location":"operating_system/basic/memory_management/#_30","title":"\u8bf7\u6c42\u8c03\u9875","text":""},{"location":"operating_system/basic/memory_management/#_31","title":"\u5199\u65f6\u590d\u5236","text":""},{"location":"operating_system/basic/memory_management/#_32","title":"\u9875\u9762\u7f6e\u6362","text":""},{"location":"operating_system/basic/memory_management/#_33","title":"\u5e27\u5206\u914d","text":""},{"location":"operating_system/basic/memory_management/#_34","title":"\u7cfb\u7edf\u6296\u52a8","text":""},{"location":"operating_system/basic/memory_management/#_35","title":"\u5185\u5b58\u6620\u5c04\u6587\u4ef6","text":""},{"location":"operating_system/basic/memory_management/#_36","title":"\u5206\u914d\u5185\u6838\u5185\u5b58","text":""},{"location":"operating_system/basic/memory_management/#_37","title":"\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"operating_system/basic/memory_management/#_38","title":"\u64cd\u4f5c\u7cfb\u7edf\u4f8b\u5b50","text":"<p>\u672c\u8282\u8ba8\u8bba Windows \u548c Solaris \u5982\u4f55\u5b9e\u73b0\u865a\u62df\u5185\u5b58\u3002</p>"},{"location":"operating_system/basic/memory_management/#windows","title":"Windows","text":""},{"location":"operating_system/basic/memory_management/#solaris","title":"Solaris","text":""},{"location":"operating_system/basic/process_management/","title":"\u8fdb\u7a0b\u7ba1\u7406","text":"<p>\u53ef\u4ee5\u5c06\u8fdb\u7a0b\uff08process\uff09\u770b\u505a\u6267\u884c\u7684\u7a0b\u5e8f\u3002\u8fdb\u7a0b\u9700\u8981\u4e00\u5b9a\u7684\u8d44\u6e90\uff0c\u5982CPU\u65f6\u95f4\u3001\u5185\u5b58\u3001\u6587\u4ef6\u548cI/O\u8bbe\u5907\uff0c\u4ee5\u4fbf\u6267\u884c\u4efb\u52a1\u3002\u8fd9\u4e9b\u8d44\u6e90\u5728\u521b\u5efa\u8fdb\u7a0b\u6216\u6267\u884c\u8fdb\u7a0b\u65f6\u5f97\u4ee5\u5206\u914d\u3002</p> <p>\u8fdb\u7a0b\u662f\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u7684\u5de5\u4f5c\u5355\u5143\u3002\u8fd9\u7c7b\u7cfb\u7edf\u5305\u542b\u4e00\u7ec4\u8fdb\u7a0b\uff1a\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u6267\u884c\u7cfb\u7edf\u4ee3\u7801\uff0c\u800c\u7528\u6237\u8fdb\u7a0b\u6267\u884c\u7528\u6237\u4ee3\u7801\u3002\u6240\u6709\u8fd9\u4e9b\u8fdb\u7a0b\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3002</p> <p>\u867d\u7136\u4f20\u7edf\u8fdb\u7a0b\u5728\u8fd0\u884c\u65f6\u4ec5\u4ec5\u5305\u62ec\u5355\u4e2a\u63a7\u5236\u7ebf\u7a0b\uff08thread\uff09\uff0c\u4f46\u662f\u76ee\u524d\u5927\u591a\u6570\u7684\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u5177\u6709\u591a\u7ebf\u7a0b\u7684\u8fdb\u7a0b\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7ba1\u7406\u7684\u591a\u4e2a\u65b9\u9762\uff1a\u7528\u6237\u8fdb\u7a0b\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u7684\u521b\u5efa\u4e0e\u5220\u9664\uff0c\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u7528\u4e8e\u8fdb\u7a0b\u540c\u6b65\u3001\u8fdb\u7a0b\u901a\u4fe1\u4e0e\u8fdb\u7a0b\u6b7b\u9501\u5904\u7406\u7684\u673a\u5236\u7b49\u3002</p>"},{"location":"operating_system/basic/process_management/#_2","title":"\u8fdb\u7a0b","text":""},{"location":"operating_system/basic/process_management/#_3","title":"\u8fdb\u7a0b\u6982\u5ff5","text":"<p>\u8fdb\u7a0b\u662f\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u968f\u7740\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u5b83\u6539\u53d8\u72b6\u6001\u3002\u8fdb\u7a0b\u72b6\u6001\u662f\u7531\u8fdb\u7a0b\u5f53\u524d\u6d3b\u52a8\u5b9a\u4e49\u7684\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5904\u4e8e\u5982\u4e0b\u72b6\u6001\uff1a\u65b0\u7684\u3001\u5c31\u7eea\u3001\u8fd0\u884c\u3001\u7b49\u5f85\u3001\u7ec8\u6b62\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u5185\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u901a\u8fc7\u5b83\u7684 \u8fdb\u7a0b\u63a7\u5236\u5757\uff08PCB\uff09 \u6765\u8868\u793a\u3002</p>"},{"location":"operating_system/basic/process_management/#_4","title":"\u8fdb\u7a0b\u8c03\u5ea6","text":"<p>\u8fdb\u7a0b\uff0c\u5f53\u4e0d\u6267\u884c\u65f6\uff0c\u4f4d\u4e8e\u67d0\u4e2a\u7b49\u5f85\u961f\u5217\u3002\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e24\u79cd\u4e3b\u8981\u961f\u5217\uff1aIO\u8bf7\u6c42\u961f\u5217\u3001\u5c31\u7eea\u961f\u5217 \u3002\u5c31\u7eea\u961f\u5217\u5305\u62ec\u6240\u6709\u7b49\u5f85\u6267\u884c\u5e76\u7b49\u5f85CPU\u7684\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u7528PCB\u6765\u8868\u793a\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5e94\u4ece\u5404\u4e2a\u8c03\u5ea6\u961f\u5217\u4e2d\u9009\u62e9\u8fdb\u7a0b\u3002\u957f\u671f\u8c03\u5ea6\uff08\u7528\u4e8e\u4f5c\u4e1a\uff09\u9009\u62e9\u8fdb\u7a0b\u4ee5\u4fbf\u7ade\u4e89CPU\u3002\u901a\u5e38\uff0c\u957f\u671f\u8c03\u5ea6\u5145\u5206\u8003\u8651\u8d44\u6e90\u5206\u914d\uff0c\u5c24\u5176\u5185\u5b58\u7ba1\u7406\u3002\u77ed\u671f\u8c03\u5ea6 \u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u62e9\u8fdb\u7a0b\u3002</p>"},{"location":"operating_system/basic/process_management/#_5","title":"\u8fdb\u7a0b\u8fd0\u884c","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u63d0\u4f9b\u4e00\u79cd\u673a\u5236\uff0c\u4ee5\u4fbf\u7236\u8fdb\u7a0b\u521b\u5efa\u5b50\u8fdb\u7a0b\u3002\u7236\u8fdb\u7a0b\u5728\u7ee7\u7eed\u4e4b\u524d\u53ef\u4ee5\u7b49\u5f85\u5176\u5b50\u8fdb\u7a0b\u7ec8\u6b62\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u5b50\u8fdb\u7a0b\u5e76\u53d1\u6267\u884c\u3002\u5141\u8bb8\u5e76\u53d1\u6709\u591a\u4e2a\u539f\u56e0\uff1a\u4fe1\u606f\u5171\u4eab\u3001\u8ba1\u7b97\u52a0\u901f\u3001\u6a21\u5757\u5316\u3001\u65b9\u4fbf\u3002</p>"},{"location":"operating_system/basic/process_management/#_6","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5185\u7684\u6267\u884c\u8fdb\u7a0b\u53ef\u4ee5\u662f\u72ec\u7acb\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u534f\u4f5c\u7684\u3002\u534f\u4f5c\u8fdb\u7a0b\u9700\u8981\u8fdb\u7a0b\u95f4\u5177\u6709\u76f8\u4e92\u901a\u4fe1\u7684\u673a\u5236\u3002\u901a\u4fe1\u4e3b\u8981\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a \u5171\u4eab\u5185\u5b58 \u548c \u6d88\u606f\u7cfb\u7edf \u3002</p> <ul> <li>\u5171\u4eab\u5185\u5b58\uff1a\u8fdb\u7a0b\u5171\u4eab\u4e00\u4e9b\u53d8\u91cf\uff0c\u8fdb\u7a0b\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e9b\u5171\u4eab\u53d8\u91cf\u6765\u4ea4\u6362\u4fe1\u606f\u3002\u5bf9\u4e8e\u5171\u4eab\u5185\u5b58\u7cfb\u7edf\uff0c\u63d0\u4f9b\u901a\u4fe1\u7684\u8d23\u4efb\u4e3b\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u5458\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ea\u9700\u8981\u63d0\u4f9b\u5171\u4eab\u5185\u5b58\u3002</li> <li>\u6d88\u606f\u7cfb\u7edf\uff1a\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u63d0\u4f9b\u901a\u4fe1\u673a\u5236\u3002</li> </ul> <p>\u4e24\u79cd\u65b9\u6cd5\u76f8\u4e92\u4e0d\u6392\u65a5\uff0c\u53ef\u4ee5\u5728\u7edf\u4e00\u64cd\u4f5c\u7cfb\u7edf\u5185\u540c\u65f6\u5b9e\u73b0\u3002</p>"},{"location":"operating_system/basic/process_management/#ipc","title":"IPC\u7cfb\u7edf\u4f8b\u5b50","text":"<p>POSIX\u5171\u4eab\u5185\u5b58\u3001Mach\u7684\u6d88\u606f\u4f20\u9012\u3001Windows\u7684ALPC\uff08\u9ad8\u7ea7\u672c\u5730\u7a0b\u5e8f\u8c03\u7528\uff09\u5de5\u5177\u3002</p>"},{"location":"operating_system/basic/process_management/#_7","title":"\u5ba2\u6237\u673a/\u670d\u52a1\u5668\u901a\u4fe1","text":"<p>\u5957\u63a5\u5b57 \u3001 \u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff08PRC\uff09 \u3001 \u7ba1\u9053 </p> <ul> <li>\u5957\u63a5\u5b57\uff1a\u5957\u63a5\u5b57\u5b9a\u4e49\u4e3a\u901a\u4fe1\u7684\u7aef\u70b9\u3002\u4e00\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u8fde\u63a5\u7531\u4e00\u5bf9\u5957\u63a5\u5b57\u7ec4\u6210\uff0c\u901a\u4fe1\u7684\u4e24\u7aef\u5404\u6709\u4e00\u4e2a\u5957\u63a5\u5b57\u3002</li> <li>RPC\uff1a\u662f\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u5206\u5e03\u5f0f\u901a\u4fe1\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u8c03\u7528\u4e00\u4e2a\u8fdc\u7a0b\u5e94\u7528\u7684\u8fc7\u7a0b\u65f6\uff0c\u5c31\u6709\u4e86RPC\u3002</li> <li>\u7ba1\u9053\uff1a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u8fdb\u7a0b\u95f4\u76f8\u4e92\u901a\u4fe1\uff0c\u666e\u901a\u7ba1\u9053\u5141\u8bb8\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u547d\u540d\u7ba1\u9053\u5141\u8bb8\u4e0d\u76f8\u5173\u8fdb\u7a0b\u7684\u901a\u4fe1\u3002</li> </ul>"},{"location":"operating_system/basic/process_management/#_8","title":"\u591a\u7ebf\u7a0b\u7f16\u7a0b","text":""},{"location":"operating_system/basic/process_management/#_9","title":"\u6982\u8ff0","text":"<p>\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u5185\u7684\u63a7\u5236\u6d41\u3002\u591a\u7ebf\u7a0b\u8fdb\u7a0b\u5728\u540c\u4e00\u5730\u5740\u7a7a\u95f4\u5185\u5305\u62ec\u591a\u4e2a\u4e0d\u540c\u7684\u63a7\u5236\u6d41\u3002\u591a\u7ebf\u7a0b\u7684\u4f18\u70b9\u5305\u62ec\uff1a\u7528\u6237\u54cd\u5e94\u7684\u6539\u8fdb\u3001\u8fdb\u7a0b\u5185\u8d44\u6e90\u7684\u5171\u4eab\u3001\u7ecf\u6d4e\u548c\u53ef\u6269\u5c55\u6027\u7684\u56e0\u7d20\uff08\u5982\u66f4\u6709\u6548\u7684\u4f7f\u7528\u591a\u4e2a\u5904\u7406\u6838\uff09\u3002</p>"},{"location":"operating_system/basic/process_management/#_10","title":"\u591a\u6838\u7f16\u7a0b","text":"<p>\u591a\u6838\u7cfb\u7edf\u7684\u5f15\u5165\u4f7f\u5f97 \u5e76\u53d1 \u8868\u793a\u7ebf\u7a0b\u80fd\u591f \u5e76\u884c \u6267\u884c\uff0c\u56e0\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u6838\u5206\u914d\u4e00\u4e2a\u5355\u72ec\u7ebf\u7a0b\u3002</p> <p>\u591a\u6838\u673a\u5236\u5f15\u5165\u7684\u7f16\u7a0b\u6311\u6218\uff1a</p> <ul> <li>\u4efb\u52a1\u8bc6\u522b\uff1a\u8fd9\u6d89\u53ca\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\uff0c\u67e5\u627e\u533a\u57df\u4ee5\u4fbf\u5206\u4e3a\u72ec\u7acb\u7684\u3001\u5e76\u53d1\u7684\u4efb\u52a1\u3002\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4efb\u52a1\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u591a\u6838\u4e0a\u5e76\u884c\u8fd0\u884c\u3002</li> <li>\u5e73\u8861\uff1a\u5728\u8bc6\u522b\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u7684\u4efb\u52a1\u65f6\uff0c\u7a0b\u5e8f\u5458\u8fd8\u9700\u786e\u4fdd\u4efb\u52a1\u6267\u884c\u540c\u7b49\u4ef7\u503c\u7684\u5de5\u4f5c\u3002\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6709\u7684\u4efb\u52a1\u4e0e\u5176\u4ed6\u4efb\u52a1\u76f8\u6bd4\uff0c\u53ef\u80fd\u5bf9\u6574\u4e2a\u4efb\u52a1\u7684\u8d21\u732e\u5e76\u4e0d\u591a\uff1b\u91c7\u7528\u5355\u72ec\u6838\u6765\u6267\u884c\u6574\u4e2a\u4efb\u52a1\u5c31\u4e0d\u503c\u5f97\u4e86\u3002</li> <li>\u6570\u636e\u5206\u5272\uff1a\u6b63\u5982\u5e94\u7528\u7a0b\u5e8f\u8981\u5206\u4e3a\u5355\u72ec\u4efb\u52a1\uff0c\u6709\u4efb\u52a1\u8bbf\u95ee\u548c\u64cd\u4f5c\u7684\u6570\u636e\u4e5f\u5e94\u5212\u5206\u4ee5\u4fbf\u8fd0\u884c\u5728\u5355\u72ec\u7684\u6838\u4e0a\u3002</li> <li>\u6570\u636e\u4f9d\u8d56\uff1a\u4efb\u52a1\u8bbf\u95ee\u7684\u6570\u636e\u5fc5\u987b\u5206\u6790\u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u5f53\u4e00\u4e2a\u4efb\u52a1\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u4efb\u52a1\u7684\u6570\u636e\u65f6\uff0c\u7a0b\u5e8f\u5458\u5fc5\u987b\u786e\u4fdd\u4efb\u52a1\u6267\u884c\u662f\u540c\u6b65\u7684\uff0c\u4ee5\u9002\u5e94\u6570\u636e\u4f9d\u8d56\u6027\u3002</li> <li>\u6d4b\u8bd5\u4e0e\u8c03\u8bd5\uff1a\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u5e76\u884c\u8fd0\u884c\u4e8e\u591a\u6838\u65f6\uff0c\u53ef\u80fd\u4ea7\u751f\u8bb8\u591a\u4e0d\u540c\u7684\u6267\u884c\u8def\u5f84\u3002\u6d4b\u8bd5\u4e0e\u8c03\u8bd5\u8fd9\u6837\u7684\u5e76\u53d1\u7a0b\u5e8f\u6bd4\u6d4b\u8bd5\u548c\u8c03\u8bd5\u5355\u7ebf\u7a0b\u7684\u5e94\u7528\u7a0b\u5e8f\u96be\u5ea6\u5927\u5f97\u591a\u3002</li> </ul> <p>\u901a\u5e38\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5e76\u884c\uff1a\u6570\u636e\u5e76\u884c \u548c \u4efb\u52a1\u5e76\u884c\u3002</p> <ul> <li>\u6570\u636e\u5e76\u884c\uff1a\u5c06\u6570\u636e\u5206\u5e03\u5728\u76f8\u540c\u7684\u8ba1\u7b97\u6838\u4e0a\uff0c\u5e76\u5728\u6bcf\u4e2a\u6838\u4e0a\u6267\u884c\u76f8\u540c\u64cd\u4f5c\uff1b</li> <li>\u4efb\u52a1\u5e76\u884c\uff1a\u5c06\u4efb\u52a1\uff08\u7ebf\u7a0b\uff09\u800c\u4e0d\u662f\u6570\u636e\u5206\u914d\u5230\u591a\u4e2a\u8ba1\u7b97\u6838\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6267\u884c\u4e00\u4e2a\u72ec\u7279\u7684\u64cd\u4f5c\u3002</li> </ul>"},{"location":"operating_system/basic/process_management/#_11","title":"\u591a\u7ebf\u7a0b\u6a21\u578b","text":"<p>\u7528\u6237\u7ebf\u7a0b\uff08user thread\uff09\u5bf9\u7528\u6237\u6765\u8bf4\u662f\u53ef\u89c1\u7684\uff0c\u5bf9\u5185\u6838\u5219\u662f\u672a\u77e5\u7684\u3002\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u548c\u7ba1\u7406 \u5185\u6838\u7ea7\u7ebf\u7a0b\uff08kernel thread\uff09\u3002\u901a\u5e38\uff0c\u7528\u6237\u7ebf\u7a0b\u4e0e\u5185\u6838\u7ebf\u7a0b\u76f8\u6bd4\uff0c\u521b\u5efa\u548c\u7ba1\u7406\u8981\u66f4\u5feb\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u5185\u6838\u5e72\u9884\u3002</p> <p>\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6a21\u578b\u5173\u8054\u7528\u6237\u7ebf\u7a0b\u548c\u5185\u6838\u7ebf\u7a0b </p> <ul> <li>\u591a\u5bf9\u4e00\u6a21\u578b\uff1a\u5c06\u591a\u4e2a\u7528\u6237\u7ebf\u7a0b\u6620\u5c04\u5230\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b</li> </ul> <p></p> <ul> <li>\u4e00\u5bf9\u4e00\u6a21\u578b\uff1a\u5c06\u6bcf\u4e2a\u7528\u6237\u7ebf\u7a0b\u6620\u5c04\u5230\u4e00\u4e2a\u5bf9\u5e94\u7684\u5185\u6838\u7ebf\u7a0b</li> </ul> <p></p> <ul> <li>\u591a\u5bf9\u591a\u6a21\u578b\uff1a\u5c06\u591a\u4e2a\u7528\u6237\u7ebf\u7a0b\u5728\u540c\u6837\uff08\u6216\u66f4\u5c11\uff09\u6570\u91cf\u7684\u5185\u6838\u7ebf\u7a0b\u4e4b\u95f4\u5207\u6362</li> </ul> <p></p> <p>\u4ee5\u4e0a\u8bbe\u8ba1\u5bf9\u5e76\u53d1\u6027\u7684\u5f71\u54cd \u867d\u7136\u591a\u5bf9\u4e00\u6a21\u578b\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u4efb\u610f\u591a\u7684\u7528\u6237\u7ebf\u7a0b\uff0c\u4f46\u7531\u4e8e\u5185\u6838\u53ea\u80fd\u4e00\u6b21\u8c03\u5ea6\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6240\u4ee5\u5e76\u672a\u589e\u52a0\u5e76\u53d1\u6027\u3002\u867d\u7136\u4e00\u5bf9\u4e00\u6a21\u578b\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u5e76\u53d1\u6027\uff0c\u4f46\u662f\u5f00\u53d1\u4eba\u5458\u4e0d\u5b9c\u5728\u5e94\u7528\u7a0b\u5e8f\u5185\u521b\u5efa\u592a\u591a\u7ebf\u7a0b\uff08\u6709\u65f6\u7cfb\u7edf\u53ef\u80fd\u4f1a\u9650\u5236\u521b\u5efa\u7ebf\u7a0b\u7684\u6570\u91cf\uff09\u3002\u591a\u5bf9\u591a\u6a21\u578b\u6ca1\u6709\u8fd9\u4e24\u4e2a\u7f3a\u70b9\uff1a\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u591a\u7684\u7528\u6237\u7ebf\u7a0b\uff0c\u5e76\u4e14\u76f8\u5e94\u5185\u6838\u7ebf\u7a0b\u80fd\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u5e76\u53d1\u6267\u884c\u3002\u800c\u4e14\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u963b\u585e\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u5185\u6838\u53ef\u4ee5\u8c03\u5ea6\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6765\u6267\u884c\u3002</p> <p>\u5927\u591a\u6570\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5982Windows\u3001Mac OS X\u3001Linux\u548cSolaris\u7b49\uff0c\u90fd\u5bf9\u7ebf\u7a0b\u63d0\u4f9b\u5185\u6838\u652f\u6301\u3002</p>"},{"location":"operating_system/basic/process_management/#_12","title":"\u7ebf\u7a0b\u5e93","text":"<p>\u7ebf\u7a0b\u5e93\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5458\u63d0\u4f9b\u4e86\u521b\u5efa\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684API\u3002\u5e38\u7528\u7684\u4e3b\u8981\u7ebf\u7a0b\u5e93\u6709\u4e09\u4e2a\uff1aPOSIX Pthreads\u3001Windows\u7ebf\u7a0b \u548c Java\u7ebf\u7a0b\u3002</p>"},{"location":"operating_system/basic/process_management/#_13","title":"\u9690\u5f0f\u591a\u7ebf\u7a0b","text":"<p>\u9664\u4e86\u91c7\u7528\u7ebf\u7a0b\u5e93API\u6765\u663e\u5f0f\u521b\u5efa\u7ebf\u7a0b\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u9690\u5f0f\u7ebf\u7a0b\uff0c\u8fd9\u79cd\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u7ba1\u7406\u4ea4\u7531\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\u5e93\u6765\u5b8c\u6210\u3002\u9690\u5f0f\u7ebf\u7a0b\u65b9\u6cd5\u5305\u62ec\uff1a\u7ebf\u7a0b\u6c60\u3001OpenMP \u548c Grand Central Dispatch \u7b49\u3002</p>"},{"location":"operating_system/basic/process_management/#_14","title":"\u591a\u7ebf\u7a0b\u95ee\u9898","text":"<p>\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e3a\u7a0b\u5e8f\u5458\u5e26\u6765\u4e86\u8bb8\u591a\u6311\u6218\uff0c\u5305\u62ec<code>fork()</code>\u548c<code>exec()</code>\u7cfb\u7edf\u8c03\u7528\u7684\u8bed\u4e49\u3002\u5176\u4ed6\u95ee\u9898\u5305\u62ec \u4fe1\u53f7\u5904\u7406\u3001\u7ebf\u7a0b\u64a4\u9500\u3001\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8 \u548c \u8c03\u5ea6\u6fc0\u6d3b \u7b49</p>"},{"location":"operating_system/basic/process_management/#_15","title":"\u64cd\u4f5c\u7cfb\u7edf\u4f8b\u5b50","text":""},{"location":"operating_system/basic/process_management/#windows","title":"Windows\u7ebf\u7a0b","text":"<p>\u6bcf\u4e2aWindows\u5e94\u7528\u7a0b\u5e8f\u6309\u5355\u72ec\u8fdb\u7a0b\u6765\u8fd0\u884c\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u3002Windows\u4f7f\u7528\u4e00\u5bf9\u4e00\u6620\u5c04\uff0c\u5373\u6bcf\u4e2a\u7528\u6237\u7ebf\u7a0b\u6620\u5c04\u5230\u4e00\u4e2a\u76f8\u5173\u7684\u5185\u6838\u7ebf\u7a0b\u3002</p> <p>\u7ebf\u7a0b\u4e00\u822c\u5305\u62ec\u5982\u4e0b\u90e8\u4ef6\uff1a</p> <ul> <li>\u7ebf\u7a0bID - \u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u7ebf\u7a0b\u3002</li> <li>\u5bc4\u5b58\u5668\u7ec4 - \u7528\u4e8e\u8868\u793a\u5904\u7406\u5668\u72b6\u6001\u3002</li> <li>\u5806\u6808 - \u7528\u6237\u5806\u6808\uff0c\u4ee5\u4f9b\u7ebf\u7a0b\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff1b\u5185\u6838\u5806\u6808\uff0c\u4ee5\u4f9b\u7ebf\u7a0b\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002</li> <li>\u79c1\u6709\u5b58\u50a8\u533a\u57df - \u7528\u4e8e\u5404\u79cd\u8fd0\u884c\u65f6\u5e93\u548c\u52a8\u6001\u94fe\u63a5\u5e93\uff08DLL\uff09\u3002</li> </ul> <p>\u5bc4\u5b58\u5668\u7ec4\u3001\u5806\u6808\u548c\u79c1\u6709\u5b58\u50a8\u533a\u57df\uff0c\u901a\u5e38\u79f0\u4e3a \u7ebf\u7a0b\u4e0a\u4e0b\u6587\uff08context\uff09</p> <p>\u7ebf\u7a0b\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\uff1a</p> <ul> <li>ETHREAD\uff1a\u6267\u884c\u7ebf\u7a0b\u5feb\u3002\u5305\u62ec\u6240\u5c5e\u8fdb\u7a0b\u6307\u9488\u3001\u7ebf\u7a0b\u63a7\u5236\u5f00\u59cb\u7684\u7a0b\u5e8f\u7684\u5730\u5740\u4ee5\u53ca\u5bf9\u5e94\u7684KTHREAD\u7684\u6307\u9488\u7b49\u3002</li> <li>KTHREAD\uff1a\u5185\u6838\u7ebf\u7a0b\u5feb\u3002\u5305\u62ec\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u540c\u6b65\u4fe1\u606f\u3002\u53e6\u5916\uff0cKTHREAD\u4e5f\u5305\u62ec\u5185\u6838\u5806\u6808\uff08\u4ee5\u4f9b\u7ebf\u7a0b\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff09\u548cTEB\u7684\u6307\u9488\u3002</li> <li>TEB\uff1a\u7ebf\u7a0b\u73af\u5883\u5757</li> </ul>"},{"location":"operating_system/basic/process_management/#linux","title":"Linux\u7ebf\u7a0b","text":"<ul> <li>\u7cfb\u7edf\u8c03\u7528<code>fork()</code>\uff1a\u8fdb\u7a0b\u590d\u5236\u7684\u4f20\u7edf\u529f\u80fd</li> <li>\u7cfb\u7edf\u8c03\u7528<code>clone()</code>\uff1a\u521b\u5efa\u7ebf\u7a0b</li> </ul> <p>Linux\u5728\u8ba8\u8bba\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u65f6\uff0c\u5e38\u91c7\u7528\u4efb\u52a1\uff08task\uff09\u4e00\u8bcd\uff0c\u800c\u975e\u8fdb\u7a0b\uff08process\uff09\u6216\u7ebf\u7a0b\uff08thread\uff09\u3002</p>"},{"location":"operating_system/basic/process_management/#_16","title":"\u8fdb\u7a0b\u8c03\u5ea6","text":""},{"location":"operating_system/basic/process_management/#_17","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>CPU\u8c03\u5ea6\u7684\u4efb\u52a1\u662f\uff0c\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u62e9\u4e00\u4e2a\u7b49\u5f85\u8fdb\u7a0b\uff0c\u5e76\u4e3a\u5176\u5206\u914dCPU\u3002\u8c03\u5ea6\u7a0b\u5e8f\u5206\u914dCPU\u5230\u9009\u4e2d\u7684\u8fdb\u7a0b\u3002</p>"},{"location":"operating_system/basic/process_management/#_18","title":"\u8c03\u5ea6\u51c6\u5219","text":"<ul> <li>CPU\u4f7f\u7528\u7387\uff1a\u5e94\u4f7fCPU\u5c3d\u53ef\u80fd\u5730\u5fd9\u788c\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0cCPU\u4f7f\u7528\u7387\u4ece 0% \u5230 100%\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b9e\u9645\u7cfb\u7edf\uff0c\u4ed6\u7684\u8303\u56f4\u5e94\u4ece\u548c 40%\uff08\u8f7b\u590d\u6838\u7cfb\u7edf\uff09\u5230 90%\uff08\u91cd\u7b26\u5408\u7cfb\u7edf\uff09\u3002</li> <li>\u541e\u5410\u91cf\uff1a\u5982\u679cCPU\u5fd9\u4e8e\u6267\u884c\u8fdb\u7a0b\uff0c\u90a3\u4e48\u5de5\u4f5c\u5c31\u5728\u5b8c\u6210\u3002\u4e00\u79cd\u6d4b\u91cf\u5de5\u4f5c\u7684\u65b9\u6cd5\u79f0\u4e3a \u541e\u5410\u91cf\uff08throughput\uff09\uff0c\u5b83\u662f\u5728\u4e00\u4e2a\u65f6\u95f4\u5355\u5143\u5185\u8fdb\u57ce\u5b8c\u6210\u7684\u6570\u91cf\u3002\u5bf9\u4e8e\u957f\u8fdb\u7a0b\uff0c\u541e\u5410\u91cf\u53ef\u80fd\u4e3a\u6bcf\u5c0f\u65f6\u4e00\u4e2a\u8fdb\u7a0b\uff1b\u5bf9\u4e8e\u77ed\u8fdb\u7a0b\uff0c\u541e\u571f\u91cf\u53ef\u80fd\u4e3a\u6bcf\u79d2\u662f\u4e2a\u8fdb\u7a0b\u3002</li> <li>\u5468\u8f6c\u65f6\u95f4\uff1a\u4ece\u4e00\u4e2a\u7279\u5b9a\u8fdb\u7a0b\u7684\u89d2\u5ea6\u770b\uff0c\u4e00\u4e2a\u91cd\u8981\u51c6\u5219\u662f\u8fd0\u884c\u8fd9\u4e2a\u8fdb\u7a0b\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u4ece\u8fdb\u7a0b\u63d0\u4ea4\u5230\u8fdb\u57ce\u5b8c\u6210\u7684\u65f6\u95f4\u6bb5\u79f0\u4e3a\u5468\u8f6c\u65f6\u95f4\uff08turnaround time\uff09\u3002\u5468\u8f6c\u65f6\u95f4\u4e3a\u6240\u6709\u65f6\u95f4\u6bb5\u4e4b\u548c\uff0c\u5305\u62ec\u8fdb\u7a0b\u7b49\u5f85\u8fdb\u5165\u5185\u5b58\u3001\u5728\u5c31\u7eea\u961f\u5217\u4e2d\u7b49\u5f85\u3001\u5728CPU\u4e0a\u6267\u884c\u548cI/O\u6267\u884c\u3002</li> <li>\u7b49\u5f85\u65f6\u95f4\uff1aCPU\u8c03\u5ea6\u7b97\u6cd5\u5e76\u4e0d\u5f71\u54cd\u8fdb\u7a0b\u8fd0\u884c\u548c\u6267\u884cI/O\u7684\u65f6\u95f4\uff0c\u5b83\u53ea\u5f71\u54cd\u8fdb\u7a0b\u5728\u5c31\u7eea\u961f\u5217\u4e2d\u56e0\u7b49\u5f85\u6240\u9700\u7684\u65f6\u95f4\u3002\u7b49\u5f85\u65f6\u95f4\u4e3a\u5728\u5c31\u7eea\u961f\u5217\u4e2d\u7b49\u5f85\u6240\u82b1\u65f6\u95f4\u4e4b\u548c\u3002</li> <li>\u54cd\u5e94\u65f6\u95f4\uff1a\u5bf9\u4e8e\u4ea4\u4e92\u7cfb\u7edf\uff0c\u5468\u8f6c\u65f6\u95f4\u4e0d\u662f\u6700\u4f73\u51c6\u5219\u3002\u901a\u5e38\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u76f8\u5f53\u65e9\u5730\u4ea7\u751f\u8f93\u51fa\uff0c\u5e76\u4e14\u7ee7\u7eed\u8ba1\u7b97\u65b0\u7684\u7ed3\u679c\u540c\u65f6\u8f93\u51fa\u4ee5\u524d\u7684\u7ed3\u679c\u7ed9\u7528\u6237\u3002\u56e0\u6b64\uff0c\u53e6\u4e00\u65f6\u95f4\u662f\u4ece\u63d0\u4ea4\u8bf7\u6c42\u5230\u4ea7\u751f\u7b2c\u4e00\u54cd\u5e94\u7684\u65f6\u95f4\u3002\u8fd9\u79cd\u65f6\u95f4\u79f0\u4e3a\u54cd\u5e94\u65f6\u95f4\uff0c\u662f\u5f00\u59cb\u76f8\u5e94\u6240\u9700\u7684\u65f6\u95f4\uff0c\u800c\u975e\u8f93\u51fa\u76f8\u5e94\u6240\u9700\u7684\u65f6\u95f4\u3002\u5468\u8f6c\u65f6\u95f4\u901a\u5e38\u53d7\u8f93\u51fa\u8bbe\u5907\u901f\u5ea6\u7684\u9650\u5236\u3002</li> </ul>"},{"location":"operating_system/basic/process_management/#_19","title":"\u8c03\u5ea6\u7b97\u6cd5","text":"<p>CPU\u8c03\u5ea6\u5904\u7406\u7684\u95ee\u9898\u662f\uff1a\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u62e9\u8fdb\u7a0b\u4ee5\u4fbf\u4e3a\u5176\u5206\u914dCPU\u3002</p>"},{"location":"operating_system/basic/process_management/#_20","title":"\u5148\u5230\u5148\u670d\u52a1","text":"<p>First-Come First-Served, FCFS\uff0c\u6700\u7b80\u5355\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4f46\u5b83\u4f1a\u8ba9\u6bb5\u8fdb\u57ce\u7b49\u5f85\u5f88\u957f\u7684\u8fdb\u7a0b\u3002</p>"},{"location":"operating_system/basic/process_management/#_21","title":"\u6700\u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6","text":"<p>Shortest-Job-First, SJF\uff0c\u5728\u6700\u77ed\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u610f\u4e49\u4e0a\u662f\u6700\u4f73\u7684\u3002</p> <p>\u7136\u800c\uff0cSJF\u8c03\u5ea6\u5b9e\u73b0\u7684\u96be\u70b9\u5728\u4e8e\u9884\u6d4b\u4e0b\u4e00\u4e2aCPU\u6267\u884c\u7684\u957f\u5ea6\u3002</p>"},{"location":"operating_system/basic/process_management/#_22","title":"\u4f18\u5148\u7ea7\u8c03\u5ea6","text":"<p>Priority-Scheduling\uff0cSJF\u7b97\u6cd5\u662f\u901a\u7528\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\uff08\u7b80\u5355\u5206\u914dCPU\u5230\u5177\u6709\u6700\u4f18\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\uff09\u7684\u4e00\u4e2a\u7279\u4f8b\u3002</p> <p>\u4f18\u5148\u7ea7\u548cSJF\u7684\u8c03\u5ea6\u53ef\u80fd\u4ea7\u751f\u9965\u997f\uff0c\u8001\u5316\u6280\u672f\u963b\u6b62\u9965\u997f\u3002</p>"},{"location":"operating_system/basic/process_management/#_23","title":"\u8f6e\u8f6c\u8c03\u5ea6","text":"<p>Round-Robin, RR\uff0c\u66f4\u9002\u5408\u4e8e\u5206\u65f6\uff08\u4ea4\u4e92\uff09\u7cfb\u7edf\u3002RR\u8c03\u5ea6\u4e3a\u5c31\u7eea\u961f\u5217\u7684\u9996\u4e2a\u8fdb\u7a0b\uff0c\u5206\u914d q \u4e2a\u65f6\u95f4\u5355\u4f4d\uff0c\u8fd9\u91cc q \u662f\u65f6\u95f4\u7247\u3002\u5728 q \u4e2a\u65f6\u95f4\u5355\u4f4d\u4e4b\u540e\uff0c\u5982\u679c\u8be5\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u91ca\u653eCPU\uff0c\u90a3\u4e48\u5b83\u88ab\u5f3a\u5360\u5e76\u6dfb\u52a0\u5230\u5c31\u7eea\u961f\u5217\u5c3e\u90e8\u3002</p> <p>\u8be5\u7b97\u6cd5\u7684\u4e3b\u8981\u95ee\u9898\u662f\u9009\u62e9\u65f6\u95f4\u7247\u3002\u5982\u679c\u65f6\u95f4\u7247\u592a\u5927\uff0c\u90a3\u4e48RR\u7b97\u6cd5\u5c31\u53d8\u6210\u4e86FCFS\u7b97\u6cd5\uff1b\u5982\u679c\u65f6\u95f4\u7247\u592a\u5c0f\uff0c\u90a3\u4e48\u6709\u4e0a\u4e0b\u6587\u5207\u6362\u5f15\u8d77\u7684\u8c03\u5ea6\u5f00\u9500\u5c31\u8fc7\u5927\u3002</p> <p>FCFS\u7b97\u6cd5\u662f\u975e\u62a2\u5360\u7684\uff0c\u800cRR\u7b97\u6cd5\u662f\u62a2\u5360\u7684\u3002SJF\u548c\u4f18\u5148\u7ea7\u7b97\u6cd5\u53ef\u4ee5\u662f\u62a2\u5360\u7684\u4e5f\u53ef\u4ee5\u662f\u975e\u62a2\u5360\u7684\u3002</p>"},{"location":"operating_system/basic/process_management/#_24","title":"\u591a\u7ea7\u961f\u5217\u8c03\u5ea6","text":"<p>Multilevel queue scheduling\uff0c\u5141\u8bb8\u591a\u4e2a\u4e0d\u540c\u7b97\u6cd5\u7528\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u8fdb\u7a0b\u3002\u6700\u5e38\u7528\u6a21\u578b\u5305\u62ec\uff1a\u4f7f\u7528RR\u8c03\u5ea6\u7684 \u524d\u53f0\u4ea4\u4e92\u961f\u5217 \u4e0e\u4f7f\u7528FCFS\u8c03\u5ea6\u7684 \u540e\u53f0\u6279\u5904\u7406\u961f\u5217 \u3002</p>"},{"location":"operating_system/basic/process_management/#_25","title":"\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6","text":"<p>Multilevel feedback queue scheduling\uff0c\u591a\u53ca\u53cd\u9988\u961f\u5217\u5141\u8bb8\u8fdb\u7a0b\u5728\u961f\u5217\u4e4b\u95f4\u8fc1\u79fb\u3002</p>"},{"location":"operating_system/basic/process_management/#_26","title":"\u7ebf\u7a0b\u8c03\u5ea6","text":"<p>\u5728\u652f\u6301\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u5185\u6838\u7ea7\u7ebf\u7a0b\uff08\u800c\u4e0d\u662f\u8fdb\u7a0b\uff09\u624d\u662f\u64cd\u4f5c\u7cfb\u7edf\u6240\u8c03\u5ea6\u7684\u3002\u7528\u6237\u7ea7\u7ebf\u7a0b\u662f\u7531\u7ebf\u7a0b\u5e93\u6765\u7ba1\u7406\u7684\uff0c\u800c\u5185\u6838\u5e76\u4e0d\u77e5\u9053\u5b83\u4eec\u3002\u7528\u6237\u7ebf\u7a0b\u4e3a\u4e86\u8fd0\u884c\u5728CPU\u4e0a\uff0c\u6700\u7ec8\u5e94\u6620\u5c04\u5230\u76f8\u5173\u7684\u5185\u6838\u7ea7\u7ebf\u7a0b\uff0c\u4f46\u8fd9\u79cd\u6620\u5c04\u53ef\u80fd\u4e0d\u662f\u76f4\u63a5\u7684\uff0c\u53ef\u80fd\u91c7\u7528 \u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff08LWP\uff09 \u3002</p>"},{"location":"operating_system/basic/process_management/#_27","title":"\u591a\u5904\u7406\u5668\u8c03\u5ea6","text":"<p>\u8bb8\u591a\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u591a\u5904\u7406\u5668\uff0c\u5e76\u5141\u8bb8\u6bcf\u4e2a\u5904\u7406\u5668\u72ec\u7acb\u8c03\u5ea6\u3002\u901a\u5e38\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u7ef4\u62a4\u5404\u81ea\u7684\u3001\u79c1\u6709\u7684\u3001\u53ef\u8fd0\u884c\u7684\u8fdb\u7a0b\uff08\u6216\u7ebf\u7a0b\uff09\u961f\u5217\u3002\u4e0e\u591a\u5904\u7406\u5668\u8c03\u5ea6\u76f8\u5173\u7684\u95ee\u9898\u5305\u62ec\u5904\u7406\u5668\u4eb2\u548c\u6027\u3001\u8d1f\u8f7d\u5e73\u8861\u548c\u591a\u6838\u5904\u7406\u7b49\u3002</p>"},{"location":"operating_system/basic/process_management/#cpu","title":"\u5b9e\u65f6CPU\u8c03\u5ea6","text":"<p>\u5b9e\u65f6\u8ba1\u7b97\u673a\u7cfb\u7edf\u8981\u6c42\u5728\u622a\u6b62\u671f\u9650\u4e4b\u524d\u5f97\u5230\u7ed3\u679c\uff1b\u5728\u622a\u6b62\u671f\u9650\u4e4b\u540e\u5f97\u5230\u7684\u7ed3\u679c\u662f\u65e0\u7528\u7684\u3002\u786c\u5b9e\u65f6\u7cfb\u7edf\uff08hard read-time system\uff09\u5e94\u4fdd\u8bc1\uff0c\u5b9e\u65f6\u4efb\u52a1\u5728\u622a\u6b62\u671f\u9650\u5185\u5f97\u5230\u670d\u52a1\u3002\u8f6f\u5b9e\u65f6\u7cfb\u7edf\uff08soft read-time system\uff09\u7684\u9650\u5236\u8f83\u5c11\uff0c\u5206\u914d\u7ed9\u5b9e\u65f6\u4efb\u52a1\u7684\u8c03\u5ea6\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5176\u4ed6\u670d\u52a1\u3002</p> <p>\u5b9e\u65f6\u8c03\u5ea6\u7b97\u6cd5\u5305\u62ec \u5355\u8c03\u901f\u7387\uff08rate-monotonic\uff09\u548c \u6700\u65e9\u622a\u6b62\u4f18\u5148\uff08Earliest-Deadline-First, EDF\uff09\u8c03\u5ea6\u3002\u5355\u8c03\u901f\u7387\u8c03\u5ea6\u901a\u5e38\u4e3a\u9700\u8981\u66f4\u591aCPU\u7684\u4efb\u52a1\uff0c\u5206\u914d\u66f4\u9ad8\u4f18\u5148\u7ea7\u3002\u6700\u65e9\u622a\u6b62\u4f18\u5148\u961f\u5217\u6839\u636e\u5373\u5c06\u5230\u6765\u7684\u622a\u6b62\u671f\u9650\u6765\u5206\u914d\u4f18\u5148\u7ea7\uff1b\u622a\u6b62\u671f\u9650\u8d8a\u65e9\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002\u6bd4\u4f8b\u5206\u4eab\u8c03\u5ea6\uff08proportional share\uff09\u5c06\u5904\u7406\u5668\u65f6\u95f4\u5212\u5206\u4e3a\u80a1\u4efd\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u4e00\u4e2a\u6570\u91cf\u7684\u4efd\u989d\uff0c\u4ece\u800c\u4fdd\u8bc1\u6bcf\u4e2a\u8fdb\u7a0b\u5177\u6709\u6309\u6bd4\u4f8b\u7684CPU\u65f6\u95f4\u4efd\u989d\u3002</p> <p>POSIX\u548cPthreads API\u4e3a\u5b9e\u65f6\u8c03\u5ea6\u7ebf\u7a0b\uff0c\u4e5f\u63d0\u4f9b\u5404\u79cd\u7279\u5f81\u3002</p>"},{"location":"operating_system/basic/process_management/#_28","title":"\u64cd\u4f5c\u7cfb\u7edf\u4f8b\u5b50","text":"<p>\u652f\u6301\u5185\u6838\u7ea7\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e94\u8c03\u5ea6\u6267\u884c\u7ebf\u7a0b\uff08\u800c\u4e0d\u662f\u8fdb\u7a0b\uff09\u3002Solaris\u548cWindows\u5c31\u662f\u8fd9\u6837\u7684\u7cfb\u7edf\u3002\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u90fd\u901a\u8fc7\u57fa\u4e8e\u62a2\u5360\u7684\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\u6765\u8c03\u5ea6\u7ebf\u7a0b\uff0c\u5305\u62ec\u652f\u6301\u5b9e\u65f6\u7ebf\u7a0b\u3002Linux\u8fdb\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\u4f7f\u7528\u57fa\u4e8e\u4f18\u5148\u7ea7\u7684\u7b97\u6cd5\uff0c\u4e5f\u63d0\u4f9b\u5b9e\u65f6\u652f\u6301\u3002\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u8c03\u5ea6\u7b97\u6cd5\u901a\u5e38\u504f\u5411\u652f\u6301\u4ea4\u4e92\u5f0f\u8fdb\u7a0b\uff08\u800c\u975eCPU\u5bc6\u96c6\u578b\u7ee7\u627f\uff09\u3002</p>"},{"location":"operating_system/basic/process_management/#_29","title":"\u7b97\u6cd5\u8bc4\u4f30","text":"<p>\u5404\u79cd\u5404\u6837\u7684\u8c03\u5ea6\u7b97\u6cd5\u8981\u6c42\u6709\u9009\u62e9\u7b97\u6cd5\u7684\u65b9\u6cd5\u3002\u5206\u6790\u65b9\u6cd5\u4f7f\u7528 \u6570\u5b66\u5206\u6790 \u6cd5\u4ee5\u786e\u5b9a\u7b97\u6cd5\u6027\u80fd\u3002\u4eff\u771f \u65b9\u6cd5\u5bf9\u4ee3\u8868\u6027\u7684\u8fdb\u7a0b\uff0c\u91c7\u7528\u8c03\u5ea6\u7b97\u6cd5\u4eff\u771f\uff0c\u5e76\u8ba1\u7b97\u6027\u80fd\uff0c\u8fdb\u800c\u786e\u5b9a\u4f18\u52a3\u3002\u7136\u800c\uff0c\u4eff\u771f\u6700\u591a\u53ea\u80fd\u63d0\u4f9b\u771f\u5b9e\u7cfb\u7edf\u6027\u80fd\u7684\u8fd1\u4f3c\u503c\u3002\u8bc4\u4f30\u8c03\u5ea6\u7b97\u6cd5\u7684\u552f\u4e00\u53ef\u9760\u6280\u672f\u662f\uff1a\u5728\u5b9e\u9645\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u7b97\u6cd5\uff0c\u5e76\u5728\u201c\u73b0\u5b9e\u4e16\u754c\u201d\u73af\u5883\u4e2d\u76d1\u89c6\u6027\u80fd\u3002</p>"},{"location":"operating_system/basic/process_management/#_30","title":"\u540c\u6b65","text":"<p>\u534f\u4f5c\u8fdb\u7a0b\uff08cooperating process\uff09\u80fd\u4e0e\u7cfb\u7edf\u5185\u7684\u5176\u4ed6\u8fdb\u7a0b\u76f8\u4e92\u5f71\u54cd\u3002\u534f\u4f5c\u8fdb\u7a0b\u6216\u80fd\u76f4\u63a5\u5171\u4eab\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff08\u5373\u4ee3\u7801\u548c\u6570\u636e\uff09\uff0c\u6216\u80fd\u901a\u8fc7\u6587\u4ef6\u6216\u6d88\u606f\u6765\u5171\u4eab\u6570\u636e\u3002\u524d\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u6765\u5b9e\u73b0\u3002\u7136\u800c\uff0c\u5171\u4eab\u6570\u636e\u7684\u5e76\u53d1\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u3002\u8fd9\u4e00\u8282\u8ba8\u8bba\u591a\u79cd\u673a\u5236\uff0c\u4ee5\u4fbf\u786e\u4fdd\u540c\u4e00\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u7684\u534f\u4f5c\u8fdb\u7a0b\u7684\u6709\u5e8f\u6267\u884c\uff0c\u4ece\u800c\u7ef4\u62a4\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</p>"},{"location":"operating_system/basic/process_management/#_31","title":"\u80cc\u666f","text":"<ul> <li>\u7ade\u4e89\u6761\u4ef6\uff08race condition\uff09\uff1a\u591a\u4e2a\u8fdb\u7a0b\u5e76\u53d1\u8bbf\u95ee\u548c\u64cd\u4f5c\u540c\u4e00\u6570\u636e\u5e76\u4e14\u6267\u884c\u7ed3\u679c\u4e0e\u7279\u5b9a\u8bbf\u95ee\u987a\u5e8f\u6709\u5173\u3002</li> </ul> <p>\u7531\u4e8e\u7ade\u4e89\u6761\u4ef6\u7684\u5b58\u5728\uff0c\u6211\u4eec\u5206\u6790 \u8fdb\u7a0b\u540c\u6b65\uff08process synchronization\uff09\u548c \u8fdb\u7a0b\u534f\u8c03\uff08process coordination\uff09\u3002</p>"},{"location":"operating_system/basic/process_management/#_32","title":"\u4e34\u754c\u533a\u95ee\u9898","text":"<p>\u5047\u8bbe\u67d0\u4e2a\u7cfb\u7edf\u6709 n \u4e2a\u8fdb\u7a0b {P_0, P_1, ..., P_{n-1}}\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e00\u6bb5\u4ee3\u7801\uff0c\u79f0\u4e3a \u4e34\u754c\u533a\uff08critical section\uff09\uff0c\u8fdb\u7a0b\u5728\u6267\u884c\u8be5\u533a\u65f6\u53ef\u80fd\u4fee\u6539\u516c\u5171\u53d8\u91cf\u3001\u66f4\u65b0\u4e00\u4e2a\u8868\u3001\u5199\u4e00\u4e2a\u6587\u4ef6\u7b49\u3002\u8be5\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u5f81\u662f\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5728\u4e34\u754c\u533a\u5185\u6267\u884c\u65f6\uff0c\u5176\u4ed6\u8fdb\u7a0b\u4e0d\u5141\u8bb8\u5728\u5404\u81ea\u7684\u4e34\u754c\u533a\u6267\u884c\u3002</p> <p>\u4e34\u754c\u533a\u95ee\u9898\uff08ciritical-section problem\uff09\u662f\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u534f\u8bae\u4ee5\u4fbf\u534f\u4f5c\u8fdb\u7a0b\u3002\u5728\u8fdb\u5165\u4e34\u754c\u533a\u524d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5e94\u8bf7\u6c42\u8bb8\u53ef\u3002\u5b9e\u73b0\u8fd9\u4e00\u8bf7\u6c42\u7684\u4ee3\u7801\u6bb5\u79f0\u4e3a \u8fdb\u5165\u533a\uff08entry section\uff09\u3002\u4e34\u754c\u533a\u4e4b\u540e\u53ef\u4ee5\u6709 \u9000\u51fa\u533a\uff08exit-section\uff09\uff0c\u5176\u4ed6\u4ee3\u7801\u4e3a \u5269\u4f59\u533a\uff08remainder section\uff09\u3002\u4e00\u4e2a\u5178\u578b\u8fdb\u7a0b P_i \u7684\u901a\u7528\u7ed3\u6784\u5982\u4e0b\u5982\u6240\u793a\uff1a</p> <p></p> <p>\u4e34\u754c\u533a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u5e94\u6ee1\u8db3\u5982\u4e0b\u4e09\u6761\u8981\u6c42\uff1a</p> <ul> <li>\u4e92\u65a5\uff08mutual exclusion\uff09\uff1a\u5982\u679c\u8fdb\u7a0b P_i \u5728\u5176\u4e34\u754c\u533a\u5185\u6267\u884c\uff0c\uff0c\u90a3\u4e48\u5176\u5b83\u8fdb\u7a0b\u90fd\u4e0d\u80fd\u5728\u5176\u4e34\u754c\u533a\u5185\u6267\u884c\u3002</li> <li>\u8fdb\u6b65\uff08progress\uff09\uff1a\u5982\u679c\u6ca1\u6709\u8fdb\u7a0b\u5728\u5176\u4e34\u754c\u533a\u5185\u6267\u884c\uff0c\u5e76\u4e14\u6709\u8fdb\u7a0b\u9700\u8981\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u90a3\u4e48\u53ea\u6709\u90a3\u4e9b\u4e0d\u5728\u5269\u4f59\u533a\u5185\u6267\u884c\u7684\u8fdb\u7a0b\u53ef\u4f5c\u5907\u9009\uff0c\u4ee5\u4fbf\u786e\u5b9a\u8c01\u80fd\u4e0b\u6b21\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u800c\u4e14\u8fd9\u79cd\u9009\u62e9\u4e0d\u80fd\u65e0\u9650\u63a8\u8fdf\u3002</li> <li>\u6709\u9650\u7b49\u5f85\uff08bounded waiting\uff09\uff1a\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u505a\u51fa\u8fdb\u5165\u4e34\u754c\u533a\u7684\u8bf7\u6c42\u76f4\u5230\u8fd9\u4e2a\u8bf7\u6c42\u5141\u8bb8\u4e3a\u6b62\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5141\u8bb8\u8fdb\u5165\u4e34\u754c\u533a\u7684\u6b21\u6570\u5177\u6709\u4e0a\u9650\u3002</li> </ul> <p>Peterson\u89e3\u51b3\u65b9\u6848 \u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u57fa\u4e8e\u8f6f\u4ef6\u7684\u4e34\u754c\u533a\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u3002\u6ee1\u8db3\u4e92\u65a5\u3001\u8fdb\u6b65\u3001\u6709\u9650\u7b49\u5f85\u7b49\u8981\u6c42\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u590d\u6742\u6027\u8981\u6c42\u3002</p>"},{"location":"operating_system/basic/process_management/#_33","title":"\u786c\u4ef6\u540c\u6b65","text":"<p>\u5bf9\u4e8e\u4e34\u754c\u533a\u95ee\u9898\uff0c\u57fa\u4e8e\u8f6f\u4ef6\u7684\u89e3\u51b3\u65b9\u6848\uff08\u5982Peterson\u89e3\u7b54\uff09\u5e76\u4e0d\u4fdd\u8bc1\u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e0a\u6b63\u786e\u5de5\u4f5c\u3002</p> <p>\u4e0b\u9762\u63a2\u8ba8\u4e00\u4e9b\u5176\u4ed6\u89e3\u7b54\uff0c\u5305\u62ec\u5185\u6838\u5f00\u53d1\u4eba\u5458\u548c\u5e94\u7528\u7a0b\u5e8f\u5458\u91c7\u7528\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6API\u6280\u672f\u3002\u6240\u6709\u8fd9\u4e9b\u7686\u5927\u90fd\u662f\u57fa\u4e8e \u52a0\u9501\uff08locking\uff09\u4e3a\u524d\u63d0\u7684\uff0c\u5373\u901a\u8fc7\u9501\u6765\u4fdd\u62a4\u4e34\u754c\u533a\u3002</p> <p>\u7b80\u5355\u5730 \u7981\u6b62\u4e2d\u65ad \u53ef\u4ee5\u7528\u4e8e\u5355\u5904\u7406\u5668\u73af\u5883\uff1a\u5728\u4fee\u6539\u5171\u4eab\u53d8\u91cf\u65f6\u7981\u6b62\u4e2d\u65ad\u51fa\u73b0\u3002</p> <p>\u7136\u800c\uff0c\u591a\u5904\u7406\u5176\u73af\u5883\u4e0b\u6d88\u606f\u8981\u4f20\u9012\u5230\u6240\u6709\u5904\u7406\u5668\uff0c\u8be5\u8fc7\u7a0b\u5bfc\u81f4\u7684\u5ef6\u65f6\u4f1a\u964d\u4f4e\u7cfb\u7edf\u6548\u7387\uff1b\u53e6\u5916\uff0c\u5982\u679c\u7cfb\u7edf\u65f6\u949f\u662f\u901a\u8fc7\u4e2d\u65ad\u66f4\u65b0\u7684\uff0c\u5219\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u8bb8\u591a\u73b0\u4ee3\u7cfb\u7edf\u63d0\u4f9b\u7279\u6b8a\u786c\u4ef6\u6307\u4ee4\uff0c\u7528\u4e8e\u76d1\u6d4b\u548c\u4fee\u6539\u5b57\u7684\u5185\u5bb9\uff0c\u6216\u8005\u7528\u4e8e \u539f\u5b50\u5730\uff08atomically\uff09\u4ea4\u6362\u4e24\u4e2a\u5b57\uff08\u4f5c\u4e3a\u4e0d\u53ef\u4e2d\u65ad\u7684\u6307\u4ee4\uff09\u3002</p>"},{"location":"operating_system/basic/process_management/#_34","title":"\u4e92\u65a5\u9501","text":"<p>\u4e34\u754c\u533a\u95ee\u9898\u57fa\u4e8e\u786c\u4ef6\u7684\u89e3\u51b3\u65b9\u6848\u4e0d\u4f46\u590d\u6742\uff0c\u800c\u4e14\u4e0d\u80fd\u4e3a\u7a0b\u5e8f\u5458\u76f4\u63a5\u4f7f\u7528\u3002\u56e0\u6b64\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u4eba\u5458\u6784\u5efa\u8f6f\u4ef6\u5de5\u5177\uff0c\u4ee5\u89e3\u51b3\u4e34\u754c\u533a\u95ee\u9898\u3002\u6700\u7b80\u5355\u7684\u5de5\u5177\u5c31\u662f \u4e92\u65a5\u9501\uff08mutex lock\uff09\u3002\u6211\u4eec\u4f7f\u7528\u4e92\u65a5\u9501\u6765\u4e2a\u4fdd\u62a4\u4e34\u754c\u533a\uff0c\u4ece\u800c\u9632\u6b62\u7ade\u4e89\u6761\u4ef6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fdb\u5165\u4e34\u754c\u533a\u65f6\u5e94\u5f97\u5230\u9501\uff1b\u5b83\u5728\u9000\u51fa\u4e34\u754c\u533a\u65f6\u91ca\u653e\u9501\u3002\u51fd\u6570<code>acquire()</code>\u83b7\u53d6\u6240\uff0c\u800c\u51fd\u6570<code>release()</code>\u91ca\u653e\u9501\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6bcf\u4e2a\u4e92\u65a5\u9501\u6709\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf<code>available</code>\uff0c\u5b83\u7684\u503c\u8868\u793a\u9501\u662f\u5426\u53ef\u7528\u3002\u5982\u679c\u9501\u662f\u53ef\u7528\u7684\uff0c\u90a3\u4e48\u8c03\u7528<code>acquire()</code>\u4f1a\u6210\u529f\uff0c\u5e76\u4e14\u9501\u4e0d\u518d\u53ef\u7528\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u8bd5\u56fe\u83b7\u53d6\u4e0d\u53ef\u7528\u7684\u9501\u65f6\uff0c\u5b83\u4f1a\u963b\u585e\uff0c\u77e5\u9053\u9501\u88ab\u91ca\u653e\u3002</p> <p>\u6309\u5982\u4e0b\u5b9a\u4e49<code>acquire()</code>\uff1a <pre><code>acquire() {\n    while (!available)\n        ; /* busy wait */\n    available = false;\n}\n</code></pre></p> <p>\u6309\u5982\u4e0b\u5b9a\u4e49<code>release()</code>\uff1a <pre><code>release() {\n    available = true;\n}\n</code></pre></p> <p>\u5bf9<code>acquire()</code>\u548c<code>release()</code>\u7684\u8c03\u7528\u5fc5\u987b\u539f\u5b50\u5730\u6267\u884c\u3002\u56e0\u6b64\uff0c\u4e92\u65a5\u9501\u901a\u5e38\u91c7\u7528\u786c\u4ef6\u673a\u5236\u6765\u5b9e\u73b0\u3002</p> <p>\u8fd9\u91cc\u6240\u7ed9\u5b9e\u73b0\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\uff1a\u5b83\u9700\u8981 \u5fd9\u7b49\u5f85\uff08busy waiting\uff09\u3002\u5f53\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5728\u4e34\u754c\u533a\u4e2d\uff0c\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u5728\u8fdb\u5165\u4e34\u754c\u533a\u65f6\u5fc5\u987b\u8fde\u7eed\u5faa\u73af\u5730\u8c03\u7528<code>acquire()</code>\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u4e92\u65a5\u9501\u4e5f\u88ab\u79f0\u4e3a \u81ea\u65cb\u9501\uff08spinlock\uff09\uff0c\u56e0\u4e3a\u8fdb\u7a0b\u4e0d\u505c\u5730\u65cb\u8f6c\uff0c\u4ee5\u7b49\u5f85\u9501\u53d8\u5f97\u53ef\u7528\u3002\u5728\u5b9e\u9645\u591a\u9053\u7a0b\u5e8f\u7cfb\u7edf\u4e2d\uff0c\u5373\u5f53\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u540c\u4e00CPU\u65f6\uff0c\u8fd9\u79cd\u8fde\u7eed\u5faa\u73af\u663e\u7136\u662f\u4e2a\u95ee\u9898\u3002\u5fd9\u7b49\u5f85\u6d6a\u8d39CPU\u5468\u671f\uff0c\u800c\u8fd9\u539f\u672c\u53ef\u4ee5\u6709\u6548\u7528\u4e8e\u5176\u4ed6\u8fdb\u7a0b\u3002</p> <p>\u81ea\u65cb\u9501\u7684\u4f18\u70b9\uff1a \u5f53\u8fdb\u7a0b\u5728\u7b49\u5f85\u9501\u65f6\uff0c\u6ca1\u6709\u4e0a\u4e0b\u6587\u5207\u6362\uff08\u4e0a\u4e0b\u6587\u5207\u6362\u53ef\u80fd\u9700\u8981\u76f8\u5f53\u957f\u7684\u65f6\u95f4\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u4f7f\u7528\u9501\u7684\u65f6\u95f4\u8f83\u77ed\u65f6\uff0c\u81ea\u65cb\u9501\u8fd8\u662f\u6709\u7528\u7684\u3002\u81ea\u65cb\u9501\u901a\u5e38\u7528\u4e8e\u591a\u5904\u7406\u5668\u7cfb\u7edf\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5728\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u201c\u65cb\u8f6c\u201d\uff0c\u800c\u5176\u4ed6\u7ebf\u7a0b\u5728\u5176\u4ed6\u5904\u7406\u5668\u4e0a\u6267\u884c\u4e34\u754c\u533a\u3002</p>"},{"location":"operating_system/basic/process_management/#_35","title":"\u4fe1\u53f7\u91cf","text":"<p>\u4e92\u65a5\u9501\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u6700\u7b80\u5355\u7684\u540c\u6b65\u5de5\u5177\u3002\u672c\u8282\u8ba8\u8bba\u4e00\u4e2a\u66f4\u9c81\u68d2\u7684\u5de5\u5177\uff0c\u5b83\u7684\u529f\u80fd\u7c7b\u4f3c\u4e8e\u4e92\u65a5\u9501\uff0c\u4f46\u5b83\u80fd\u63d0\u4f9b\u66f4\u4e3a\u9ad8\u7ea7\u7684\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u8fdb\u7a0b\u80fd\u591f\u540c\u6b65\u6d3b\u52a8\u3002</p> <p>\u4e00\u4e2a \u4fe1\u53f7\u91cf\uff08semaphore\uff09S\u662f\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\uff0c\u5b83\u9664\u4e86\u521d\u59cb\u5316\u5916\u80fd\u901a\u8fc7\u4e24\u4e2a\u6807\u51c6\u539f\u5b50\u64cd\u4f5c\uff1a<code>wait()</code>\u548c<code>signal()</code>\u6765\u8bbf\u95ee\u3002</p> <p>\u53ef\u6309\u5982\u4e0b\u5b9a\u4e49<code>wait()</code>: <pre><code>wait(S) {\n    while (S &lt;= 0)\n        ; // busy wait\n    S--;\n}\n</code></pre></p> <p>\u53ef\u6309\u5982\u4e0b\u5b9a\u4e49<code>signal()</code>\uff1a <pre><code>signal(S) {\n    S++;\n}\n</code></pre></p>"},{"location":"operating_system/basic/process_management/#_36","title":"\u4fe1\u53f7\u91cf\u7684\u4f7f\u7528","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u901a\u5e38\u533a\u5206\u8ba1\u6570\u4fe1\u53f7\u91cf\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3002\u8ba1\u6570\u4fe1\u53f7\u91cf\uff08counting semaphore\uff09\u7684\u503c\u4e0d\u53d7\u9650\u5236\uff0c\u800c \u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff08binary semaphore\uff09\u7684\u503c\u53ea\u80fd\u4e3a 0 \u6216 1\u3002\u56e0\u6b64\uff0c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7c7b\u4f3c\u4e8e\u4e92\u65a5\u9501\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6ca1\u6709\u63d0\u4f9b\u4e92\u65a5\u9501\u7684\u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6765\u5b9e\u73b0\u4e92\u65a5\u3002</p> <p>\u8ba1\u6570\u4fe1\u53f7\u91cf\u53ef\u4ee5\u7528\u4e8e\u63a7\u5236\u8bbf\u95ee\u5177\u6709\u591a\u4e2a\u5b9e\u4f8b\u7684\u67d0\u79cd\u8d44\u6e90\u3002\u4fe1\u53f7\u91cf\u7684\u521d\u503c\u4e3a\u53ef\u7528\u8d44\u6e90\u7684\u6570\u91cf\u3002\u5f53\u8fdb\u7a0b\u9700\u8981\u4f7f\u7528\u8d44\u6e90\u65f6\uff0c\u9700\u8981\u5bf9\u8be5\u4fe1\u53f7\u91cf\u6267\u884c<code>wait()</code>\u64cd\u4f5c\uff08\u51cf\u5c11\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\uff09\u3002\u5f53\u8fdb\u884c\u8d44\u6e90\u91ca\u653e\u65f6\uff0c\u9700\u8981\u5bf9\u8be5\u4fe1\u53f7\u91cf\u6267\u884c<code>signal()</code>\u64cd\u4f5c\uff08\u589e\u52a0\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\uff09\u3002\u5f53\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u4e3a 0 \u65f6\uff0c\u6240\u6709\u8d44\u6e90\u90fd\u5728\u4f7f\u7528\u4e2d\u3002\u4e4b\u540e\uff0c\u9700\u8981\u4f7f\u7528\u8d44\u6e90\u7684\u8fdb\u7a0b\u5c06\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u8ba1\u6570\u5927\u4e8e 0 \u3002</p> <p>\u4f7f\u7528\u4fe1\u53f7\u91cf\u89e3\u51b3\u540c\u6b65\u95ee\u9898\u7684\u4f8b\u5b50\uff1a \u73b0\u6709\u4e24\u4e2a\u5e76\u53d1\u6267\u884c\u7684\u8fdb\u7a0b\uff1aP1\u6709\u8bed\u53e5<code>S1</code>\u800cP2\u6709\u8bed\u53e5<code>S2</code>\u3002\u5047\u8bbe\u8981\u6c42\u53ea\u6709\u5728<code>S1</code>\u6267\u884c\u540e\u624d\u80fd\u6267\u884c<code>S2</code>\uff0c\u5219\u53ef\u4ee5\u7528\u4fe1\u53f7\u91cf\u8f7b\u677e\u5b9e\u73b0\u8fd9\u4e00\u8981\u6c42\uff1a\u8ba9P1\u548cP2\u5171\u4eab\u540c\u4e00\u4fe1\u53f7\u91cf<code>synch</code>\uff0c\u5e76\u4e14\u521d\u59cb\u5316\u4e3a 0\u3002\u5728\u8fdb\u7a0bP1\u4e2d\uff0c\u63d2\u5165\u8bed\u53e5\uff1a <pre><code>S1;\nsignal(synch);\n</code></pre></p> <p>\u5728\u8fdb\u7a0bP2\u4e2d\uff0c\u63d2\u5165\u8bed\u53e5\uff1a <pre><code>wait(synch);\nS2;\n</code></pre></p>"},{"location":"operating_system/basic/process_management/#_37","title":"\u4fe1\u53f7\u91cf\u7684\u5b9e\u73b0","text":"<p>\u4e0e\u81ea\u65cb\u9501\u7684\u5b9e\u73b0\u5177\u6709\u5fd9\u7b49\u5f85\u76f8\u540c\uff0c\u4e0a\u8ff0\u4fe1\u53f7\u91cf\u64cd\u4f5c<code>wait()</code>\u548c<code>signal()</code>\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898\u3002\u4e3a\u4e86\u514b\u670d\u5fd9\u7b49\u5f85\u9700\u8981\uff0c\u53ef\u4ee5\u8fd9\u6837\u4fee\u6539\u5fd9\u7b49\u5f85\u64cd\u4f5c<code>wait()</code>\u548c<code>signal()</code>\u7684\u5b9a\u4e49\uff1a\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u64cd\u4f5c<code>wait()</code>\u5e76\u4e14\u53d1\u73b0\u4fe1\u53f7\u91cf\u503c\u4e0d\u4e3a\u6b63\u65f6\uff0c\u5b83\u5fc5\u987b\u7b49\u5f85\u3002\u7136\u800c\uff0c\u8be5\u8fdb\u7a0b\u4e0d\u662f\u5fd9\u7b49\u5f85\u800c\u662f\u963b\u585e\u81ea\u5df1\u3002\u963b\u585e\u64cd\u4f5c\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u653e\u5230\u4e0e\u4fe1\u53f7\u91cf\u6709\u5173\u7684\u7b49\u5f85\u961f\u5217\u4e2d\uff0c\u5e76\u4e14\u5c06\u8be5\u8fdb\u7a0b\u72b6\u6001\u5207\u6362\u6210\u7b49\u5f85\u72b6\u6001\u3002\u7136\u540e\uff0c\u8f6c\u5230CPU\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4e00\u8fb9\u9009\u62e9\u6267\u884c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u3002</p> <p>\u7b49\u5f85\u4fe1\u53f7\u91cf S \u800c\u963b\u585e\u7684\u8fdb\u7a0b\uff0c\u5728\u5176\u5b83\u8fdb\u7a0b\u6267\u884c<code>signal()</code>\u540e\uff0c\u5e94\u88ab\u91cd\u65b0\u6267\u884c\u3002\u8fdb\u7a0b\u7684\u91cd\u65b0\u6267\u884c\u662f\u901a\u8fc7\u64cd\u4f5c<code>wakeup()</code>\u6765\u8fdb\u884c\u7684\uff0c\u5b83\u5c06\u8fdb\u7a0b\u4ece\u7b49\u5f85\u72b6\u6001\u6539\u4e3a\u5c31\u7eea\u72b6\u6001\u3002\u7136\u800c\uff0c\u8fdb\u7a0b\u88ab\u6dfb\u52a0\u5230\u5c31\u7eea\u961f\u5217\u3002\uff08\u53d6\u51b3\u4e8eCPU\u8c03\u5ea6\u7b97\u6cd5\uff0cCPU\u53ef\u80fd\u4f1a\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u4ece\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u5207\u6362\u5230\u65b0\u7684\u5c31\u7eea\u8fdb\u7a0b\u3002\uff09</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u6837\u5b9a\u4e49\u7684\u4fe1\u53f7\u91cf\uff0c\u6309\u5982\u4e0b\u5b9a\u4e49\u4fe1\u53f7\u91cf\uff1a <pre><code>typedef struct {\n    int value;\n    struct process *list;\n} semaphore;\n</code></pre></p> <p>\u6bcf\u4e2a\u4fe1\u53f7\u91cf\u90fd\u6709\u4e00\u4e2a\u6574\u6570<code>value</code>\u548c\u4e00\u4e2a\u8fdb\u7a0b\u94fe\u8868<code>list</code>\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5fc5\u987b\u7b49\u5f85\u4fe1\u53f7\u91cf\u65f6\uff0c\u5c31\u88ab\u6dfb\u52a0\u5230\u8fdb\u7a0b\u94fe\u8868\u3002\u64cd\u4f5c<code>signal()</code>\u4ece\u7b49\u5f85\u8fdb\u7a0b\u94fe\u8868\u4e0a\u53d6\u8d70\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u52a0\u4ee5\u5524\u9192\u3002</p> <p>\u73b0\u5728\uff0c\u4fe1\u53f7\u91cf\u64cd\u4f5c<code>wait()</code>\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0bL\uff1a <pre><code>wait(semaphore *S) {\n    S-&gt;value--;\n    if (S-&gt;value &lt; 0) {\n        add this process to S-&gt;list;\n        block();\n    }\n}\n</code></pre></p> <p>\u800c\u4fe1\u53f7\u91cf\u64cd\u4f5c<code>signal()</code>\u53ef\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>signal(semaphore *S) {\n    S-&gt;value++;\n    if (S-&gt;value &lt;= 0) {\n        remove a process P from S-&gt;list;\n        wakeup(P);\n    }\n}\n</code></pre></p> <p>\u64cd\u4f5c<code>block()</code>\u6302\u8d77\u8c03\u7528\u5b83\u7684\u8fdb\u7a0b\u3002\u64cd\u4f5c<code>wakeup(P)</code>\u91cd\u65b0\u542f\u52a8\u963b\u585e\u8fdb\u7a0b P \u7684\u6267\u884c\u3002\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u4f5c\u4e3a\u57fa\u672c\u662f\u7cfb\u7edf\u8c03\u7528\u6765\u63d0\u4f9b\u7684\u3002</p>"},{"location":"operating_system/basic/process_management/#_38","title":"\u7ecf\u5178\u540c\u6b65\u95ee\u9898","text":""},{"location":"operating_system/basic/process_management/#_39","title":"\u6709\u9650\u7f13\u51b2\u95ee\u9898","text":""},{"location":"operating_system/basic/process_management/#-","title":"\u8bfb\u8005-\u4f5c\u8005\u95ee\u9898","text":"<p>\u5047\u8bbe\u4e00\u4e2a\u6570\u636e\u5e93\u4e3a\u591a\u4e2a\u5e76\u53d1\u8fdb\u7a0b\u6240\u5171\u4eab\u3002\u6709\u7684\u8fdb\u7a0b\u53ef\u80fd\u53ea\u9700\u8981\u8bfb\u6570\u636e\u5e93\uff0c\u800c\u5176\u4ed6\u8fdb\u7a0b\u53ef\u80fd\u9700\u8981\u66f4\u65b0\uff08\u8bfb\u548c\u5199\uff09\u6570\u636e\u5e93\u3002\u4e3a\u533a\u5206\u8fd9\u4e24\u7c7b\u8fdb\u7a0b\uff0c\u79f0\u524d\u8005\u4e3a \u8bfb\u8005\uff08reader\uff09\uff0c\u540e\u8005\u4e3a \u4f5c\u8005\uff08writer\uff09\u3002\u5982\u679c</p> <p>\u4ee5\u6570\u636e\u5e93\u4e3a\u4f8b\uff0c\u6211\u4eec\u8981\u6c42\u4f5c\u8005\u5728\u5199\u5165\u6570\u636e\u5e93\u65f6\u5177\u6709\u5171\u4eab\u6570\u636e\u5e93\u72ec\u5360\u7684\u8bbf\u95ee\u6743\u3002\u8fd9\u4e00\u540c\u6b65\u95ee\u9898\u5373 \u8bfb\u8005-\u4f5c\u8005\u95ee\u9898\uff08reader-writer problem\uff09\u3002\u8be5\u95ee\u9898\u81ea\u4ece\u88ab\u63d0\u51fa\u5c31\u4e00\u76f4\u7528\u4e8e\u6d4b\u8bd5\u51e0\u4e4e\u6240\u6709\u65b0\u7684\u540c\u6b65\u539f\u8bed\u3002</p> <ul> <li>\u7b2c\u4e00\u8bfb\u8005-\u4f5c\u8005\u95ee\u9898\uff1a\u8bfb\u8005\u4e0d\u5e94\u4fdd\u6301\u7b49\u5f85\uff0c\u9664\u975e\u4f5c\u8005\u5df2\u7ecf\u83b7\u5f97\u6743\u9650\u4f7f\u7528\u5171\u4eab\u5bf9\u8c61\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u6ca1\u6709\u8bfb\u8005\uff0c\u7531\u4e8e\u67d0\u4e2a\u4f5c\u8005\u7b49\u5f85\uff0c\u800c\u7b49\u5f85\u5176\u4ed6\u8bfb\u8005\u7684\u5b8c\u6210\u3002</li> <li>\u7b2c\u4e8c\u8bfb\u8005-\u4f5c\u8005\u95ee\u9898\uff1a\u4e00\u65e6\u4f5c\u8005\u5c31\u7eea\uff0c\u90a3\u4e48\u4f5c\u8005\u4f1a\u5c3d\u53ef\u80fd\u5feb\u5730\u6267\u884c\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u4f5c\u8005\u7b49\u5f85\u8bbf\u95ee\u5bf9\u8c61\uff0c\u90a3\u4e48\u4e0d\u4f1a\u6709\u8bfb\u8005\u53ef\u4ee5\u5f00\u59cb\u8bfb\u3002</li> </ul> <p>\u6709\u4e9b\u7cfb\u7edf\u5c06\u8bfb\u8005-\u4f5c\u8005\u95ee\u9898\u8fdb\u884c\u62bd\u8c61\uff0c\u4ece\u800c\u63d0\u4f9b \u8bfb\u5199\u9501\uff08read-writer lock\uff09\uff0c\u5728\u83b7\u53d6\u8bfb\u5199\u9501\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u9501\u7684\u6a21\u5f0f\uff1a\u8bfb\u8bbf\u95ee \u548c \u5199\u8bbf\u95ee\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u9700\u8981\u8bfb\u5171\u4eab\u6570\u636e\u65f6\uff0c\u53ef\u7533\u8bf7\u8bfb\u6a21\u5f0f\u7684\u8bfb\u5199\u9501\uff1b\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5e0c\u671b\u4fee\u6539\u5171\u4eab\u6570\u636e\u65f6\uff0c\u5e94\u7533\u8bf7\u5199\u6a21\u5f0f\u7684\u8bfb\u5199\u9501\u3002\u591a\u4e2a\u8fdb\u7a0b\u53ef\u5141\u8bb8\u5e76\u53d1\u83b7\u53d6\u8bfb\u6a21\u5f0f\u7684\u8bfb\u5199\u9501\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u83b7\u53d6\u5199\u6a21\u5f0f\u7684\u8bfb\u5199\u9501\uff0c\u4f5c\u8005\u8fdb\u7a0b\u9700\u8981\u4e92\u65a5\u8bbf\u95ee\u3002</p> <p>\u8bfb\u5199\u9501\u7684\u9002\u7528\u573a\u666f\uff1a</p> <ul> <li>\u5bb9\u6613\u8bc6\u522b\u54ea\u4e9b\u8fdb\u7a0b\u53ea\u8bfb\u5171\u4eab\u6570\u636e\u548c\u54ea\u4e9b\u8fdb\u7a0b\u53ea\u5199\u5171\u4eab\u6570\u636e\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u8bfb\u8005\u8fdb\u7a0b\u6570\u6bd4\u5750\u7740\u8fdb\u7a0b\u6570\u591a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u662f\u56e0\u4e3a\u8bfb\u5199\u9501\u7684\u5efa\u7acb\u5f00\u9500\u901a\u5e38\u5927\u4e8e\u4fe1\u53f7\u91cf\u6216\u4e92\u65a5\u9501\u7684\uff0c\u4f46\u662f\u8fd9\u4e00\u5f00\u9500\u53ef\u4ee5\u901a\u8fc7\u5141\u8bb8\u591a\u4e2a\u8bfb\u8005\u7684\u5e76\u53d1\u7a0b\u5e8f\u7684\u589e\u52a0\u6765\u5f25\u8865\u3002</li> </ul>"},{"location":"operating_system/basic/process_management/#_40","title":"\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898","text":""},{"location":"operating_system/basic/process_management/#_41","title":"\u7ba1\u7a0b","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5e94\u63d0\u4f9b\u673a\u5236\u4ee5\u9632\u6b62\u65f6\u5e8f\u51fa\u9519\uff0c\u5df2\u6709\u591a\u4e2a\u8bed\u8a00\u7ed3\u6784\u53ef\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002\u7ba1\u7a0b\u4e3a\u5171\u4eab\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u63d0\u4f9b\u4e86\u540c\u6b65\u673a\u5236\u3002\u6761\u4ef6\u53d8\u91cf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u7ba1\u7a0b\u51fd\u6570\u963b\u585e\u6267\u884c\u76f4\u5230\u88ab\u901a\u77e5\u53ef\u7ee7\u7eed\u4e3a\u6b62\u3002</p>"},{"location":"operating_system/basic/process_management/#_42","title":"\u540c\u6b65\u4f8b\u5b50","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u63d0\u4f9b\u540c\u6b65\u652f\u6301\u3002\u4f8b\u5982\uff0cWindows\u3001Linux\u548cSolaris\u90fd\u63d0\u4f9b\u673a\u5236\uff0c\u5982\u4fe1\u53f7\u91cf\u3001\u4e92\u65a5\u9501\u3001\u81ea\u65cb\u9501\u53ca\u6761\u4ef6\u53d8\u91cf\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u3002Pthread API\u652f\u6301\u4e92\u65a5\u9501\u3001\u4fe1\u53f7\u91cf\u4ee5\u53ca\u6761\u4ef6\u53d8\u91cf\u3002</p>"},{"location":"operating_system/basic/process_management/#windows_1","title":"Windows\u540c\u6b65","text":""},{"location":"operating_system/basic/process_management/#linux_1","title":"Linux\u540c\u6b65","text":""},{"location":"operating_system/basic/process_management/#solaris","title":"Solaris\u540c\u6b65","text":""},{"location":"operating_system/basic/process_management/#pthreads","title":"Pthreads\u540c\u6b65","text":""},{"location":"operating_system/basic/process_management/#_43","title":"\u66ff\u4ee3\u65b9\u6cd5","text":"<p>\u591a\u7ebf\u7a0b\u5e94\u7528\u7a0b\u5e8f\u4f1a\u589e\u52a0\u7ade\u4e89\u6761\u4ef6\u548c\u6b7b\u9501\u7684\u98ce\u9669\u3002\u4f20\u7edf\u4e0a\uff0c\u8bf8\u5982\u4e92\u65a5\u9501\u3001\u4fe1\u53f7\u91cf\u548c\u7ba1\u7a0b\u7b49\u6280\u672f\u7528\u4e8e\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u4f46\u662f\u968f\u7740\u5904\u7406\u6838\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8bbe\u8ba1\u591a\u7ebf\u7a0b\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e14\u907f\u514d\u7ade\u4e89\u6761\u4ef6\u548c\u6b7b\u9501\u53d8\u5f97\u8d8a\u6765\u8d8a\u56f0\u96be\u3002</p> <p>\u6709\u591a\u4e2a\u66ff\u4ee3\u65b9\u6cd5\u91cd\u70b9\u5173\u6ce8\u591a\u6838\u7cfb\u7edf\u7684\u540c\u6b65\u3002\u4e00\u4e2a\u65b9\u6cd5\u91c7\u7528 \u4e8b\u7269\u5185\u5b58\uff0c\u5b83\u901a\u8fc7\u8f6f\u4ef6\u6216\u786c\u4ef6\u6280\u672f\u6765\u5904\u7406\u540c\u6b65\u95ee\u9898\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5\u91c7\u7528\u7531 OpenMP \u63d0\u4f9b\u7684\u7f16\u8bd1\u5668\u6269\u5c55\u3002\u6700\u540e\uff0c\u51fd\u6570\u662f\u7f16\u7a0b\u8bed\u8a00 \u901a\u8fc7\u4e0d\u5141\u8bb8\u53ef\u53d8\u6027\u6765\u5904\u7406\u540c\u6b65\u95ee\u9898\u3002</p>"},{"location":"operating_system/basic/process_management/#_44","title":"\u6b7b\u9501","text":"<p>\u591a\u9053\u7a0b\u5e8f\u73af\u5883\u4e2d\uff0c\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u7ade\u4e89\u6709\u9650\u6570\u91cf\u7684\u8d44\u6e90\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u8d44\u6e90\u65f6\uff0c\u5982\u679c\u8fd9\u65f6\u6ca1\u6709\u53ef\u7528\u8d44\u6e90\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002\u6709\u65f6\uff0c\u5982\u679c\u7533\u8bf7\u7684\u8d44\u6e90\u88ab\u5176\u4ed6\u7b49\u5f85\u8fdb\u7a0b\u5360\u6709\uff0c\u90a3\u4e48\u8be5\u7b49\u5f85\u8fdb\u7a0b\u6709\u53ef\u80fd\u518d\u4e5f\u65e0\u6cd5\u6539\u53d8\u72b6\u6001\u3002\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a \u6b7b\u9501\uff08deadlock\uff09\u3002</p>"},{"location":"operating_system/basic/process_management/#_45","title":"\u7cfb\u7edf\u6a21\u578b","text":""},{"location":"operating_system/basic/process_management/#_46","title":"\u6b7b\u9501\u7279\u5f81","text":""},{"location":"operating_system/basic/process_management/#_47","title":"\u5fc5\u8981\u6761\u4ef6","text":"<p>\u5982\u679c\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u4ee5\u4e0b\u56db\u4e2a\u6761\u4ef6\u540c\u65f6\u6210\u7acb\uff0c\u90a3\u4e48\u5c31\u80fd\u5f15\u8d77\u6b7b\u9501\uff1a</p> <ul> <li>\u4e92\u65a5\uff08mutual exclusion\uff09\uff1a\u81f3\u5c11\u6709\u4e00\u4e2a\u8d44\u6e90\u5fc5\u987b\u5904\u4e8e\u975e\u5171\u4eab\u6a21\u5f0f\uff0c\u8bb0\u4e00\u6b21\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4f7f\u7528\u3002\u5982\u679c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u8be5\u8d44\u6e90\uff0c\u90a3\u4e48\u7533\u8bf7\u8fdb\u7a0b\u5e94\u8be5\u7b49\u5230\u8be5\u8d44\u6e90\u91ca\u653e\u4e3a\u6b62\u3002</li> <li>\u5360\u6709\u5e76\u7b49\u5f85\uff08hold and wait\uff09\uff1a\u4e00\u4e2a\u8fdb\u7a0b\u5e94\u5360\u6709\u81f3\u5c11\u4e00\u4e2a\u8d44\u6e90\uff0c\u5e76\u7b49\u5f85\u4e24\u4e00\u4e2a\u8d44\u6e90\uff0c\u8be5\u8d44\u6e90\u4e3a\u5176\u5b83\u8fdb\u7a0b\u6240\u5360\u6709\u3002</li> <li>\u975e\u62a2\u5360\uff08no preemption\uff09\uff1a\u8d44\u6e90\u4e0d\u80fd\u88ab\u5f3a\u5360\uff0c\u5373\u8d44\u6e90\u53ea\u80fd\u88ab\u8fdb\u7a0b\u5728\u5b8c\u6210\u4efb\u52a1\u540e\u81ea\u613f\u91ca\u653e\u3002</li> <li>\u5faa\u73af\u7b49\u5f85\uff08circular wait\uff09\uff1a\u6709\u4e00\u7ec4\u7b49\u5f85\u8fdb\u7a0b {P_0, P_1, ..., P_n}\uff0cP_0 \u7b49\u5f85\u7684\u8d44\u6e90\u4e3a P_1 \u5360\u6709\uff0cP_1 \u7b49\u5f85\u7684\u8d44\u6e90\u4e3a P_2 \u5360\u6709\uff0c......\uff0cP_{n - 1} \u7b49\u5f85\u7684\u8d44\u6e90\u4e3a P_n \u5360\u6709\uff0cP_n \u7b49\u5f85\u7684\u8d44\u6e90\u4e3a P_0 \u5360\u6709\u3002</li> </ul> <p>\u9700\u8981\u5f3a\u8c03\uff0c\u6240\u6709\u56db\u4e2a\u6761\u4ef6\u5fc5\u987b\u540c\u65f6\u6210\u7acb\u624d\u4f1a\u51fa\u73b0\u6b7b\u9501\u3002\u6ce8\u610f\u5230\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\u610f\u5473\u7740\u5360\u6709\u5e76\u7b49\u5f85\u6761\u4ef6\uff0c\u6545\u56db\u4e2a\u6761\u4ef6\u5e76\u4e0d\u662f\u5b8c\u5168\u72ec\u7acb\u3002\u4f46\u53ea\u8981\u786e\u4fdd\u5176\u4e2d\u4e00\u4e2a\u4e0d\u6210\u7acb\u5373\u53ef\u9884\u9632\u6b7b\u9501\u3002</p>"},{"location":"operating_system/basic/process_management/#_48","title":"\u8d44\u6e90\u5206\u914d\u56fe","text":"<p>\u603b\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u8d44\u6e90\u5206\u914d\u56fe\u6ca1\u6709\u73af\uff0c\u90a3\u4e48\u7cfb\u7edf\u5c31\u4e0d\u5904\u4e8e\u6b7b\u9501\u72b6\u6001\u3002\u5982\u679c\u6709\u73af\uff0c\u90a3\u4e48\u7cfb\u7edf \u53ef\u80fd\u4f1a \u5904\u4e8e\u6b7b\u9501\u72b6\u6001\u3002</p>"},{"location":"operating_system/basic/process_management/#_49","title":"\u6b7b\u9501\u5904\u7406\u65b9\u6cd5","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u5904\u7406\u6b7b\u9501\u95ee\u9898\u6709\u4e09\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>\u901a\u8fc7\u534f\u8bae\u6765\u9884\u9632\u6216\u907f\u514d\u6b7b\u9501\uff0c\u786e\u4fdd\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u5165\u6b7b\u9501\u72b6\u6001\u3002</li> <li>\u5141\u8bb8\u7cfb\u7edf\u8fdb\u5165\u6b7b\u9501\u72b6\u6001\uff0c\u7136\u540e\u68c0\u6d4b\u5b83\uff0c\u5e76\u52a0\u4ee5\u6062\u590d\u3002</li> <li>\u5ffd\u89c6\u8fd9\u4e2a\u95ee\u9898\uff0c\u8ba4\u4e3a\u6b7b\u9501\u4e0d\u53ef\u80fd\u5728\u7cfb\u7edf\u5185\u53d1\u751f\u3002</li> </ul> <p>\u7b2c\u4e09\u79cd\u89e3\u51b3\u65b9\u6cd5\u4e3a\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u6240\u91c7\u7528\uff0c\u5305\u62ecLinux\u548cWindows\u3002\u56e0\u6b64\uff0c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u9700\u8981\u81ea\u5df1\u7f16\u5199\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u5904\u7406\u6b7b\u9501\u3002</p> <p>\u4e3a\u4e86\u786e\u4fdd\u6b7b\u9501\u4e0d\u4f1a\u53d1\u751f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u91c7\u7528\u6b7b\u9501\u9884\u9632\u548c\u6b7b\u9501\u907f\u514d\u65b9\u6848\u3002\u6b7b\u9501\u9884\u9632\uff08deadlock prevention\uff09\u65b9\u6cd5\u786e\u4fdd\u81f3\u5c11\u6709\u4e00\u4e2a\u4fbf\u8981\u6761\u4ef6\u4e0d\u6210\u7acb\u3002\u8fd9\u4e9b\u65b9\u6cd5\u901a\u8fc7\u9650\u5236\u5982\u4f55\u7533\u8bf7\u8d44\u6e90\u7684\u65b9\u6cd5\u6765\u9884\u9632\u6b7b\u9501\u3002</p> <p>\u6b7b\u9501\u907f\u514d\uff08deadlock avoidance\uff09\u8981\u6c42\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e8b\u5148\u5f97\u5230\u6709\u5173\u8fdb\u7a0b\u7533\u8bf7\u8d44\u6e90\u548c\u4f7f\u7528\u8d44\u6e90\u7684\u989d\u5916\u4fe1\u606f\u3002\u6709\u4e86\u8fd9\u4e9b\u989d\u5916\u4fe1\u606f\uff0c\u7cfb\u7edf\u53ef\u4ee5\u786e\u5b9a\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u7533\u8bf7\uff0c\u8fdb\u7a0b\u662f\u5426\u5e94\u7b49\u5f85\u3002\u4e3a\u4e86\u786e\u5b9a\u5f53\u524d\u7533\u8bf7\u662f\u786e\u5b9a\u8fd8\u662f\u5ef6\u8fdf\uff0c\u7cfb\u7edf\u5e94\u8003\u8651\uff1a\u73b0\u6709\u7684\u53ef\u7528\u8d44\u6e90\u3001\u5df2\u5206\u914d\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u4ee5\u53ca\u6bcf\u4e2a\u8fdb\u7a0b\u5c06\u6765\u7533\u8bf7\u548c\u91ca\u653e\u7684\u8d44\u6e90\u3002</p> <p>\u5982\u679c\u7cfb\u7edf\u4e0d\u63d0\u4f9b\u6b7b\u9501\u9884\u9632\u6216\u6b7b\u9501\u907f\u514d\u7684\u7b97\u6cd5\uff0c\u5219\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7b97\u6cd5\u6765 \u68c0\u6d4b \u7cfb\u7edf\u72b6\u6001\u4ee5\u786e\u5b9a\u6b7b\u9501\u662f\u5426\u53d1\u751f\uff0c\u63d0\u4f9b\u96f6\u4e00\u4e2a\u7b97\u6cd5\u6765\u4ece\u6b7b\u9501\u4e2d \u6062\u590d\u3002</p> <p>\u5f53\u6ca1\u6709\u7b97\u6cd5\u7528\u4e8e\u68c0\u6d4b\u548c\u6062\u590d\u6b7b\u9501\u65f6\uff0c\u53ef\u80fd\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u7cfb\u7edf\u5904\u4e8e\u6b7b\u9501\uff0c\u800c\u53c8\u6ca1\u6709\u65b9\u6cd5\u68c0\u6d4b\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u672a\u88ab\u53d1\u73b0\u7684\u6b7b\u9501\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u6027\u80fd\u4e0b\u964d\uff0c\u56e0\u4e3a\u8d44\u6e90\u88ab\u4e0d\u80fd\u8fd0\u884c\u7684\u8fdb\u7a0b\u5360\u6709\uff0c\u800c\u8d8a\u6765\u8d8a\u591a\u7684\u8d44\u6e90\u4f1a\u56e0\u7533\u8bf7\u8d44\u6e90\u800c\u9677\u5165\u6b7b\u9501\u3002\u6700\u540e\uff0c\u6574\u4e2a\u7cfb\u7edf\u4f1a\u505c\u6b62\u5de5\u4f5c\uff0c\u9700\u8981 \u4eba\u5de5\u91cd\u542f\u3002\u867d\u7136\u8fd9\u770b\u8d77\u6765\u4f3c\u4e4e\u4e0d\u80fd\u81ea\u52a8\u5316\u89e3\u51b3\u6b7b\u9501\u95ee\u9898\uff0c\u4f46\u5374\u4e3a\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u6240\u91c7\u7528\u3002\u56e0\u4e3a\u5bf9\u4e8e\u5927\u591a\u6570\u7cfb\u7edf\uff0c\u6b7b\u9501\u5f88\u5c11\u53d1\u751f\uff08\u5982\u4e00\u5e74\u4e00\u6b21\uff09\uff0c\u4e0e\u9891\u7e41\u4f7f\u7528\u7684\u5e76\u4e14\u5f00\u9500\u6602\u8d35\u7684\u6b7b\u9501\u9884\u9632\u3001\u6b7b\u9501\u907f\u514d\u548c\u6b7b\u9501\u68c0\u6d4b\u4e0e\u6062\u590d\u7b97\u6cd5\u76f8\u6bd4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6210\u672c\u66f4\u4f4e\u3002</p> <p>\u6b64\u5916\uff0c\u7528\u4e8e\u5176\u4ed6\u6761\u4ef6\u7684\u6062\u590d\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u6b7b\u9501\u6062\u590d\u3002\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u5904\u4e8e\u51bb\u7ed3\u72b6\u6001\u800c\u4e0d\u662f\u601d\u7d22\u72b6\u6001\u3002\u4f8b\u5982\uff1a\u4e00\u4e2a\u5b9e\u65f6\u8fdb\u7a0b\u6309\u6700\u9ad8\u4f18\u5148\u7ea7\u6765\u8fd0\u884c\uff08\u6216\u5176\u5b83\u8fdb\u7a0b\u5728\u975e\u62a2\u5360\u8c03\u5ea6\u7a0b\u5e8f\u4e0b\u8fd0\u884c\uff09\uff0c\u5e76\u4e14\u4e0d\u5c06\u63a7\u5236\u8fd4\u56de\u5230\u64cd\u4f5c\u7cfb\u7edf\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u5e94\u6709\u4eba\u5de5\u65b9\u6cd5\u53ef\u4ece\u8fd9\u4e9b\u72b6\u6001\u4e2d\u6062\u590d\u8fc7\u6765\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e5f\u53ef\u7528\u4e8e\u6b7b\u9501\u3002</p>"},{"location":"operating_system/basic/process_management/#_50","title":"\u6b7b\u9501\u9884\u9632","text":"<p>\u6839\u636e\u4e0a\u8ff0\u6b7b\u9501\u53d1\u751f\u7684\u56db\u4e2a\u5fc5\u8981\u6761\u4ef6\uff0c\u53ea\u8981\u786e\u4fdd\u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u5c31\u80fd\u9884\u9632\u6b7b\u9501\u53d1\u751f\u3002</p>"},{"location":"operating_system/basic/process_management/#_51","title":"\u4e92\u65a5","text":"<p>\u901a\u5e38\u4e0d\u80fd\u901a\u8fc7\u7834\u574f\u4e92\u65a5\u6761\u4ef6\u6765\u9884\u9632\u6b7b\u9501\u3002\u56e0\u4e3a\u6709\u4e9b\u8d44\u6e90\u672c\u8eab\u5c31\u662f\u975e\u5171\u4eab\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u4e92\u65a5\u9501\u4e0d\u80fd\u540c\u4e8b\u88ab\u591a\u4e2a\u8fdb\u7a0b\u6240\u5171\u4eab\u3002</p>"},{"location":"operating_system/basic/process_management/#_52","title":"\u6301\u6709\u4e14\u7b49\u5f85","text":""},{"location":"operating_system/basic/process_management/#_53","title":"\u65e0\u62a2\u5360","text":""},{"location":"operating_system/basic/process_management/#_54","title":"\u5faa\u73af\u7b49\u5f85","text":""},{"location":"operating_system/basic/process_management/#_55","title":"\u6b7b\u9501\u907f\u514d","text":"<p>\u6b7b\u9501\u907f\u514d\u7b97\u6cd5\uff0c\u4e0d\u662f\u9884\u9632\u6b7b\u9501\uff0c\u8981\u6c42\u64cd\u4f5c\u7cfb\u7edf\u62e5\u6709\u6bcf\u4e2a\u8fdb\u7a0b\u5982\u4f55\u5229\u7528\u8d44\u6e90\u7684\u5148\u9a8c\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u94f6\u884c\u5bb6\u7b97\u6cd5\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u8fdb\u7a0b\u8bf7\u6c42\u7684\u5404\u79cd\u8d44\u6e90\u7684\u6700\u5927\u6570\u91cf\u3002\u901a\u8fc7\u8fd9\u79cd\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u6b7b\u9501\u907f\u514d\u7b97\u6cd5\u3002</p>"},{"location":"operating_system/basic/process_management/#_56","title":"\u6b7b\u9501\u68c0\u6d4b","text":"<p>\u5982\u679c\u4e0d\u91c7\u7528\u534f\u8bae\u4ee5\u786e\u4fdd\u6b7b\u9501\u4e0d\u4f1a\u53d1\u751f\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528\u68c0\u6d4b\u5e76\u6062\u590d\u7684\u65b9\u6848\u3002\u5e94\u8c03\u7528\u68c0\u6d4b\u7b97\u6cd5\uff0c\u786e\u5b9a\u662f\u5426\u51fa\u73b0\u4e86\u6b7b\u9501\u3002\u5982\u679c\u68c0\u6d4b\u5230\u6b7b\u9501\uff0c\u90a3\u4e48\u7cfb\u7edf\u5e94\u901a\u8fc7\u7ec8\u6b62\u67d0\u4e9b\u6b7b\u9501\u8fdb\u7a0b\u6216\u901a\u8fc7\u62a2\u5360\u67d0\u4e9b\u6b7b\u9501\u8fdb\u7a0b\u7684\u8d44\u6e90\u6765\u6062\u590d\u3002</p>"},{"location":"operating_system/basic/process_management/#_57","title":"\u6b7b\u9501\u6062\u590d","text":"<p>\u5f53\u901a\u8fc7\u62a2\u5360\u6765\u5904\u7406\u6b7b\u9501\u65f6\uff0c\u5e94\u8003\u8651\u4e09\u4e2a\u95ee\u9898\uff1a\u9009\u62e9\u4e00\u4e2a\u727a\u7272\u8fdb\u7a0b\u3001\u56de\u6eda\u53ca\u9965\u997f\u3002\u5982\u679c\u7cfb\u7edf\u4e3b\u8981\u6839\u636e\u4ee3\u4ef7\u6765\u9009\u62e9\u727a\u7272\u8fdb\u7a0b\u56de\u6eda\uff0c\u90a3\u4e48\u53ef\u80fd\u51fa\u73b0\u9965\u997f\uff0c\u5bfc\u81f4\u6240\u9009\u8fdb\u7a0b\u6c38\u8fdc\u4e0d\u80fd\u5b8c\u6210\u6307\u5b9a\u4efb\u52a1\u3002</p> <p>\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u6ca1\u6709\u5355\u72ec\u7684\u57fa\u672c\u65b9\u6cd5\u80fd\u591f\u5904\u7406\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u7684\u6240\u6709\u95ee\u9898\u3002\u7136\u800c\uff0c\u901a\u8fc7\u5408\u5e76\u57fa\u672c\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u4e3a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u7c7b\u8d44\u6e90\u7b97\u5219\u6700\u4f73\u65b9\u6cd5\u3002</p>"},{"location":"operating_system/basic/storage_management/","title":"\u5b58\u50a8\u7ba1\u7406","text":"<p>\u7531\u4e8e\u5185\u5b58\u7cfb\u7edf\u592a\u5c0f\u800c\u4e14\u4e0d\u80fd\u6c38\u4e45\u4fdd\u5b58\u6240\u6709\u6570\u636e\u548c\u7a0b\u5e8f\uff0c\u56e0\u6b64\u8ba1\u7b97\u673a\u7cfb\u7edf\u5fc5\u987b\u63d0\u4f9b\u5916\u5b58\u6765\u5907\u4efd\u5185\u5b58\u3002\u73b0\u4ee3\u8ba1\u7b97\u673a\u7cfb\u7edf\u91c7\u7528\u78c1\u76d8\u4f5c\u4e3a\u4fe1\u606f\uff08\u7a0b\u5e8f\u4e0e\u6570\u636e\uff09\u7684\u4e3b\u8981\u5728\u7ebf\u5b58\u50a8\u4ecb\u8d28\u3002\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u673a\u5236\uff0c\u4ee5\u4fbf\u5728\u7ebf\u5b58\u50a8\u548c\u8bbf\u95ee\u78c1\u76d8\u7684\u6570\u636e\u4e0e\u7a0b\u5e8f\u3002\u6587\u4ef6\u662f\u7531\u521b\u5efa\u8005\u5b9a\u4e49\u7684\u76f8\u5173\u4fe1\u606f\u7684\u96c6\u5408\u3002\u8fd9\u4e9b\u6587\u4ef6\u7531\u64cd\u4f5c\u7cfb\u7edf\u6620\u5c04\u5230\u7269\u7406\u8bbe\u5907\u3002\u6587\u4ef6\u901a\u5e38\u6309\u76ee\u5f55\u6765\u7ec4\u7ec7\uff0c\u4ee5\u4fbf\u4f7f\u7528\u3002</p> <p>\u8ba1\u7b97\u673a\u8fde\u63a5\u7684\u8bbe\u5907\u5728\u8bb8\u591a\u65b9\u9762\u90fd\u6709\u5dee\u5f02\u3002\u6709\u7684\u8bbe\u5907\u4e00\u6b21\u4f20\u8f93\u4e00\u4e2a\u5b57\u7b26\u6216\u4e00\u4e2a\u5b57\u7b26\u5757\u3002\u6709\u7684\u53ea\u80fd\u987a\u5e8f\u8bbf\u95ee\uff0c\u6709\u7684\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\u3002\u6709\u7684\u540c\u6b65\u4f20\u8f93\u6570\u636e\uff0c\u6709\u7684\u5f02\u6b65\u4f20\u8f93\u6570\u636e\u3002\u6709\u7684\u662f\u4e13\u7528\u7684\uff0c\u6709\u7684\u662f\u5171\u4eab\u7684\u3002\u6709\u7684\u662f\u53ea\u8bfb\u7684\uff0c\u6709\u7684\u662f\u53ef\u8bfb\u5199\u7684\u3002\u5b83\u4eec\u7684\u901f\u5ea6\u5dee\u522b\u5f88\u5927\u3002\u5728\u8bb8\u591a\u65b9\u9762\uff0c\u5b83\u4eec\u4e5f\u662f\u6700\u6162\u7684\u4e3b\u8981\u8ba1\u7b97\u53ca\u7ec4\u4ef6\u3002</p> <p>\u7531\u4e8e\u6240\u6709\u7684\u8fd9\u4e9b\u8bbe\u5907\u5dee\u5f02\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u63d0\u4f9b\u5404\u79cd\u529f\u80fd\uff0c\u4ee5\u4fbf\u5e94\u7528\u7a0b\u5e8f\u63a7\u5236\u8bbe\u5907\u7684\u5404\u4e2a\u65b9\u9762\u3002\u64cd\u4f5c\u7cfb\u7edfI/O\u5b50\u7cfb\u7edf\u7684\u4e00\u4e2a\u5173\u952e\u76ee\u6807\u662f\u4e3a\u7cfb\u7edf\u7684\u5176\u4ed6\u90e8\u5206\u63d0\u4f9b\u6700\u4e3a\u7b80\u5355\u7684\u63a5\u53e3\u3002\u7531\u4e8e\u8bbe\u5907\u662f\u6027\u80fd\u74f6\u9888\uff0c\u53e6\u4e00\u4e2a\u5173\u952e\u662f\u4f18\u5316I/O\uff0c\u4ee5\u4fbf\u5b9e\u73b0\u5e76\u53d1\u7684\u6700\u5927\u5316\u3002</p>"},{"location":"operating_system/basic/storage_management/#_2","title":"\u6587\u4ef6\u7cfb\u7edf","text":""},{"location":"operating_system/basic/storage_management/#_3","title":"\u6587\u4ef6\u6982\u5ff5","text":""},{"location":"operating_system/basic/storage_management/#_4","title":"\u8bbf\u95ee\u65b9\u6cd5","text":""},{"location":"operating_system/basic/storage_management/#_5","title":"\u76ee\u5f55\u4e0e\u78c1\u76d8\u7ed3\u6784","text":""},{"location":"operating_system/basic/storage_management/#_6","title":"\u6587\u4ef6\u7cfb\u7edf\u5b89\u88c5","text":""},{"location":"operating_system/basic/storage_management/#_7","title":"\u6587\u4ef6\u5171\u4eab","text":""},{"location":"operating_system/basic/storage_management/#_8","title":"\u4fdd\u62a4","text":""},{"location":"operating_system/basic/storage_management/#_9","title":"\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0","text":""},{"location":"operating_system/basic/storage_management/#_10","title":"\u6587\u4ef6\u7cfb\u7edf\u7ed3\u6784","text":""},{"location":"operating_system/basic/storage_management/#_11","title":"\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0","text":""},{"location":"operating_system/basic/storage_management/#_12","title":"\u76ee\u5f55\u5b9e\u73b0","text":""},{"location":"operating_system/basic/storage_management/#_13","title":"\u5206\u914d\u65b9\u6cd5","text":""},{"location":"operating_system/basic/storage_management/#_14","title":"\u7a7a\u95f2\u7a7a\u95f4\u7ba1\u7406","text":""},{"location":"operating_system/basic/storage_management/#_15","title":"\u6548\u7387\u4e0e\u6027\u80fd","text":""},{"location":"operating_system/basic/storage_management/#_16","title":"\u6062\u590d","text":""},{"location":"operating_system/basic/storage_management/#nfs","title":"NFS","text":""},{"location":"operating_system/basic/storage_management/#wafl","title":"\u4f8b\u5b50\uff1aWAFL\u6587\u4ef6\u7cfb\u7edf","text":""},{"location":"operating_system/basic/storage_management/#_17","title":"\u5927\u5bb9\u91cf\u5b58\u50a8\u7ed3\u6784","text":""},{"location":"operating_system/basic/storage_management/#_18","title":"\u5927\u5bb9\u91cf\u5b58\u50a8\u7ed3\u6784\u6982\u8ff0","text":""},{"location":"operating_system/basic/storage_management/#_19","title":"\u78c1\u76d8\u7ed3\u6784","text":""},{"location":"operating_system/basic/storage_management/#_20","title":"\u78c1\u76d8\u8fde\u63a5","text":""},{"location":"operating_system/basic/storage_management/#_21","title":"\u78c1\u76d8\u8c03\u5ea6","text":""},{"location":"operating_system/basic/storage_management/#_22","title":"\u78c1\u76d8\u7ba1\u7406","text":""},{"location":"operating_system/basic/storage_management/#_23","title":"\u4ea4\u6362\u7a7a\u95f4\u7ba1\u7406","text":""},{"location":"operating_system/basic/storage_management/#raid","title":"RAID\u7ed3\u6784","text":""},{"location":"operating_system/basic/storage_management/#_24","title":"\u7a33\u5b9a\u5b58\u50a8\u5b9e\u73b0","text":""},{"location":"operating_system/basic/storage_management/#io","title":"IO\u7cfb\u7edf","text":""},{"location":"operating_system/basic/storage_management/#_25","title":"\u6982\u8ff0","text":""},{"location":"operating_system/basic/storage_management/#io_1","title":"I/O\u786c\u4ef6","text":""},{"location":"operating_system/basic/storage_management/#io_2","title":"\u5e94\u7528\u7a0b\u5e8fI/O\u63a5\u53e3","text":""},{"location":"operating_system/basic/storage_management/#io_3","title":"\u5185\u6838I/O\u5b50\u7cfb\u7edf","text":""},{"location":"operating_system/basic/storage_management/#io_4","title":"I/O\u8bf7\u6c42\u8f6c\u6210\u786c\u4ef6\u64cd\u4f5c","text":""},{"location":"operating_system/basic/storage_management/#_26","title":"\u6d41","text":""},{"location":"operating_system/basic/storage_management/#_27","title":"\u6027\u80fd","text":""},{"location":"survey/big_data/hadoop/","title":"Hadoop\u751f\u6001","text":""},{"location":"survey/extra/cdn/","title":"\u5185\u5bb9\u5206\u53d1\u7f51\u7edc","text":"<p>Content Delivery Network</p> <p>\u66f4\u65b0\u65e5\u671f\uff1a2020.5.30</p>"},{"location":"survey/extra/cdn/#_2","title":"\u6982\u8ff0","text":"<p>CDN\uff08Content Delivery Network\uff0c\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff09\u662f\u6784\u5efa\u5728\u73b0\u6709\u4e92\u8054\u7f51\u57fa\u7840\u4e4b\u4e0a\u7684\u4e00\u5c42\u667a\u80fd\u865a\u62df\u7f51\u7edc\uff0c\u901a\u8fc7\u5728\u7f51\u7edc\u9694\u51fa\u90e8\u7f72\u8282\u70b9\u670d\u52a1\u5668\uff0c\u5b9e\u73b0\u5c06\u6e90\u7ad9\u5185\u5bb9\u5206\u53d1\u81f3\u6240\u6709CDN\u8282\u70b9\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u5c31\u8fd1\u83b7\u5f97\u6240\u9700\u5185\u5bb9\u3002CDN\u670d\u52a1\u7f29\u77ed\u4e86\u7528\u6237\u67e5\u770b\u5185\u5bb9\u7684\u8bbf\u95ee\u5ef6\u8fdf\uff0c\u63d0\u9ad8\u4e86\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u7684\u54cd\u5e94\u901f\u5ea6\u548c\u7f51\u7ad9\u7684\u53ef\u7528\u6027\uff0c\u89e3\u51b3\u4e86\u7f51\u7edc\u5e26\u5bbd\u5c0f\u3001\u7528\u6237\u8bbf\u95ee\u91cf\u5927\u3001\u7f51\u70b9\u5206\u5e03\u4e0d\u5747\u7b49\u95ee\u9898\u3002</p>"},{"location":"survey/extra/cdn/#_3","title":"\u52a0\u901f\u539f\u7406","text":"<p>\u5f53\u7528\u6237\u8bbf\u95ee\u4f7f\u7528CDN\u670d\u52a1\u7684\u7f51\u7ad9\u65f6\uff0c\u672c\u5730DNS\u670d\u52a1\u5668\u901a\u8fc7CNAME\u65b9\u5f0f\u5c06\u6700\u7ec8\u57df\u540d\u8bf7\u6c42\u91cd\u5b9a\u5411\u5230CDN\u670d\u52a1\u3002CDN\u901a\u8fc7\u4e00\u7ec4\u9884\u5148\u5b9a\u4e49\u597d\u7684\u7b56\u7565\uff08\u6839\u636e\u5185\u5bb9\u7c7b\u578b\u3001\u5730\u7406\u533a\u57df\u3001\u7f51\u7edc\u8d1f\u8f7d\u60c5\u51b5\u7b49\uff09\uff0c\u5c06\u5f53\u65f6\u80fd\u591f\u6700\u5feb\u54cd\u5e94\u7528\u6237\u7684CDN\u8282\u70b9IP\u5730\u5740\u63d0\u4f9b\u7ed9\u7528\u6237\uff0c\u662f\u7528\u6237\u53ef\u4ee5\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u83b7\u5f97\u7f51\u7ad9\u5185\u5bb9\u3002\u4f7f\u7528CDN\u540e\u7684HTTP\u8bf7\u6c42\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>CDN\u8282\u70b9\u6709\u7f13\u5b58\u573a\u666f</li> </ul> <p> \u56fe1. HTTP\u8bf7\u6c42\u5904\u7406\u6d41\u7a0b\uff08\u8282\u70b9\u6709\u7f13\u5b58\u573a\u666f\uff09</p> <ul> <li>CDN\u8282\u70b9\u65e0\u7f13\u5b58\u573a\u666f\uff08\u589e\u52a0\u56de\u6e90\u6b65\u9aa4\uff09</li> </ul> <p> \u56fe1. HTTP\u8bf7\u6c42\u5904\u7406\u6d41\u7a0b\uff08\u8282\u70b9\u6709\u7f13\u5b58\u573a\u666f\uff09</p>"},{"location":"survey/extra/cdn/#_4","title":"\u53c2\u8003\u6587\u732e","text":"<p>[1] \u534e\u4e3a\u4e91 \u4ec0\u4e48\u662fCDN https://support.huaweicloud.com/productdesc-cdn/zh-cn_topic_0064907747.html</p> <p>[2] lin_zone CDN\u6280\u672f\u539f\u7406\u6982\u8981 https://cloud.tencent.com/developer/article/1185727</p>"},{"location":"survey/recommendor_system/basic/","title":"\u63a8\u8350\u7cfb\u7edf\u57fa\u7840","text":""},{"location":"survey/serverless/basic/","title":"Serverless \u6280\u672f\u6982\u8ff0","text":"<p>\u672c\u8282\u5185\u5bb9\u53c2\u8003\u81ea\u963f\u91cc\u4e91\u5f00\u53d1\u8005\u793e\u533a\u516c\u5f00\u8bfe \u5efa\u7acb Serverless \u601d\u7ef4</p> <p>Serverless\u7684\u8bbe\u8ba1\u76ee\u6807\u5728\u4e8e\u8ba9\u4e1a\u52a1\u5f00\u53d1\u4eba\u5458\u4e13\u6ce8\u4e1a\u52a1\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u8003\u8651\u6240\u6709\u670d\u52a1\u5668\u76f8\u5173\u7684\u95ee\u9898\u3002</p>"},{"location":"survey/serverless/basic/#_1","title":"\u67b6\u6784\u7684\u6f14\u8fdb","text":"<p>\u4e3a\u4e86\u66f4\u597d\u7684\u4ecb\u7ecd Serverless\uff0c\u672c\u8282\u9996\u5148\u7814\u7a76\u5e94\u7528\u67b6\u6784\u7684\u6f14\u8fdb\u65b9\u5f0f\u3002</p>"},{"location":"survey/serverless/basic/#_2","title":"\u5355\u4f53\u67b6\u6784","text":"<p>21\u4e16\u7eaa\u524d\u7684\u67b6\u6784\u90fd\u662f\u5355\u4f53\u5e94\u7528\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p> \u5355\u4f53\u67b6\u6784</p> <p>\u5355\u4f53\u67b6\u6784\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u53ef\u7528\u6027\u98ce\u9669\uff1a\u670d\u52a1\u5668\u51fa\u95ee\u9898\uff0c\u5219\u6574\u4e2a\u670d\u52a1\u4e0d\u53ef\u7528</li> <li>\u4e1a\u52a1\u589e\u957f\u540e\u6d41\u91cf\u589e\u5927\uff0c\u670d\u52a1\u5668\u8ba1\u7b97\u8d44\u6e90\u4e0d\u591f</li> </ul> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4e00\u822c\u6709\u4e24\u79cd\u505a\u6cd5 \u2014\u2014 \u4e00\u822c\u6709 \u5782\u76f4\u4f38\u7f29\u3001\u6c34\u5e73\u4f38\u7f29 \u3002\u5782\u76f4\u4f38\u7f29\u4ee3\u4ef7\u9ad8\u6602\u4e14\u6709\u74f6\u9888\uff0c\u4e8e\u662f\u67b6\u6784\u6f14\u8fdb\u7a0b\u5982\u4e0b\u7684\u6c34\u5e73\u4f38\u7f29\u65b9\u5f0f\uff1a</p> <p> \u5355\u4f53\u67b6\u6784\uff08\u6c34\u5e73\u4f38\u7f29\uff09</p> <p>\u91c7\u7528\u6c34\u5e73\u4f38\u7f29\u540e\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u968f\u7814\u53d1\u4eba\u5458\u589e\u591a\uff0c\u4ee3\u7801\u51b2\u7a81\u96be\u4e8e\u5904\u7406\uff0c\u56e0\u4e3a\u5355\u4f53\u67b6\u6784\u4e0b\u7684\u4ee3\u7801\u662f\u6ca1\u6709\u660e\u786e\u7269\u7406\u8fb9\u754c\u3002</li> </ul>"},{"location":"survey/serverless/basic/#_3","title":"\u5fae\u670d\u52a1\u67b6\u6784","text":"<p>\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u90e8\u7f72\u3001\u8fd0\u7ef4\u88ab\u5206\u62c6\u3002</p> <p> \u5355\u4f53\u67b6\u6784\uff08\u6c34\u5e73\u4f38\u7f29\uff09</p> <p>\u5fae\u670d\u52a1\u67b6\u6784\u5f15\u5165\u7684\u6311\u6218\uff1a</p> <ul> <li> <p>\u5206\u5e03\u5f0f\u6280\u672f\u9009\u578b\uff1a\u670d\u52a1\u95f4\u901a\u4fe1\uff08\u540c\u6b65\u5982gRPC\u3001\u5f02\u6b65\u5982Kafka\uff09\u3001\u7f13\u5b58\u3001\u8ffd\u8e2a\u670d\u52a1</p> </li> <li> <p>\u62c6\u5206\u65b9\u6cd5\u8bba\uff1a\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u3001\u9650\u754c\u4e0a\u4e0b\u6587</p> </li> </ul>"},{"location":"survey/serverless/basic/#_4","title":"\u4e91\u539f\u751f","text":"<p>\u6240\u8c13\u4e91\u539f\u751f\u670d\u52a1\uff1a</p> <ol> <li> <p>\u57fa\u4e8e\u4e91\u4ea7\u54c1\u67b6\u6784</p> </li> <li> <p>\u5e94\u7528\u751f\u547d\u5468\u671f\u6258\u7ba1</p> </li> </ol>"},{"location":"survey/serverless/basic/#serverless_1","title":"Serverless \u7684\u4ef7\u503c","text":"<p>Serverless \u4e0d\u662f\u6307 Server \u771f\u6b63\u6d88\u5931\uff0c\u800c\u662f\u6307\u5f00\u53d1\u8005\u4e0d\u7528\u5173\u5fc3\u3002\u7c7b\u4f3c\u4e8e Java\u3001Python \u7b49\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e0b\uff0c\u5f00\u53d1\u8005\u4e0d\u7528\u62c5\u5fc3\u5185\u5b58\u5206\u914d\u95ee\u9898\u3002\u4f46\u5185\u5b58\u8fd8\u5728\u90a3\u91cc\uff0c\u53ea\u662f\u4ea4\u7ed9\u5783\u573e\u6536\u96c6\u5668\u53bb\u7ba1\u7406\u3002</p>"},{"location":"survey/serverless/basic/#_5","title":"\u80cc\u666f","text":"<p>\u4e91\u4e0a\u8d44\u6e90\u9664\u4e86\u670d\u52a1\u5668\u6240\u5305\u542b\u7684 \u57fa\u7840\u8ba1\u7b97\u3001\u5b58\u50a8\u3001\u7f51\u7edc\u4e4b\u5916\uff0c\u8fd8\u5305\u62ec\u5404\u79cd\u7c7b\u522b\u7684\u4e0a\u5c42\u8d44\u6e90\u3002\u5982 \u6570\u636e\u5e93\u3001\u7f13\u5b58\u3001\u6d88\u606f\u3002</p> <p>Berkeley\u6709\u4e00\u7bc7Serverless Computing\u6982\u8ff0\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u63cf\u8ff0\uff1a</p> Serverless \u613f\u666f <p>\u201c\u5728\u4e91\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0cServerful \u7684\u8ba1\u7b97\u5c31\u50cf\u4f7f\u7528\u4f4e\u7ea7\u7684\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0c\u800c Serverless \u7684\u8ba1\u7b97\u5c31\u50cf\u4f7f\u7528 Python \u8fd9\u6837\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u7f16\u7a0b\u3002\u4f8b\u5982\u5982 c = a + b \u8fd9\u6837\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u7528\u6c47\u7f16\u63cf\u8ff0\uff0c\u5c31\u5fc5\u987b\u5148\u9009\u62e9\u51e0\u4e2a\u5bc4\u5b58\u5668\uff0c\u628a\u503c\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\uff0c\u8fdb\u884c\u6570\u5b66\u8ba1\u7b97\uff0c\u518d\u5b58\u50a8\u7ed3\u679c\u3002\u8fd9\u5c31\u597d\u6bd4\u4eca\u5929\u5728\u4e91\u73af\u5883\u4e0b Serverful \u7684\u8ba1\u7b97\uff0c\u5f00\u53d1\u9996\u5148\u9700\u8981\u5206\u914d\u6216\u627e\u5230\u53ef\u7528\u7684\u8d44\u6e90\uff0c\u7136\u540e\u52a0\u8f7d\u4ee3\u7801\u548c\u6570\u636e\uff0c\u518d\u6267\u884c\u8ba1\u7b97\uff0c\u5c06\u8ba1\u7b97\u7684\u7ed3\u679c\u5b58\u50a8\u8d77\u6765\uff0c\u6700\u540e\u8fd8\u9700\u8981\u7ba1\u7406\u8d44\u6e90\u7684\u91ca\u653e\u3002\u201d</p> <p>\u622a\u6b622020\u5e74\uff0cServerful \u8fd8\u662f\u4e91\u8ba1\u7b97\u4e3b\u6d41\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4f46\u672a\u6765\u5728 Serverless \u67b6\u6784\u4e0b\uff0c\u5f00\u53d1\u5e94\u8be5\u53ea\u9700\u8981\u5173\u5fc3\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u5c06\u8d44\u6e90\u7ba1\u7406\u4ea4\u7ed9\u5de5\u5177\u3002</p>"},{"location":"survey/serverless/basic/#serverless_2","title":"Serverless \u7684\u4ef7\u503c","text":"<ul> <li>\u4e0d\u7528\u5173\u5fc3\u670d\u52a1\u5668</li> </ul> <p>\u81ea\u52a8\u8bc6\u522b\u6545\u969c\u3001\u6458\u9664\u6709\u95ee\u9898\u7684\u5b9e\u4f8b\u3001\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u5168\u8865\u4e01\u5347\u7ea7\u4e0d\u5f71\u54cd\u4e1a\u52a1\u3001\u65e5\u5fd7\u548c\u76d1\u63a7\u7cfb\u7edf\u9ed8\u8ba4\u6253\u901a\u3001\u81ea\u540c\u914d\u7f6e\u7cfb\u7edf\u5b89\u5168\u7b56\u7565\u4ee5\u907f\u514d\u98ce\u9669\u3001\u5f53\u8d44\u6e90\u4e0d\u591f\u65f6\u81ea\u52a8\u5206\u914d\u8d44\u6e90\u5e76\u5b89\u88c5\u76f8\u5173\u4ee3\u7801\u548c\u914d\u7f6e\u7b49\u3002</p> <ul> <li>\u81ea\u52a8\u5f39\u6027</li> </ul> <p>\u4e92\u8054\u7f51\u67b6\u6784\u5e94\u53ef\u4f38\u7f29\uff0c\u4e1a\u52a1\u4f1a\u6709\u660e\u663e\u7684\u9ad8\u5cf0\u548c\u4f4e\u4f30\uff0c\u5982\u4e00\u4e9b\u8425\u9500\u573a\u666f\u4e0b\u6709\u660e\u663e\u7684\u5bb9\u91cf\u9700\u6c42\uff0cServerless \u5e73\u53f0\u9700\u8981\u53ca\u65f6\u3001\u7a33\u5b9a\u5730\u5b9e\u73b0\u81ea\u52a8\u5f39\u6027\u3002</p> <p>\u4e3a\u6b64\u5e73\u53f0\u9700\u8981\u6709\u5f88\u5f3a\u7684\u8d44\u6e90\u8c03\u5ea6\u80fd\u529b\uff0c\u4ee5\u53ca\u5bf9\u5404\u9879\u6307\u6807\uff08\u5982\u8d1f\u8f7d\u3001\u5185\u5b58\u3001\u5e76\u53d1\uff09\u6709\u654f\u9510\u7684\u611f\u77e5\u80fd\u529b\u3002</p> <ul> <li>\u6309\u5b9e\u9645\u8d44\u6e90\u4f7f\u7528\u6536\u8d39</li> </ul> <p>Serverful \u67b6\u6784\u4e0b\u8d44\u6e90\u4e00\u822c\u6309\u5360\u7528\u800c\u975e\u4f7f\u7528\u8ba1\u8d39\u3002\u4f46 Serverless \u67b6\u6784\u4e0b\u7528\u6237\u53ea\u9700\u4e3a\u5b9e\u9645\u4f7f\u7528\u7684\u8d44\u6e90\u4ed8\u8d39\uff0c\u5982\u6570\u636e\u5e93\u7684 Query \u6b21\u6570\u3001\u6570\u636e\u5b58\u50a8\u60c5\u51b5\u3002</p> <ul> <li>\u66f4\u5c11\u7684\u4ee3\u7801\uff0c\u66f4\u5feb\u7684\u4ea4\u4ed8\u901f\u5ea6</li> </ul> <p>\u57fa\u4e8e Serverless \u7684\u67b6\u6784\u4e0b\u4ee3\u7801\u4e00\u822c\u4f1a\u91cd\u5ea6\u4f7f\u7528\u540e\u7aef\u670d\u52a1\uff0c\u5c06\u6570\u636e\u3001\u72b6\u6001\u7b49\u5185\u5bb9\u4ece\u4ee3\u7801\u5206\u79bb\u51fa\u53bb\uff0c\u79fb\u81f3\u540e\u7aef\u670d\u52a1\u3002\u88ab\u64a4\u8d70\u7684 FaaS \u67b6\u6784\u5c06\u8fd0\u884c\u65f6\u7684 Runtime \u4e5f\u4ea4\u7ed9\u5e73\u53f0\u6765\u7ba1\u7406\uff0c\u8fd9\u610f\u5473\u7740 Serverless \u4e0b\u5e94\u7528\u4ee3\u7801\u4f53\u79ef\u66f4\u5c0f\u3001\u5206\u53d1\u66f4\u5feb\u3002\u56e0\u6b64\u53d1\u5e03\u3001\u6269\u5bb9\u7684\u65f6\u95f4\u4f1a\u52a0\u5feb\u3002</p> <p>Serverless \u5e73\u53f0\u901a\u5e38\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u4e30\u5bcc\u7684 \u4ee3\u7801\u5b58\u50a8/\u6784\u5efa\u670d\u52a1\u3001\u7248\u672c\u7ba1\u7406\u670d\u52a1\u3001\u53d1\u5e03\u670d\u52a1\uff0c\u4ee5\u53ca\u7248\u672c\u5207\u6362\u80fd\u529b\uff0c\u4ee5\u5e2e\u52a9\u63d0\u5347\u53d1\u5e03\u901f\u5ea6\u3002</p>"},{"location":"survey/serverless/basic/#serverless_3","title":"\u5e38\u89c1 Serverless \u67b6\u6784\u6a21\u5f0f","text":""},{"location":"survey/serverless/basic/#_6","title":"\u6982\u8ff0","text":"<p>Serverless \u8ba1\u7b97\u4e00\u822c\u53ef\u4ee5\u7406\u89e3\u4e3a FaaS \u548c BaaS \u7684\u53e0\u52a0\u3002</p> <p>Serverless \u7684\u539f\u751f\u5fc3\u667a\u662f\u8ba9\u4e1a\u52a1\u4eba\u5458\u4e13\u6ce8\u4e1a\u52a1\u903b\u8f91\uff0c\u5e2e\u52a9\u4e1a\u52a1\u4eba\u5458\u89e3\u51b3\u6ca1\u6709\u5fc5\u8981\u7531\u4ed6\u4eec\u89e3\u51b3\u7684\u6280\u672f\u95ee\u9898\u3002 \u2014\u2014 Ben Kehoe</p> <p>\u4e00\u822c\u53ef\u4ee5\u4ece\u5982\u4e0b\u89d2\u5ea6\u6765\u7406\u89e3 Serverless \u67b6\u6784\uff1a</p> <ul> <li>\u6280\u672f\uff1a\u8ba1\u7b97\u3001\u6570\u636e\u5b58\u50a8\u3001\u6d88\u606f\u901a\u4fe1</li> <li>\u8861\u91cf\u7ef4\u5ea6\uff1a\u53ef\u8fd0\u7ef4\u6027\u3001\u5b89\u5168\u6027\u3001\u53ef\u9760\u6027\u3001\u53ef\u6269\u5c55\u6027\u3001\u6210\u672c</li> </ul> <p>\u4e0b\u9762\u5c06\u4ece\u82e5\u5e72\u573a\u666f\u6765\u7406\u89e3 Serverless \u67b6\u6784\u3002</p>"},{"location":"survey/serverless/basic/#_7","title":"\u3010\u573a\u666f\u4e00\u3011\u9759\u6001\u7ad9\u70b9","text":""},{"location":"survey/serverless/basic/#_8","title":"\u4e1a\u52a1\u9700\u6c42\uff1a\u4fe1\u606f\u5c55\u793a\u7ad9\u70b9","text":"<ul> <li>\u5c55\u793a\u4fe1\u606f</li> <li>\u66f4\u65b0\u4e0d\u9891\u7e41</li> <li>\u4e0d\u786e\u5b9a\u8bbf\u95ee\u91cf</li> </ul>"},{"location":"survey/serverless/basic/#_9","title":"\u67b6\u6784\u6f14\u8fdb","text":"<p> \u67b6\u6784\u6f14\u8fdb</p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6700\u57fa\u672c\u7684\u67b6\u6784\u662f\u5c06\u670d\u52a1\u5668\u653e\u5728IDC\u673a\u623f\u91cc\u9762\uff1b\u5982\u679c\u8003\u8651\u9ad8\u53ef\u7528\u6027\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861+\u4e91\u670d\u52a1\u5668\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\uff1b\u5bf9\u4e8e\u9759\u6001\u7ad9\u70b9\u53ef\u76f4\u63a5\u5c06\u5176\u7531\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u6765\u652f\u6301\uff0c\u5e76\u7528CDN\u505a\u7f13\u5b58\u3002</p>"},{"location":"survey/serverless/basic/#_10","title":"\u67b6\u6784\u5ef6\u4f38","text":"<p>\u6709\u4e00\u79cd\u8bf4\u6cd5\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u91cc\u9762\u6700\u96be\u5e94\u5bf9\u7684\u4e24\u4e2a\u95ee\u9898\u662f\uff1a\u7f13\u5b58\u5931\u6548/cache invalidation \u548c \u547d\u540d\u95ee\u9898/naming things\u3002</p> <p>\u9759\u6001 \u662f\u4e00\u4e2a\u91cd\u8981\u5c5e\u6027\uff0c\u7f13\u5b58 \u4e5f\u662f\u8ba1\u7b97\u673a\u5f00\u53d1\u4e2d\u4e00\u9879\u91cd\u8981\u7684\u6280\u672f\u3002\u7f13\u5b58\u53ea\u8981\u5e94\u7528\u5f97\u5f53\u4e5f\u4f1a\u5927\u5e45\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\u3002</p> <p>CND\u9664\u4e86\u56de\u6e90\u5230\u5bf9\u8c61\u5b58\u50a8\u4e4b\u5916\uff0c\u8fd8\u80fd\u56de\u6e90\u5230\u52a8\u6001\u540e\u7aef\uff0c\u5982API gateway\u3001\u51fd\u6570\u8ba1\u7b97\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\u3002</p> <p> \u589e\u52a0\u51fd\u6570\u8ba1\u7b97</p> <p>\u9664\u4e86\u4f7f\u7528CDN\u4f5c\u4e3a\u7f13\u5b58\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u7f13\u5b58\uff0c\u5982Redis\u7b49\u3002</p>"},{"location":"survey/serverless/basic/#_11","title":"\u3010\u573a\u666f\u4e8c\u3011\u5355\u4f53\u548c\u5fae\u670d\u52a1","text":""},{"location":"survey/serverless/basic/#_12","title":"\u4e1a\u52a1\u9700\u6c42\uff1a\u5546\u54c1\u8be6\u60c5\u9875","text":"<ul> <li>\u6d77\u91cf\u5546\u54c1</li> <li>\u66f4\u65b0\u9891\u7e41</li> <li>\u52a8\u6001\u4fe1\u606f\u6765\u6e90\u5e7f\u6cdb\uff0c\u5982\u57fa\u672c\u4fe1\u606f\u3001\u4ef7\u683c\u3001\u8fd0\u8d39\u3001\u9500\u91cf\u3001\u5e93\u5b58\u3001\u8bc4\u8bba\u7b49</li> </ul>"},{"location":"survey/serverless/basic/#_13","title":"\u67b6\u6784\u6f14\u8fdb","text":"<p> \u67b6\u6784\u6f14\u8fdb</p>"},{"location":"survey/serverless/basic/#_14","title":"\u67b6\u6784\u5ef6\u4f38","text":"<p>\u5fae\u670d\u52a1\u5185\u90e8\u91c7\u7528\u4fe1\u606f\u805a\u5408\u7684\u5f62\u5f0f\uff0c\u5916\u90e8\u5219\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u79fb\u52a8\u7aef\u91c7\u7528\u4e0d\u540c\u7684\u540e\u7aef\u3002</p> <p> \u4e3a\u524d\u6bb5\u670d\u52a1\u7684\u540e\u7aef \u548c \u5fae\u670d\u52a1\u805a\u5408</p>"},{"location":"survey/serverless/basic/#_15","title":"\u3010\u573a\u666f\u4e09\u3011\u4e8b\u4ef6\u89e6\u53d1","text":""},{"location":"survey/serverless/basic/#_16","title":"\u4e1a\u52a1\u9700\u6c42\uff1a\u4e70\u5bb6\u79c0","text":"<ul> <li>\u53d1\u8868\u56fe\u7247\u548c\u89c6\u9891\u8bc4\u8bba</li> <li>\u5bf9\u56fe\u7247\u7f29\u653e\u3001\u52a0\u6c34\u5370\u3001\u5ba1\u6838</li> <li>\u5bf9\u89c6\u9891\u505a\u591a\u79cd\u683c\u5f0f\u8f6c\u6362\u3001\u5ba1\u6838</li> </ul>"},{"location":"survey/serverless/basic/#_17","title":"\u67b6\u6784\u6f14\u8fdb","text":"<p> \u67b6\u6784\u6f14\u8fdb</p> <p>\u4e0a\u56fe \u201c\u5fae\u670d\u52a1Serverful\u67b6\u6784\u201d \u4e2d\u5c06web\u5e94\u7528\u670d\u52a1\u5668\u548c\u6587\u4ef6\u5904\u7406\u670d\u52a1\u5668\u901a\u8fc7\u6d88\u606f\u961f\u5217\u89e3\u8026\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u8d44\u6e90\u4f38\u7f29\u7684\u9700\u6c42\u53ef\u80fd\u662f\u4e0d\u540c\u7684\uff0c\u4e00\u822c\u6587\u4ef6\u5904\u7406\u670d\u52a1\u9700\u8981\u66f4\u591a\u7684CPU\u3002</p> <p>\u201c\u57fa\u4e8e\u4e8b\u4ef6\u89e6\u53d1\u7684Serverless\u67b6\u6784\u201d \u4e2d\u76f4\u63a5\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230OSS\uff0c\u540c\u65f6OSS\u89e6\u53d1\u51fd\u6570\u8ba1\u7b97\uff1b\u800c\u6587\u4ef6\u7684\u663e\u793a\u5219\u662f\u901a\u8fc7OSS+CDN\u5b8c\u6210\u7684\u3002</p>"},{"location":"survey/serverless/basic/#_18","title":"\u67b6\u6784\u5ef6\u4f38","text":"<p> \u67b6\u6784\u5ef6\u4f38</p>"},{"location":"survey/serverless/basic/#_19","title":"\u3010\u573a\u666f\u4e09\u3011\u670d\u52a1\u7f16\u6392","text":""},{"location":"survey/serverless/basic/#_20","title":"\u4e1a\u52a1\u9700\u6c42\uff1a\u8ba2\u5355\u6d41\u7a0b","text":"<ul> <li>\u5b8c\u6210\u591a\u6b65\u9aa4\u8ba2\u5355\u6d41\u7a0b\uff0c\u5305\u62ec\u9884\u7559\u5e93\u5b58\u3001\u786e\u8ba4\u652f\u4ed8\u3001\u5b89\u6392\u914d\u9001\u3001\u90ae\u4ef6\u77ed\u4fe1\u901a\u77e5\u7b49</li> <li>\u53ef\u80fd\u6301\u7eed\u6570\u5929</li> <li>\u9700\u8981\u5bf9\u5931\u8d25\u6b65\u9aa4\u91cd\u8bd5</li> <li>\u6700\u7ec8\u5931\u8d25\uff0c\u9700\u8981\u5bf9\u5df2\u5b8c\u6210\u6b65\u9aa4\u56de\u6eda</li> </ul>"},{"location":"survey/serverless/basic/#_21","title":"\u67b6\u6784\u6f14\u8fdb","text":"<p> \u57fa\u4e8e\u4e8b\u4ef6\u89e6\u53d1\u7684Saga\u6a21\u5f0f</p> <p>\u91c7\u7528\u4e00\u4e2a\u6d88\u606f\u603b\u7ebf\uff0c\u8ba9\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u901a\u8fc7\u4e8b\u4ef6\u6765\u4f20\u9012\u4fe1\u606f\u3002</p> <p> \u57fa\u4e8e\u4e8b\u4ef6\u6d41\u7684Saga\u6a21\u5f0f</p> <p>\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u72ec\u7acb\uff0c\u6709\u4e00\u4e2a\u96c6\u4e2d\u7684\u534f\u8c03\u8005\u670d\u52a1\u6765\u8c03\u5ea6\u5404\u4e2a\u5355\u72ec\u7684\u4e1a\u52a1\u670d\u52a1\uff0c\u4e1a\u52a1\u903b\u8f91\u548c\u72b6\u6001\u7531\u96c6\u4e2d\u534f\u8c03\u8005\u6765\u7ef4\u62a4\u3002</p>"},{"location":"survey/serverless/basic/#serverless_4","title":"Serverless\u6280\u672f\u9009\u578b","text":""},{"location":"survey/serverless/basic/#_22","title":"\u53c2\u8003\u6587\u732e","text":"<p>\u5efa\u7acb Serverless \u601d\u7ef4</p>"},{"location":"system_design/classic_problems/distributed_id_generator/","title":"\u5206\u5e03\u5f0f ID \u751f\u6210\u5668","text":""},{"location":"system_design/classic_problems/distributed_id_generator/#_1","title":"\u95ee\u9898\u80cc\u666f","text":"<p>\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u5bf9\u5927\u91cf\u7684\u6570\u636e\u548c\u6d88\u606f\u505a\u552f\u4e00\u6807\u8bc6\u3002\u968f\u7740\u4e1a\u52a1\u589e\u957f\uff0c\u5bf9\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868\u540e\u9700\u8981\u6709\u4e00\u4e2a\u552f\u4e00ID\u6765\u6807\u8bc6\u4e00\u6761\u6570\u636e\u6216\u6d88\u606f\uff0c\u6570\u636e\u5e93\u7684\u81ea\u589eID\u663e\u7136\u4e0d\u80fd\u6ee1\u8db3\u8981\u6c42\u3002\u8fd9\u65f6\u4e00\u4e2a\u80fd\u591f\u751f\u6210\u5168\u5c40\u552f\u4e00ID\u7684\u7cfb\u7edf\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002\u4e1a\u52a1\u7cfb\u7edf\u5bf9ID\u597d\u7684\u9700\u6c42\u6982\u62ec\u5982\u4e0b\uff1a</p> <ul> <li>\u5168\u5c40\u552f\u4e00\u6027\uff1a\u4e0d\u91cd\u590d</li> <li>\u8d8b\u52bf\u9012\u589e\uff1a\u5728MySQL\u7684InnoDB\u5f15\u64ce\u4e2d\u4f7f\u7528\u7684\u662f \u805a\u96c6\u7d22\u5f15 \uff0c\u7531\u4e8e\u591a\u6570RDBMS\u4f7f\u7528B-tree\u6765\u5b58\u50a8\u7d22\u5f15\u6570\u636e\uff0c\u5728\u4e3b\u952e\u7684\u9009\u62e9\u4e0a\u9762\u6211\u4eec\u5c3d\u91cf\u4f7f\u7528\u6709\u5e8f\u7684\u4e3b\u952e\u4fdd\u8bc1\u5199\u5165\u6027\u80fd\u3002</li> <li>\u5355\u8c03\u9012\u589e\uff1a\u4fdd\u8bc1\u4e0b\u4e00\u4e2aID\u4e00\u5b9a\u5927\u4e8e\u4e0a\u4e00\u4e2aID\uff0c\u4f8b\u5982\u4e8b\u52a1\u7248\u672c\u53f7\u3001IM\u589e\u91cf\u6d88\u606f\u3001\u6392\u5e8f\u7b49\u7279\u6b8a\u9700\u6c42\u3002</li> <li>\u4fe1\u606f\u5b89\u5168\uff1a\u5982\u679cID\u662f\u8fde\u7eed\u7684\uff0c\u4f1a\u4f7f\u5f97\u6076\u610f\u722c\u53d6\u975e\u5e38\u5bb9\u6613\uff0c\u76f4\u63a5\u6309\u7167\u987a\u5e8f\u4e0b\u8f7d\u6307\u5b9aURL\u5373\u53ef\uff1b\u5982\u679c\u662f\u8ba2\u5355\u53f7\uff0c\u90a3\u4e48\u7ade\u5bf9\u53ef\u4ee5\u5f88\u5bb9\u6613\u901a\u8fc7\u8ba2\u5355\u53f7\u6307\u5bfc\u4e00\u5929\u7684\u8ba2\u5355\u91cf\u3002\u6240\u4ee5\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u9700\u8981ID \u65e0\u89c4\u5219\u3001\u4e0d\u89c4\u5219\u3002</li> <li>\u9ad8\u53ef\u7528\u6027</li> </ul>"},{"location":"system_design/classic_problems/distributed_id_generator/#_2","title":"\u5e38\u89c1\u65b9\u6cd5","text":""},{"location":"system_design/classic_problems/distributed_id_generator/#uuid","title":"UUID","text":"<p>UUID\uff08Universally Unique Identifier\uff09\u7684\u6807\u51c6\u5f62\u5f0f\u5305\u542b32\u4e2a16\u8fdb\u5236\u6570\u5b57\uff0c\u4ee5\u8fde\u5b57\u7b26\u5206\u4e3a5\u6bb5\uff0c\u5f62\u5f0f\u4e3a8-4-4-4-12\u768436\u4e2a\u5b57\u7b26\uff0c\u793a\u4f8b\uff1a<code>550e8400-e29b-41d4-a716-446655440000</code>\u3002\u8be6\u89c1IETF\u53d1\u5e03\u7684UUID\u89c4\u8303\uff1aA Universally Unique IDentifier (UUID) URN Namespace</p> <p>\u4f18\u70b9</p> <ul> <li>\u6027\u80fd\u975e\u5e38\u9ad8\uff1a\u672c\u5730\u751f\u6210\uff0c\u6ca1\u6709\u7f51\u7edc\u6d88\u8017</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u4e0d\u6613\u4e8e\u5b58\u50a8\uff1a128\u4f4d\uff0c\u901a\u5e38\u4ee536\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u5f88\u591a\u573a\u666f\u4e0d\u9002\u7528\u3002</li> <li>\u5b89\u5168\u6027\u5dee\uff1a\u57fa\u4e8eMAC\u5730\u5740\u751f\u6210UUID\u7684\u7b97\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4MAC\u5730\u5740\u6cc4\u9732\uff0c\u8be5\u6f0f\u6d1e\u66fe\u88ab\u7528\u4e8e\u5b9a\u4f4d\u6885\u4e3d\u838e\u75c5\u6bd2\u7684\u53ea\u505a\u8fd9\u4f4d\u7f6e\u3002</li> <li>ID\u4f5c\u4e3a\u4e3b\u952e\u65f6\u5728\u7279\u5b9a\u7684\u73af\u5883\u4f1a\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u505aDB\u4e3b\u952e\u7684\u573a\u666f\u4e0b\uff0cUUID\u5c31\u975e\u5e38\u4e0d\u9002\u7528\uff1a<ul> <li>MySQL\u5b98\u65b9\u660e\u786e\u5efa\u8bae\u4e3b\u952e\u8981\u5c3d\u91cf\u8d8a\u77ed\u8d8a\u597d\uff0c36\u4e2a\u5b57\u7b26\u957f\u5ea6\u7684UUID\u4e0d\u7b26\u5408\u8981\u6c42\uff1b</li> <li>\u5bf9\u6570\u636e\u5e93\u7d22\u5f15\u4e0d\u5229\uff0c\u5728InnoBD\u5f15\u64ce\u4e0b\uff0cUUID\u7684\u65e0\u5e8f\u6027\u53ef\u80fd\u4f1a\u5f15\u8d77\u6570\u636e\u4f4d\u7f6e\u9891\u7e41\u53d8\u52a8\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd</li> </ul> </li> </ul>"},{"location":"system_design/classic_problems/distributed_id_generator/#snowflake","title":"\u7c7bSnowFlake\u65b9\u6848","text":"<p>\u4f18\u70b9</p> <ul> <li>\u6beb\u79d2\u6570\u5728\u9ad8\u4f4d\uff0c\u81ea\u589e\u5e8f\u5217\u5728\u4f4e\u4f4d\uff0c\u6574\u4e2aID\u90fd\u662f\u8d8b\u52bf\u9012\u589e\u7684</li> <li>\u4e0d\u4f9d\u8d56\u6570\u636e\u5e93\u7b49\u7b2c\u4e09\u65b9\u7cfb\u7edf\uff0c\u4ee5\u670d\u52a1\u7684\u65b9\u5f0f\u90e8\u7f72\uff0c\u7a33\u5b9a\u6027\u66f4\u9ad8\uff0c\u751f\u6210ID\u7684\u6027\u80fd\u4e5f\u662f\u975e\u5e38\u9ad8\u7684</li> <li>\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u4e1a\u52a1\u7279\u6027\u5206\u914dbit\u4f4d\uff0c\u975e\u5e38\u7075\u6d3b</li> </ul> <p>\u7f3a\u70b9</p> <ul> <li>\u5f3a\u4f9d\u8d56\u673a\u5668\u65f6\u949f\uff0c\u5982\u679c\u673a\u5668\u4e0a\u65f6\u949f\u56de\u62e8\uff0c\u4f1a\u5bfc\u81f4\u53d1\u53f7\u91cd\u590d\u6216\u8005\u670d\u52a1\u5904\u4e8e\u4e0d\u53ef\u7528\u72b6\u6001</li> </ul>"},{"location":"system_design/object_oriented/UML101/","title":"UML\u56fe\u4ecb\u7ecd","text":""},{"location":"system_design/object_oriented/add_layers/","title":"\u589e\u52a0\u62bd\u8c61\u5c42\u7ea7\uff0c\u9694\u79bb\u590d\u6742\u53d8\u5316","text":""},{"location":"system_design/object_oriented/add_layers/#-","title":"\u5c01\u88c5\u591a\u6001\u521b\u5efa\u8fc7\u7a0b - \u7b80\u5355\u5de5\u5382\u6a21\u5f0f","text":"<p>\u5728\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u7684\u5b9e\u8df5\u4e2d\uff0c\u7ecf\u5e38\u505a\u7684\u64cd\u4f5c\u662f\u5c06\u57fa\u7c7b\u6307\u9488\u53ea\u4e0a\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\uff0c\u76f8\u6bd4\u4e8e\u663e\u5f0f\u5730\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u8bb2\u591a\u6001\u5bf9\u8c61\u7684\u9009\u62e9\u4e0e\u6784\u9020\u8fc7\u7a0b\u5c01\u88c5\u8d77\u6765\u3002</p>"},{"location":"system_design/object_oriented/add_layers/#_2","title":"\u5c01\u88c5\u591a\u6001\u5bf9\u8c61\u7684\u9009\u62e9\u4e0e\u521b\u5efa","text":"<ul> <li> <p>\u5148\u9694\u79bb\u5f00\uff08\u501f\u52a9\u5c01\u88c5\uff09\uff0c\u518d\u5f90\u56fe\u4e4b\uff08\u589e\u52a0\u53d8\u5316\uff09</p> </li> <li> <p>\u5c06\u521b\u5efa\u5bf9\u8c61\u4e2d\u7684\u201c\u9009\u62e9\u6027\u201d\u5265\u79bb\u51fa\u6765</p> <ul> <li>\u4f5c\u4e3a\u63a7\u5236\u521b\u5efa\u8fc7\u7a0b\u7684\u53c2\u6570</li> <li>\u4ece\u4f7f\u7528\u5177\u4f53\u7c7b\u7684\u7c7b\u578b\u540d\u79f0\u6765\u76f4\u63a5\u63a7\u5236\u591a\u6001\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u8f6c\u53d8\u6210\u4f7f\u7528\u53d8\u91cf\u548c\u7b26\u53f7\u6765\u95f4\u63a5\u63a7\u5236\u591a\u6001\u5bf9\u8c61\u7684\u521b\u5efa\u3002</li> </ul> </li> <li>\u5c01\u88c5\u591a\u53f0\u5bf9\u8c61\u7684\u9009\u62e9\u8fc7\u7a0b<ul> <li>\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\u5c01\u88c5\u591a\u6001\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b</li> </ul> </li> </ul>"},{"location":"system_design/object_oriented/add_layers/#_3","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f","text":"<p>\u4e0b\u65b9\u5de5\u5382\u7c7b\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u6839\u636e\u7c7b\u4f53\u7cfb\u7684\u6269\u5145\u4e0d\u65ad\u589e\u52a0\u5206\u652f\u8bed\u53e5\uff0c\u4ee5\u4fbf\u6839\u636e\u9700\u8981\u8fd4\u56de\u6307\u5b9a\u7684\u5177\u4f53\u4ea7\u54c1\uff0c\u662f\u7ecf\u5e38\u53d8\u52a8\u7684\u7c7b\u3002 <pre><code>class Factory {\n   public:\n    static ProductBase* Create(ProductID id) {\n        if (id == A_ID) return new ProductA;\n        if (id == B_ID) return new ProductB;\n        // \u5f53\u4ea7\u54c1\u7c7b\u4f53\u7cfb\u6269\u5145\u65f6\uff0c\u5728\u6b64\u589e\u52a0\u4ee3\u7801\n        return nullptr;\n    }\n};\n</code></pre></p> <p>\u4e0a\u8ff0<code>Factory</code>\u7684\u4f5c\u7528\u53ea\u662f\u5305\u88c5\u4e00\u4e0b\u9759\u6001\u6784\u9020\u51fd\u6570<code>Create</code>\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06<code>Factory</code>\u5f53\u505a\u4e00\u4e2a\u666e\u901a\u7684\u7c7b\u53bb\u4f7f\u7528 <pre><code>class Factory {\n   public:\n    ProductBase* Create(ProductID id) {\n        if (id == A_ID) return new ProductA;\n        if (id == B_ID) return new ProductB;\n        return nullptr;\n    }\n};\n</code></pre></p> <p>\u6b64\u65f6\u63a5\u53e3\u5bf9\u8c61\u7684\u521b\u5efa\u7ec6\u8282\u88ab\u5b8c\u5168\u5265\u79bb</p> <pre><code>int main() {\n    ProductID id;\n    cin &gt;&gt; id;\n\n    ProductBase* ptr;\n    ptr = Factory::Create(id);\n    Use(ptr);\n}\n</code></pre> <p>\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff1a \u5c06\u591a\u6001\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\u5c01\u88c5\u8d77\u6765\uff0c\u4f7f\u201c\u7b56\u7565\u201d\u4e0e\u7b97\u6cd5\u7684\u9009\u62e9\u66f4\u76f4\u89c2\u3002</p>"},{"location":"system_design/object_oriented/add_layers/#-_1","title":"\u589e\u52a0\u62bd\u8c61\u5c42 - \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f","text":""},{"location":"system_design/object_oriented/add_layers/#_4","title":"\u5de5\u5382\u4e0d\u5177\u5907\u5177\u4f53\u4ea7\u54c1\u53c2\u6570","text":"<p>\u5bf9\u4e8e\u4e0a\u9762\u7684 \u7b80\u5355\u5de5\u5382 \u6a21\u5f0f\uff0c\u751f\u6210\u54ea\u79cd\u5bf9\u8c61\u662f\u7531<code>Factory</code>\u7c7b\u7684\u63a5\u53e3\u6839\u636e\u4f20\u5165\u53c2\u6570\u6765\u51b3\u5b9a\u7684\u3002\u6b64\u65f6\uff0c\u751f\u6210\u5bf9\u8c61\u7684\u7c7b\u540d\u662f\u201c\u770b\u5f97\u89c1\u201d\u7684\uff08Hardcode\u5728\u6e90\u7801\u4e2d\uff09\u3002</p> <p>\u4f46\u5982\u679c\u7f16\u5199\u5de5\u5382\u65f6\u5e76\u4e0d\u77e5\u9053\u53ef\u80fd\u7684\u5b50\u7c7b\u96c6\u5408\u600e\u4e48\u529e\uff1f\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528\u6d3e\u751f\u589e\u52a0\u62bd\u8c61\u5c42\u6765\u589e\u52a0\u4f7f\u7528\u7075\u6d3b\u6027\u3002</p> <ul> <li>\u82e5\u65e0\u6cd5\u786e\u5b9a\u591a\u6001\u5bf9\u8c61\u7684\u5177\u4f53\u7c7b<ul> <li>\u5728\u589e\u52a0\u4e00\u5c42\u201c\u62bd\u8c61\u5c42\u201d\uff1a\u4ece<code>Factory</code>\u6d3e\u751f\u4e00\u4e2a\u5b50\u7c7b\uff0c\u4e0d\u80fd\u786e\u5b9a\u7684\u95ee\u9898\uff08\u4f7f\u7528\u5177\u4f53\u7c7b\u540d\u521b\u5efa\u4ea7\u54c1\u5bf9\u8c61\uff09\u4ea4\u7ed9\u4ed6\u89e3\u51b3\uff01</li> <li>\u5bf9\u8fd9\u4e2a\u5b50\u7c7b\u800c\u8a00\uff0c\u5b83\u7684\u201c\u5b9e\u73b0\u8005\u201d\uff08\u7a0b\u5e8f\u5458\u3001\u4ee3\u7801\u4e0a\u4e0b\u6587\u73af\u5883\uff09\u662f\u77e5\u9053\u5177\u4f53\u4ea7\u54c1\u7684\u7c7b\u540d\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u521b\u5efa\u76f8\u5e94\u5bf9\uff01</li> </ul> </li> <li>\u901a\u8fc7\u6d3e\u751f\u5f15\u5165\u7684\u62bd\u8c61\u5c42\u589e\u52a0\u4e86\u4f7f\u7528\u7075\u6d3b\u6027<ul> <li>\u4e00\u65b9\u9762\u4f7f\u7528\u57fa\u7c7b\u80fd\u5c06\u65e0\u6cd5\u786e\u5b9a\u7684\u4e8b\u60c5\u4ea4\u7531\u5b50\u7c7b\u53bb\u786e\u5b9a\uff1b</li> <li>\u53e6\u4e00\u65b9\u9762\u4e5f\u4f7f\u79ef\u7d2f\u63d0\u4f9b\u7684\u63a5\u53e3\u4e0d\u6536\u67d0\u4e9b\u4fe1\u606f\u7684\u7ea6\u675f\u3002</li> </ul> </li> </ul> <pre><code>class Factory {\n   public:\n    virtual ProductBase* Create(ProductID) = 0;\n};\n\nclass MyFactory : public Factory {\n    public:\n    ProductBase* Create(ProductID id) {\n        if (id == A_ID) return new ProductA;\n        if (id == B_ID) return new ProductB;\n        // \u5f53\u4ea7\u54c1\u4f53\u7cfb\u6269\u5145\u65f6\uff0c\u5728\u6b64\u589e\u52a0\u4ee3\u7801\n        return nullptr;\n    }\n};\n</code></pre> <p>\u201c\u6401\u7f6e\u8d77\u6765\uff0c\u7559\u7ed9\u540e\u4ee3\u89e3\u51b3\u5427\u201d \u2014\u2014\u6bdb\u6cfd\u4e1c</p> <p>\u5bf9\u4e8e<code>Factory</code>\u7c7b\u7684\u7f16\u5199\u8005\uff0c\u638c\u63e1\u7684\u4fe1\u606f\u662f<code>Create</code>\u51fd\u6570\u7684\u58f0\u660e\u5f62\u5f0f\uff0c\u4f46\u5177\u4f53\u5bf9\u8c61\u7684\u7c7b\u578b\u96c6\u5408\u672a\u77e5\uff0c\u7559\u7ed9\u5de5\u5382\u5b50\u7c7b\u53bb\u89e3\u51b3\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u5de5\u5382+\u4ea7\u54c1\u7684\u53cc\u91cd\u591a\u6001 <pre><code>int main() {\n    ProductBase* ptr;   // \u4ea7\u54c1\u57fa\u7c7b\u6307\u9488\n    Factory* fact_ptr;  // \u5de5\u5382\u57fa\u7c7b\u6307\u9488\n    fact_ptr = new MyFactory;\n\n    ptr = fact_ptr-&gt;Create(A_ID);\n    Use(ptr);\n    ptr = fact_ptr-&gt;Create(B_ID);\n    Use(ptr);\n\n    fact_ptr-&gt;Create(C_ID)-&gt;Interface();\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/add_layers/#_5","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f","text":"<p>\u7ee7\u627f\u4f53\u7cfb\u7684UML\u56fe</p> <p></p> <p>\u8fd9\u79cd\u8bbe\u8ba1\u88abErich Gamma\u7b49\u4eba\u6210\u4e3a \u5de5\u5382\u65b9\u6cd5 \u6a21\u5f0f</p>"},{"location":"system_design/object_oriented/add_layers/#-_2","title":"\u76f8\u4e92\u5173\u8054\u5bf9\u8c61\u7684\u521b\u5efa - \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f","text":""},{"location":"system_design/object_oriented/add_layers/#_6","title":"\u521b\u5efa\u63a5\u53e3\u96c6\u6210","text":"<p>\u62ff\u87ba\u4e1d\u9489\u548c\u87ba\u4e1d\u5200\u4e3e\u4f8b\uff0c\u87ba\u4e1d\u9489\u6709\u4e00\u5b57\u7eb9\u3001\u5341\u5b57\u82b1\u3001\u516d\u8fb9\u5f62\u7b49\uff0c\u76f8\u5e94\u5730\u87ba\u4e1d\u5200\u4e5f\u6709\u5bf9\u5e94\u7684\u5b9e\u73b0\u3002\u73b0\u5728\u5047\u8bbe\u6709\u87ba\u4e1d\u5200\u548c\u87ba\u4e1d\u9489\u5de5\u5382\uff0c\u5219\u4e8c\u8005\u751f\u4ea7\u7684\u4ea7\u54c1\u7c7b\u578b\u5e94\u8be5\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u6709\u201c\u5173\u8054\u201d\u7684\u591a\u6001\u5bf9\u8c61\uff0c\u600e\u6837\u8bbe\u8ba1\u5de5\u5382\u80fd\u591f\u4f53\u73b0\u8fd9\u79cd\u201c\u5173\u8054\u201d\u6027\u5462\uff1f</p> <p>\u65e2\u7136\u591a\u79cd\u5bf9\u8c61\u95f4\u5b58\u5728\u5173\u8054\u5173\u7cfb\uff0c\u90a3\u5c31\u5e94\u8be5\u5c06\u521b\u5efa\u5b83\u4eec\u7684\u63a5\u53e3\u96c6\u6210\u5230\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u521b\u5efa\u591a\u79cd\u5bf9\u8c61\u7684\u65b0\u63a5\u53e3\uff01</p>"},{"location":"system_design/object_oriented/add_layers/#_7","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f","text":"<p>\u5c06\u5173\u8054\u5bf9\u8c61\u7684\u751f\u6210\u63a5\u53e3\u96c6\u6210\uff08\u5408\u5e76\uff09\u5230\u5355\u4e2a\u521b\u5efa\u7c7b\u4e2d\uff0c\u5728\u5b9e\u73b0\u8be5\u7c7b\u65f6\u4fdd\u8bc1\u5404\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u8054\u6027\u7b26\u5408\u8981\u6c42\u3002</p> <p>\u4e0a\u8ff0\u8bbe\u8ba1\u601d\u8def\u88abErich Gamma\u7b49\u4eba\u79f0\u4e3a \u62bd\u8c61\u5de5\u5382 \u6a21\u5f0f\u3002</p>"},{"location":"system_design/object_oriented/add_layers/#_8","title":"\u603b\u7ed3","text":"<ul> <li> <p>\u8bbe\u8ba1\u539f\u5219</p> <ul> <li>\u5f00\u95ed\u539f\u5219</li> <li>\u5355\u4e00\u8d23\u4efb\u539f\u5219</li> </ul> </li> <li> <p>\u8bbe\u8ba1\u6a21\u5f0f</p> <ul> <li>\u7b56\u7565\u6a21\u5f0f</li> <li>\u59d4\u6258\u6a21\u5f0f</li> <li>\u6865\u63a5\u6a21\u5f0f</li> <li>\u9002\u914d\u5668\u6a21\u5f0f</li> <li>\u4ee3\u7406\u6a21\u5f0f</li> <li>\u88c5\u9970\u5668\u6a21\u5f0f</li> <li>\u8d23\u4efb\u94fe\u6a21\u5f0f</li> <li>\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u3001\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f</li> </ul> </li> <li> <p>\u672a\u6d89\u53ca\u7684\u6a21\u5f0f</p> <ul> <li>\u89e3\u91ca\u5668\u6a21\u5f0f</li> <li>\u547d\u4ee4\u6a21\u5f0f\uff08\u7528\u4e8e\u4ea4\u4e92\u5f0f\u7a0b\u5e8f\u3001\u72b6\u6001\u4fdd\u5b58\uff09</li> <li>\u72b6\u6001\u6a21\u5f0f\uff08\u7c7b\u4f3c\u4e8e\u72b6\u6001\u673a\uff09</li> </ul> </li> </ul>"},{"location":"system_design/object_oriented/compose_interfaces/","title":"\u57fa\u4e8e\u63a5\u53e3\u7ec4\u5408\u5e94\u5bf9\u590d\u6742\u53d8\u5316","text":""},{"location":"system_design/object_oriented/compose_interfaces/#_2","title":"\u5df2\u6709\u8d44\u6e90\u7684\u7ec4\u5408","text":"<p>\u4f7f\u7528\u5df2\u6709\u8d44\u6e90\u7684\u5e38\u7528\u65b9\u5f0f</p> <p>\u7ee7\u627f\u3001\u7ec4\u5408\u3001\u6a21\u677f\u5b9e\u4f8b\u5316\uff08\u6cdb\u578b\u7f16\u7a0b\uff09</p> <p>\u4f18\u5148\u4f7f\u7528 \u7ec4\u5408 \u800c\u4e0d\u662f \u7ee7\u627f\uff0c\u56e0\u4e3a\u7ec4\u5408\u6bd4\u8f83\u7075\u6d3b\uff0c\u4f46\u5982\u679c\u65b0\u4ee3\u7801\u91cc\u7684\u5bf9\u8c61\u548c\u539f\u6709\u4ee3\u7801\u7684\u5bf9\u8c61\u6709\u5929\u7136\u7684\u5305\u542b\u5173\u7cfb\uff0c\u5219\u5e94\u8be5\u4f7f\u7528\u7ee7\u627f\u6765\u590d\u7528\u4ee3\u7801\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_3","title":"\u4ee5\u6808\u4e3a\u4f8b","text":"<p>\u5b9e\u73b0\u6808\u7c7b\u578b\u2014\u2014FILO\u8868</p> <ul> <li> <p>\u5176\u5b9e\u4f8b\u80fd\u591f\u7ec4\u7ec7\u591a\u4e2a\u540c\u7c7b\u578b\u6570\u636e</p> </li> <li> <p>\u540e\u8fdb\u5148\u51fa</p> </li> <li> <p>\u63d0\u4f9b\u56db\u4e2a\u64cd\u4f5c\uff1a<code>push</code>, <code>pop</code>, <code>top</code>, <code>empty</code></p> </li> <li> <p>\u5148\u5b9e\u73b0\u6574\u6570\u7684\u6808</p> </li> </ul> <p>\u4e00\u79cd\u65b9\u5f0f\u662f\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u539f\u59cb\u6570\u7ec4\u7684\u65b9\u5f0f\u6784\u9020\u4e00\u4e2a\u6808\u7c7b\uff1b</p> <p>\u8be5\u6808\u7c7b\u7684\u9700\u6c42\u4e0e<code>std::vector</code>\u7684<code>push_back</code>, <code>pop_back</code>, <code>back</code>, <code>empty</code>\u63d0\u4f9b\u7684\u529f\u80fd\u7c7b\u4f3c\uff0c\u5728\u5b9e\u73b0\u4e0a\u53ea\u9700\u5728<code>std::vector</code>\u7684\u57fa\u7840\u4e0a\u5c01\u88c5\u4e00\u5c42\u63a5\u53e3\u5373\u53ef\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_4","title":"\u5f15\u5165\u63a5\u53e3","text":"<p>\u5c06\u63a5\u53e3\u4ee5\u7eaf\u865a\u51fd\u6570\u7684\u5f62\u5f0f\u5b9a\u4e49\u5728\u62bd\u8c61\u7c7b\u91cc\u9762\uff0c\u7531\u5b50\u7c7b\u53bb\u5b9e\u73b0\u3002</p> <p>\u4f7f\u7528\u7684\u65f6\u5019\u8c03\u7528\u63a5\u53e3\u7c7b\uff0c\u4ee5\u6b64\u4fdd\u8bc1\u4f7f\u7528\u65b9\u5f0f\u4e0d\u53d8\u3002</p> <p>\u5982\u6b64\u67d0\u4e2a\u7c7b\u7684\u4f7f\u7528\u8005\u548c\u5f00\u53d1\u8005\u7684\u5de5\u4f5c\u88ab\u5b8c\u5168\u9694\u79bb\u5f00\u3002</p> <p>\u5047\u8bbe\u6309\u7167\u5982\u4e0bUML\u5b9e\u73b0\u57fa\u4e8e<code>std::vector</code>\u7684<code>Stack</code>\uff1a</p> <p></p> <p>\u8fd9\u91cc<code>VectorStack</code>\u7c7b\u662f\u4e00\u4e2a \u8f6c\u63a5\u7c7b \uff0c\u529f\u80fd\u7c7b\u4f3c\u4e8ethunder3\u8f6cUSB\u7684\u8f6c\u6362\u5934\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_5","title":"\u9002\u914d\u5668\u6a21\u5f0f","text":"<p>\u9002\u914d\u5668\u6a21\u5f0f\uff1a\u5bf9\u4e8e\u529f\u80fd\u6ee1\u8db3\u9700\u6c42\uff0c\u4f46\u63a5\u53e3\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u5b9a\u4e49\u4e00\u4e2aAdapter\u7c7b\u4f7f\u7528\u7ec4\u5408\u5b9e\u73b0\u9002\u914d\u3002</p> <p>\u8fd9\u91cc\u7684\u9002\u914d\u5668\u4f7f\u7528\u201c\u7ec4\u5408\u201d\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u7528\u201c\u7ee7\u627f\u201d\u5b9e\u73b0\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_6","title":"\u591a\u91cd\u7ee7\u627f","text":"<p>\u9664\u4e86\u201c\u7ec4\u5408\u201d\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u201c\u591a\u91cd\u7ee7\u627f\u201d\u5b9e\u73b0<code>VectorStack</code></p> <pre><code>class VectorStack : public Stack, private vector&lt;int&gt; {\n   public:\n    VectorStack() : vector&lt;int&gt;() {}\n    bool empty() { return vector&lt;int&gt;::empty(); }\n    void push(int i) { push_back(i); }\n    void pop() { pop_back(); }\n    int top() { return back(); }\n};\n</code></pre> <p>\u7531\u4e8e\u591a\u91cd\u7ee7\u627f\u662f\u5426\u5408\u7406\u5c1a\u5b58\u4e89\u8bba\uff0c\u5b9e\u9645\u4e2d\u4e0d\u5b58\u5728\u6b64\u5b9e\u73b0\u3002</p> <p>C++\u5047\u8bbe\u7a0b\u5e8f\u5458\u77e5\u9053\u81ea\u5df1\u5728\u5e72\u4ec0\u4e48\uff0c\u6240\u4ee5\u5728\u529f\u80fd\u4e0a\u63d0\u4f9b\u4e86\u591a\u91cd\u7ee7\u627f</p> <p>\u4f7f\u7528\u7ee7\u627f\u5b9e\u73b0\u9002\u914d\uff0c\u79f0\u4f5c \u7c7bAdapter\uff0cUML\u5982\u4e0b</p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_7","title":"\u63a5\u53e3\u4e0d\u53d8\u65f6\u7684\u529f\u80fd\u53d8\u5316","text":""},{"location":"system_design/object_oriented/compose_interfaces/#_8","title":"\u667a\u80fd\u6307\u9488\u4e0e\u4ee3\u7406\u6a21\u5f0f","text":"<p>\u8003\u8651\u591a\u4e2a\u6307\u9488\u6307\u5411\u76f8\u540c\u7684\u7269\u7406\u5730\u5740\uff0c\u5f53\u5176\u4e2d\u4e00\u4e2a\u6307\u9488\u91ca\u653e\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u7684\u6307\u9488\u53d8\u6210\u4e86\u91ce\u6307\u9488\u3002\u8fd9\u91cc\u51fa\u73b0\u7684\u6839\u672c\u95ee\u9898\u662f\u6307\u9488\u4e4b\u95f4\u4e92\u76f8\u4e0d\u77e5\u9053\u5bf9\u65b9\u7684\u5b58\u5728\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_9","title":"\u5f15\u7528\u8ba1\u6570","text":"<p>\u95ee\u9898\u4e0a\u8ff0\u95ee\u9898\uff0c\u9700\u8981\u8ddf\u8e2a\u57fa\u7840\u5bf9\u8c61\u88ab\u591a\u5c11\u6307\u9488\u6240\u5171\u4eab\uff0c\u76f4\u5230\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\u624d\u771f\u6b63\u91ca\u653e\u57fa\u7840\u5bf9\u8c61\u3002</p> <p>\u201c\u667a\u80fd\u6307\u9488\u201d\u6a21\u677f <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\ntemplate &lt;typename T&gt;\nclass SmartPtr;\n\ntemplate &lt;typename T&gt;\nclass UPtr {    // \u8bbe\u8ba1\u4e00\u4e2a\u8f85\u52a9\u7c7b\u7528\u4f5cSmartPtr\u5b9e\u4f53\u7684\u5171\u4eab\u8ba1\u6570\n   private:\n    friend class SmartPtr&lt;T&gt;;\n\n    UPtr(T* ptr) : p(ptr), count(1) {}\n    ~UPtr() { delete p; }\n\n    int count;\n    T* p;\n};\n\ntemplate &lt;typename T&gt;\nclass SmartPtr {\n   public:\n    SmartPtr(T* ptr) : rp(new UPtr&lt;T&gt;(ptr)) {}\n    SmartPtr(const SmartPtr&lt;T&gt;&amp; sp) : rp(sp.rp) {  // \u62f7\u8d1d\u6784\u9020\uff0c\u5f15\u7528\u8ba1\u6570++\n        ++rp-&gt;count;\n    }\n    SmartPtr&amp; operator=(const SmartPtr&lt;T&gt;&amp; rhs) {\n        ++rhs.rp-&gt;count;  // \u5c06rhs\u7684\u5f15\u7528\u8ba1\u6570++\n        if (--rp-&gt;count == 0)\n            delete rp;  // \u539f\u6765\u6307\u5411\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570--\uff0c\u4e3a\u96f6\u5219\u91ca\u653e\u57fa\u7840\u5bf9\u8c61\n        rp = this.rp;  // \u6267\u884c\u5b9e\u9645\u8d4b\u503c\u64cd\u4f5c\n        return *this;\n    }\n    ~SmartPtr() {\n        if (--rp-&gt;count == 0)\n            delete rp;  // \u6790\u6784\u51fd\u6570\uff0c\u5f15\u7528\u8ba1\u6570--\uff0c\u4e3a\u96f6\u5219\u91ca\u653e\u57fa\u7840\u5bf9\u8c61\n    }\n    // \u91cd\u8f7d\u6307\u9488\u64cd\u4f5c\u7b26 * \u548c -&gt;\n    T&amp; operator*() { return *(rp-&gt;p); }\n    T* operator-&gt;() { return rp-&gt;p; }\n\n   private:\n    UPtr&lt;T&gt;* rp;\n};\n\n// \u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u65e0\u9700\u8003\u8651\u91ca\u653e\u95ee\u9898\nint main(int argc, char* argv[]) {\n    SmartPtr&lt;int&gt; ptr1(new int(2));\n    SmartPtr&lt;int&gt; ptr2(ptr1);\n    SmartPtr&lt;int&gt; ptr3 = ptr2;\n    cout &lt;&lt; *ptr1 &lt;&lt; endl;\n    *ptr1 = 20;\n    cout &lt;&lt; *ptr2 &lt;&lt; endl;\n}\n</code></pre></p> <p>\u8f93\u51fa <pre><code>2\n20\n</code></pre></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_10","title":"\u667a\u80fd\u6307\u9488\u5206\u6790","text":"<ul> <li><code>SmartPtr&lt;int&gt;</code>\u548c<code>int*</code>\u6709\u76f8\u540c\u7684\u63a5\u53e3<ul> <li>\u64cd\u4f5c\u7b26\uff1a<code>*</code>\u548c<code>-&gt;</code></li> <li>\u8d4b\u503c\u64cd\u4f5c\u7b26\u4e0e\u521d\u59cb\u5316\uff08\u62f7\u8d1d\u6784\u9020\uff09</li> <li>\u91ca\u653e\uff08\u6790\u6784\uff09</li> </ul> </li> <li><code>SmartPtr&lt;int&gt;</code>\u6bd4<code>int*</code>\u589e\u52a0\u4e86\u4e00\u4e9b\u63a7\u5236\u64cd\u4f5c<ul> <li>\u62f7\u8d1d\u6784\u9020\u65f6\u5f15\u7528\u8ba1\u6570<code>++</code></li> <li>\u6790\u6784\u65f6\u5f15\u7528\u8ba1\u6570<code>--</code>\uff0c\u76f4\u5230\u5f15\u7528\u8ba1\u6570\u4e3a\u96f6\u65f6\u91ca\u653e</li> <li>\u8d4b\u503c\u65f6\u5bf9\u5f53\u524d\u5f15\u7528\u8ba1\u6570\u548c\u53c2\u6570\u5f15\u7528\u8ba1\u6570\u5206\u522b\u5904\u7406</li> </ul> </li> <li>\u8fd9\u79cd\u65b9\u5f0f\u88ab\u79f0\u4e3a \u4ee3\u7406\u6a21\u5f0f</li> <li>\u4ee5<code>SmartPtr</code>\u7684\u8d4b\u503c\u64cd\u4f5c\u7b26<code>=</code>\u4e3a\u4f8b<ul> <li>\u9996\u5148\u505a\u4e00\u4e9b\"\u5176\u4ed6\u64cd\u4f5c\"</li> <li>\u7136\u540e\u6267\u884c\u4e86<code>int*</code>\u7684\u8d4b\u503c\u64cd\u4f5c</li> <li>\u5728<code>int*</code>\u7684\u8d4b\u503c\u64cd\u4f5c\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u66f4\u591a\u529f\u80fd</li> </ul> </li> </ul> <ul> <li>\u63a5\u53e3\u4e0d\u53d8\uff0c\u529f\u80fd\u53d8\u5316<ul> <li>\u5e38\u88ab\u79f0\u4e3a \u4ee3\u7406\u6a21\u5f0f</li> <li>\u7528\u4e8e\u5bf9\u88ab\u4ee3\u7406\u5bf9\u8c61\u8fdb\u884c\u63a7\u5236\uff0c\u5982\u5f15\u7528\u8ba1\u6570\u63a7\u5236\u3001\u6743\u9650\u63a7\u5236\uff08\u88ab\u4ee3\u7406\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u88ab\u8bbf\u95ee\uff09\u3001\u8fdc\u7a0b\u4ee3\u7406\uff08\u5c06\u5bf9\u8fdc\u7a0b\u5bf9\u8c61\u7684\u64cd\u4f5c\u4ee3\u7406\u5230\u672c\u5730\u5bf9\u8c61\uff09\u3001\u5ef6\u8fdf\u521d\u59cb\u5316\u7b49\u7b49\u3002</li> </ul> </li> </ul>"},{"location":"system_design/object_oriented/compose_interfaces/#_11","title":"\u5ef6\u8fdf\u521d\u59cb\u5316","text":"<p>\u6709\u4e9b\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u65f6\u95f4\u8f83\u957f\uff0c\u6bd4\u5982\u9700\u8981\u505a\u6570\u636e\u5e93\u8fde\u63a5\u7b49\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u7b49\u5230\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u518d\u521d\u59cb\u5316\u3002</p> <p>\u5ef6\u8fdf\u521d\u59cb\u5316\u7ecf\u5e38\u4e0e\u5f15\u7528\u8ba1\u6570\u7ed3\u5408\u4f7f\u7528\uff0c\u51cf\u5c11\u521d\u59cb\u5316\u7684\u6b21\u6570\u3002</p> <pre><code>class Proxy : public Object {\n   public:\n    Proxy() : object_(nullptr) {}   // \u4ee3\u7406\u7c7b\u5bf9\u8c61\u521d\u59cb\u5316\u65f6\u4e0d\u521d\u59cb\u5316\u5b9e\u9645\u5bf9\u8c61\n    ~Proxy() {\n        if (object_ != nullptr) delete object_;\n    }\n    void run() {    // \u5b9e\u9645\u5bf9\u8c61\u521d\u59cb\u5316\u88ab\u5ef6\u8fdf\u5230\u8c03\u7528run\u51fd\u6570\u65f6\u8fdb\u884c\n        if (object_ == nullptr) object_ = new RealObject();\n        object_-&gt;run(); // run\u51fd\u6570\u672c\u6765\u7684\u529f\u80fd\n    }\n\n   private:\n    RealObject* object_;\n};\n\nint main(int argc, char* argv[]) {\n    Proxy proxy;\n    proxy.run();\n}\n</code></pre> <p>Lazy load\u7684\u597d\u5904\uff1a</p> <ol> <li> <p>\u51cf\u5c11\u521d\u59cb\u5316\u65f6\u95f4</p> </li> <li> <p>\u5f53\u548c\u5f15\u7528\u8ba1\u6570\u7ed3\u5408\u7684\u65f6\u5019\u80fd\u591f\u8282\u7701\u4e0d\u5fc5\u8981\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u3002\uff08\u5c06\u591a\u4e2aProxy\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u9645\u5bf9\u8c61\uff09</p> </li> <li> <p>\u6709\u4e9b\u5bf9\u8c61\u521d\u59cb\u5316\u4e4b\u540e\u4e0d\u4e00\u5b9a\u88ab\u4f7f\u7528\uff0c\u91c7\u7528lazy load\u7684\u65b9\u5f0f\u53ef\u4ee5\u51cf\u5c11\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u8d44\u6e90\u6d6a\u8d39</p> </li> </ol>"},{"location":"system_design/object_oriented/compose_interfaces/#_12","title":"\u88c5\u9970","text":""},{"location":"system_design/object_oriented/compose_interfaces/#textviewer","title":"\u4ece\u5b9e\u73b0\u4e00\u4e2aTextViewer\u5f00\u59cb","text":"<p>\u5047\u8bbe\u73b0\u6709\u4e00\u4e2a<code>TextView</code>\u5bf9\u8c61\uff0c\u80fd\u591f\u5728\u7a97\u53e3\u4e2d\u663e\u793a\u6587\u5b57\u3002\u73b0\u5728\u5e0c\u671b\u63a5\u53e3\u4e0d\u53d8\uff0c\u589e\u52a0\u6eda\u52a8\u6761\u3001\u8fb9\u6846\u3001...</p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_13","title":"\u4f7f\u7528\u7ee7\u627f\u5b9e\u73b0","text":"<p>\u5229\u7528C++\u4e2d\u7684\u7ee7\u627f\uff0c\u4f9d\u9760\u591a\u6001\u5b9e\u73b0\u529f\u80fd\u591a\u6837\u5316\uff1a</p> <p></p> <p>\u5f0a\u7aef\uff1a\u591a\u79cd<code>TextView</code>\u4e4b\u95f4\u6ca1\u6709\u5c42\u6b21\u5173\u7cfb\uff0c\u4e0d\u7528\u7684View\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002\u7531\u6b64\u5f53\u9700\u8981\u7684\u9644\u4ef6\u589e\u591a\u7684\u65f6\u5019\u4f1a\u5bfc\u81f4<code>TextView</code> \u7c7b\u4f53\u7cfb\u81a8\u80c0 \u3001\u4ee3\u7801\u5927\u91cf\u5197\u4f59\u3002</p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_14","title":"\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f","text":"<p>\u7528\u7ec4\u5408\u66ff\u4ee3\u7ee7\u627f\uff0c\u4f7f\u7528\u7ec4\u5408\u52a8\u6001\u6539\u53d8\u7b56\u7565\u4ee5\u5b9e\u73b0\u591a\u53d8\u7684\u529f\u80fd</p> <p></p> <p>\u7b56\u7565\u9009\u9879\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u4f7f\u5f97\u7ec4\u5408\u66f4\u52a0\u7075\u6d3b\uff0c\u6709\u6548\u6291\u5236\u4e86 \u7c7b\u81a8\u80c0 \u95ee\u9898\u3002</p> <p>\u4f46\u662f\uff0c\u7b56\u7565\u9009\u9879\u9700\u8981\u9884\u5148\u5b9a\u4e49\uff0c\u65e0\u6cd5\u589e\u52a0\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u201c\u5de5\u5177\u680f\u201d\u7684\u65f6\u5019\uff0c\u9700\u8981\u5728<code>TextView</code>\u5927\u7c7b\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u79cd\u64cd\u4f5c\u5e94\u8be5\u88ab\u907f\u514d\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_15","title":"\u88c5\u9970\u6a21\u5f0f","text":"<p>\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c<code>TextView</code>\u662f\u4e3b\u4f53\uff0c<code>Border</code>\u548c<code>ScrollBar</code>\u90fd\u662f\u7ed9<code>TextView</code>\u589e\u52a0\u529f\u80fd\u7684\uff0c\u662f\u9644\u52a0\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728<code>TextView</code>\u4e0a\u201c\u6dfb\u52a0\u88c5\u9970\u201d\u6765\u5b9e\u73b0<code>Border</code>\u548c<code>ScrollBar</code>\u800c\u65e0\u9700\u4fee\u6539<code>TextView</code>\u3002</p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_16","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u589e\u52a0\u4e00\u4e2a<code>Component</code>\u4f5c\u4e3a\u53ef\u663e\u793a\u5185\u5bb9\u7684\u57fa\u7c7b\uff0c<code>TextView</code>\u4f5c\u4e3a\u5176\u5b50\u7c7b\u3002\u800c\u6240\u6709\u7684 \u88c5\u9970\u7c7b \u90fd\u662f\u53ef\u663e\u793a\u7684\uff0c\u4e5f\u5c31\u90fd\u662f<code>Component</code>\u7684\u5b50\u7c7b\u3002</p> <p>\u5bf9\u4e8e\u4e0d\u540c\u7684\u88c5\u9970\u7c7b\uff0c\u5b9e\u73b0\u4e0d\u540c\u7684\u88c5\u9970\u80fd\u529b\u3002</p> <pre><code>class Component {\n   public:\n    virtual ~Component() {}\n    virtual void Draw() = 0;\n};\n\nclass TextView : public Component {\n   public:\n    void Draw() { cout &lt;&lt; \"TextView.\" &lt;&lt; endl; }\n};\n\nclass Decorator : public Component {\n   public:\n    Decorator(Component* component) : component_(component) {}\n    virtual void Addon() = 0;\n    void Draw() {\n        Addon();\n        component_-&gt;Draw();\n    }\n\n   private:\n    Component* component_;\n};\n\nclass Border : public Decorator {\n   public:\n    Border(Component* component) : Decorator(component) {}\n    void Addon() { cout &lt;&lt; \"Bordered \"; }\n};\n\nclass HScroll : public Decorator {\n   public:\n    HScroll(Component* component) : Decorator(component) {}\n    void Addon() { cout &lt;&lt; \"HScrolled \"; }\n};\n\nclass VScroll : public Decorator {\n   public:\n    VScroll(Component* component) : Decorator(component) {}\n    void Addon() { cout &lt;&lt; \"VScrolled \"; }\n};\n</code></pre> <p>\u4f7f\u7528\u65f6\u5bf9<code>TextView</code>\u8fdb\u884c\u9010\u5c42\u88c5\u9970\uff0c\u53ef\u4ee5\u7075\u6d3b\u5f97\u5230\u4e0d\u540c\u7684\u663e\u793a\u6548\u679c</p> <pre><code>int main(int argc, char** argv) {\n    TextView text_view;\n    VScroll vs_text_view(&amp;text_view);\n    HScroll hs_vs_text_view(&amp;vs_text_view);\n    Border b_hs_vs_text_view(&amp;hs_vs_text_view);\n    b_hs_vs_text_view.Draw();\n}\n</code></pre> <p>\u8f93\u51fa\uff1a <pre><code>Bordered HScrolled VScrolled TextView.\n</code></pre></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_17","title":"\u88c5\u9970\u6a21\u5f0f\u4e0e\u7b56\u7565\u6a21\u5f0f","text":"<p>\u88c5\u9970\u6a21\u5f0f \u548c \u7b56\u7565\u6a21\u5f0f \u90fd\u901a\u8fc7\u5bf9\u8c61\u7684\u7ec4\u5408\u4fee\u6539\u5bf9\u8c61\u7684\u529f\u80fd\uff08\u8868\u73b0\uff09\uff0c\u4ee5\u7ec4\u5408\u7684\u65b9\u5f0f\u4ee3\u66ff\u7ee7\u627f\u4f7f\u7528\u66f4\u7075\u6d3b\u3002</p> <p>\u4e0d\u540c\u70b9</p> \u7b56\u7565 \u88c5\u9970 \u4fee\u6539\u5bf9\u8c61\u529f\u80fd\u7684\u5185\u6838 \u4fee\u6539\u5bf9\u8c61\u529f\u80fd\u7684\u5916\u58f3 \u7ec4\u4ef6\u5fc5\u987b\u4e86\u89e3\u6709\u54ea\u4e9b\u9700\u8981\u9009\u62e9\u7684\u7b56\u7565 \u7ec4\u4ef6\u65e0\u9700\u4e86\u89e3\u6709\u54ea\u4e9b\u53ef\u4ee5\u88c5\u9970\u7684\u5185\u5bb9"},{"location":"system_design/object_oriented/compose_interfaces/#_18","title":"\u88c5\u9970\u6a21\u5f0f\u4e0e\u4ee3\u7406\u6a21\u5f0f","text":"<p>\u88c5\u9970\u6a21\u5f0f \u548c \u4ee3\u7406\u6a21\u5f0f \u90fd\u7528\u6765\u6539\u53d8\u5bf9\u8c61\u7684\u884c\u4e3a\u3002</p> <p>\u53ef\u4ee5\u628a \u88c5\u9970 \u770b\u505a\u4e00\u8fde\u4e32\u7684 \u4ee3\u7406</p> <ul> <li> <p>\u88c5\u9970</p> <ul> <li>\u4e3a\u88ab\u88c5\u9970\u5bf9\u8c61\u589e\u52a0\u989d\u5916\u884c\u4e3a</li> <li>\u4e0d\u5f71\u54cd\u88ab\u88c5\u9970\u5bf9\u8c61\u7684\u539f\u6709\u529f\u80fd</li> <li>\u4e0d\u521b\u5efa\u88ab\u88c5\u9970\u5bf9\u8c61\uff0c\u53ea\u662f\u5c06\u65b0\u529f\u80fd\u6dfb\u52a0\u5230\u5df2\u6709\u5bf9\u8c61\u4e0a</li> <li>\u7ecf\u5e38\u591a\u5d4c\u5957\u88c5\u9970</li> </ul> </li> <li> <p>\u4ee3\u7406</p> <ul> <li>\u5e38\u7528\u6765\u5bf9\u88ab\u4ee3\u7406\u5bf9\u8c61\u8fdb\u884c\u66f4\u7cbe\u7ec6\u7684\u63a7\u5236</li> <li>\u88ab\u4ee3\u7406\u5bf9\u8c61\u4e0d\u5b58\u5728\u65f6\u521b\u5efa\u88ab\u4ee3\u7406\u5bf9\u8c61</li> <li>\u5c11\u89c1\u591a\u91cd\u5d4c\u5957</li> </ul> </li> </ul>"},{"location":"system_design/object_oriented/compose_interfaces/#_19","title":"\u8d23\u4efb\u7684\u4f20\u9012\u4e0e\u8d23\u4efb\u94fe","text":"<p>\u88c5\u9970\u5668\u7684\u4f7f\u7528\u6210\u4e00\u79cd\u94fe\u5f0f\u8c03\u7528\u5173\u7cfb\uff0c\u6bcf\u5c42\u5bf9\u8c61\u65e0\u9700\u4e86\u89e3\u6574\u4e2a\u94fe\u7684\u5168\u8c8c\uff0c\u53ea\u9700\u77e5\u9053\u201c\u4e0b\u4e00\u4e2a\u201d\u5bf9\u8c61\u662f\u8c01\u5373\u53ef\u3002</p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_20","title":"\u8d23\u4efb\u94fe","text":"<p>\u5c06\u4e00\u7cfb\u5217\u7684\u5904\u7406\u8005\u8fde\u57ce\u4e00\u6761\u94fe\uff0c\u5c06\u8bf7\u6c42\u6cbf\u7740\u8fd9\u4e2a\u94fe\u4f20\u9012\u5e76\u7531\u94fe\u4e0a\u7684\u5904\u7406\u7740\u4e88\u4ee5\u5904\u7406</p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_21","title":"\u4e00\u4e2a\u90ae\u4ef6\u8fc7\u6ee4\u5668","text":"<p>\u8bbe\u7f6e\u8fc7\u6ee4\u5668\uff1a\u6839\u636e\u53d1\u4ef6\u4eba\u3001\u6839\u636e\u4e3b\u9898\u3001\u6839\u636e\u5173\u952e\u5b57\u7b49</p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_22","title":"\u5b9e\u73b0","text":"<p>\u5b9a\u4e49\u8bf7\u6c42 <pre><code>class MailRequest {\n    //...\n   public:\n    string GetSender();\n    string GetTitle();\n    string GetBody();\n    string GetAll();\n\n    void Accept() { reject_ = false; }\n    void Reject() { reject_ = true; }\n\n    bool IsReject() { return reject_; }\n\n   private:\n    bool reject_;\n};\n</code></pre></p> <p>\u5b9a\u4e49\u201c\u5904\u7406\u8005\u201d\uff0c\u201c\u5904\u7406\u8005\u201d\u7528<code>DoHandle()</code>\u505a\u201c\u5206\u5185\u4e4b\u4e8b\u201d\uff0c\u5982\u4e0d\u6210\u529f\u518d\u5c06\u8f7b\u8f68\u53bb\u4f20\u9012\u7ed9\u540e\u7eed\u7684\u5904\u7406\u8005 <pre><code>class Handler {\n   public:\n    Handler(Handler* successor) : successor_(successor) {}\n    virtual ~Handler() {}\n    virtual bool DoHandle(MailRequest* request) = 0;\n    void Handle(MailRequest* request) {\n        if (!DoHandle(request)) {\n            if (successor_ != nullptr) successor_-&gt;Handle(request);\n        }\n    }\n\n   private:\n    Handler* successor_;\n};\n</code></pre></p> <p>\u5b9e\u73b0\u5404\u79cd\u8fc7\u6ee4\u5668\u903b\u8f91 <pre><code>class SenderFilter : public Handler {\n   public:\n    SenderFilter(Handler* successor) : Handler(successor);\n\n    bool DoHandle(MailRequest* request) {\n        if (IsWhite(request-&gt;GetSender())) {\n            request-&gt;Accept();\n            return true;\n        }\n        if (IsBlack(request-&gt;GetSender())) {\n            request-&gt;Reject();\n            return true;\n        }\n        return false;\n    }\n};\n\nclass TitleFilter : public Handler {\n   public:\n    TitleFilter(Handler* successor) : Handler(successor) {}\n    bool DoHandle(MailRequest* request) {\n        if (!IsValid(request-&gt;GetTitle())) {\n            request-&gt;Reject();\n            return true;\n        }\n        return false;\n    }\n};\n\nclass BodyFilter : public Handler {\n   public:\n    BodyFilter(Handler* successor) : Handler(successor) {}\n    bool DoHandle(MailRequest* request) {\n        for (auto s : invalid_texts) {\n            if (request-&gt;GetBody().find(s) != string::npos) {\n                request-&gt;Reject();\n                return true;\n            }\n        }\n        return false;\n    }\n\n   private:\n    vector&lt;string&gt; invalid_texts = {\"text1\", \"text2\" /*, .....*/};\n};\n</code></pre></p> <p>\u4e00\u822c\u5728\u8d23\u4efb\u94fe\u672b\u7aef\u6709\u4e00\u4e2a\u7f3a\u7701\u7684\u5904\u7406\u8005 <pre><code>class DefaultFilter : public Handler {\n    public:\n    DefaultFilter(Handler* successor) : Handler(successor) {}\n    bool DoHandle(MailRequest* request) {\n        request-&gt;Accept();\n        return true;\n    }\n};\n</code></pre></p> <p>\u8d23\u4efb\u94fe\u7684\u4ea7\u751f\u4ece\u94fe\u5c3e\u5230\u94fe\u5934\u53cd\u5411\u58f0\u660e\uff0c\u4f7f\u7528\u8d23\u4efb\u94fe\u65f6\u53ea\u8981\u628a\u5904\u7406\u8bf7\u6c42\u4ea4\u7ed9\u8d23\u4efb\u94fe\u5f00\u59cb\u7684\u5904\u7406\u8005\u5373\u53ef\u3002 <pre><code>int main(int argc, char* argv[]) {\n    DefaultFilter f1(nullptr);\n    BodyFilter f2(&amp;f1);\n    TitleFilter f3(&amp;f2);\n    SenderFilter f4(&amp;f3);\n\n    MailRequest* request = GetRequest();\n    f4.Handle(request);\n    if (request-&gt;IsReject()) {\n        cout &lt;&lt; \"Rejected.\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Accepted.\" &lt;&lt; endl;\n    }\n}\n</code></pre></p> <p></p>"},{"location":"system_design/object_oriented/compose_interfaces/#_23","title":"\u4e0e\u88c5\u9970\u3001\u4ee3\u7406\u5bf9\u6bd4","text":""},{"location":"system_design/object_oriented/compose_interfaces/#_24","title":"\u8d23\u4efb\u94fe\u4e0e\u88c5\u9970","text":"<p>\u4e24\u8005\u90fd\u6709\u201c\u8c03\u7528\u94fe\u201d\uff0c\u8d23\u4efb\u94fe\u5f3a\u8c03\u7684\u662f\u94fe\u6574\u4f53\u7684\u884c\u4e3a\uff0c\u800c\u88c5\u9970\u5219\u66f4\u5f3a\u8c03\u8c03\u7528\u94fe\u5e26\u6765\u7684\u7ec4\u7ec7\u7ed3\u679c\u3002</p> <p>\u5177\u4f53\u800c\u8a00\uff0c\u8d23\u4efb\u94fe\u4e0d\u4e00\u5b9a\u8c03\u7528\u5230\u5e95\uff0c\u53ef\u80fd\u5728\u67d0\u4e00\u73af\u5f97\u5230\u7ed3\u679c\uff1b\u4f46\u88c5\u9970\u94fe\u4e00\u5b9a\u8c03\u7528\u5230\u5e95\uff0c\u6bcf\u4e00\u73af\u90fd\u4f1a\u8d77\u4f5c\u7528\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_25","title":"\u8d23\u4efb\u94fe\u4e0e\u4ee3\u7406","text":"<p>\u8d23\u4efb\u94fe\u4e5f\u53ef\u4ee5\u770b\u4f5c\u4e00\u8fde\u4e32\u4ee3\u7406\u3002</p> <p>\u4ee3\u7406\u5f3a\u8c03\u63a7\u5236\u88ab\u4ee3\u7406\u5bf9\u8c61\uff0c\u6539\u53d8\u5bf9\u8c61\u7684\u884c\u4e3a\uff1b\u8d23\u4efb\u94fe\u5219\u7ec4\u7ec7\u591a\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\u3002</p>"},{"location":"system_design/object_oriented/compose_interfaces/#_26","title":"\u5c0f\u7ed3","text":"<p>\u672c\u90e8\u5206\u8003\u8651\u5982\u4f55\u5c06\u5c0f\u7684\u7a0b\u5e8f\u6a21\u5757\u7ec4\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u3002</p> <p>\u9002\u914d\u5668\u6a21\u5f0f - \u529f\u80fd\u6ee1\u8db3\uff0c\u63a5\u53e3\u6539\u53d8\u3002 - \u5e94\u7528\u4e3e\u4f8b\uff1a \u7528<code>std::vector</code>\u5b9e\u73b0\u7684<code>Stack</code>\u7c7b\u3002</p> <p>\u4ee3\u7406\u6a21\u5f0f - \u63a5\u53e3\u4e0d\u53d8\uff0c\u529f\u80fd\u589e\u52a0\uff08\u63a7\u5236\u903b\u8f91\uff09 - \u5e94\u7528\u4e3e\u4f8b\uff1a\u667a\u80fd\u6307\u9488\u3002</p> <ul> <li>\u4ee3\u7406\u6a21\u5f0f \u548c \u59d4\u6258\u6a21\u5f0f \u7684\u5173\u7cfb\uff1a \u59d4\u6258 \u5f3a\u8c03\u4e3b\u7c7b\u628a\u529f\u80fd\u4ea4\u51fa\u53bb\uff0c\u4ee3\u7406 \u5219\u5f3a\u8c03\u5728\u4e3b\u7c7b\u6267\u884c\u524d\u6267\u884c\u4e00\u4e9b\u7279\u522b\u64cd\u4f5c\u3002</li> </ul> <p>\u88c5\u9970\u5668\u6a21\u5f0f - \u5728\u53ef\u65b0\u6a21\u5757\u4e0a\u53e0\u52a0\u4e00\u7cfb\u5217\u9644\u52a0\u529f\u80fd\u3002 - \u5e94\u7528\u4e3e\u4f8b\uff1a<code>TextViewer</code>\u52a0\u6eda\u52a8\u6761\u548c\u5de5\u5177\u680f</p> <p>\u8d23\u4efb\u94fe\u6a21\u5f0f - \u5bf9\u5bf9\u8c61\u6267\u884c\u4e00\u7cfb\u5217\u7684\u4efb\u52a1\uff0c\u53ef\u80fd\u7ec8\u6b62\u4e8e\u4efb\u4f55\u4e00\u73af\u3002 - \u5e94\u7528\u4e3e\u4f8b\uff1a\u90ae\u4ef6\u8fc7\u6ee4\u5668</p> <p>\u53e6\u5916\u6ce8\u610f\u6807\u51c6\u5e93\u548c\u5f00\u6e90\u4ee3\u7801\u7684\u4f7f\u7528\u3002</p>"},{"location":"system_design/object_oriented/object_and_interface/","title":"\u5bf9\u8c61\u4e0e\u63a5\u53e3","text":""},{"location":"system_design/object_oriented/object_and_interface/#fopoop","title":"\u4eceFOP\u5230OOP","text":"<p>FOP - Functional oriented programming OOP - Object oriented programming</p> <p>\u76ee\u6807\uff1a\u5f15\u51fa\u5bf9\u8c61 \u601d\u8003\uff1a\u5982\u4f55\u786e\u5b9a\u5bf9\u8c61\u8fb9\u754c\u3001\u5c01\u88c5\u4ec0\u4e48\u3001\u66b4\u9732\u4ec0\u4e48\u3001\u9690\u85cf\u4ec0\u4e48</p>"},{"location":"system_design/object_oriented/object_and_interface/#_2","title":"\u4ee5\u201d\u7535\u5b50\u8ba1\u4ef7\u5668\u4e3a\u4f8b\u201c","text":"<p>\u5b9e\u73b0\u4e00\u4e2a\u7535\u5b50\u8ba1\u4ef7\u5668\uff0c\u6839\u636e\u591a\u4e2a\u5546\u54c1\u7684\u5355\u4ef7\u548c\u91cd\u91cf\u8ba1\u7b97\u603b\u4ef7\u3002</p> <p>FOP\u7248\u672c <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    float apple_price = 5.5;\n    float banana_price = 3.4;\n    float apple_weight = 0.0;\n    float banana_weight = 0.0;\n    float total = 0.0;\n\n    cout &lt;&lt; \"Weight of apple: \" &lt;&lt; endl;\n    cin &gt;&gt; apple_weight;\n    cout &lt;&lt; \"Weight of banana: \" &lt;&lt; endl;\n    cin &gt;&gt; banana_weight;\n    total = apple_price * apple_weight + banana_price * banana_weight;\n    cout &lt;&lt; \"Payment: \" &lt;&lt; total &lt;&lt; endl;\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/object_and_interface/#_3","title":"\u53d8\u5316\u5206\u5c42","text":"<p>\u5bf9\u4e8e\u6bcf\u6b21\u90fd\u8981\u53d8\u5316\u7684\u201c\u91cd\u91cf\u201d\uff0c\u201c\u5355\u4ef7\u201d\u662f\u76f8\u5bf9\u4e0d\u53d8\u7684\u3002</p> <p>\u4e3a\u533a\u5206\u4e24\u79cd\u4e0d\u540c\u5c42\u6b21\u7684\u201c\u53d8\u5316\u201d\uff0c\u201c\u5355\u4ef7\u201d\u5e94\u8be5\u88ab\u5c01\u5728\u8ba1\u4ef7\u5668\u91cc</p> <p>OOP\u7248\u672c <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Calculator {\n   public:\n    Calculator(float _apple_price, float _banana_price)\n        : apple_price(_apple_price), banana_price(_banana_price) {}\n\n    float CalTotal(float apple_weight, float banana_weight);\n\n   private:\n    float apple_price, banana_price;\n};\n\nfloat Calculator::CalTotal(float apple_weight, float banana_weight) {\n    return apple_price * apple_weight + banana_price * banana_weight;\n}\n\nint main() {\n    Calculator c(5.5, 3.4);\n\n    float apple_weight = 0.0;\n    float banana_weight = 0.0;\n\n    cout &lt;&lt; \"Weight of apple: \" &lt;&lt; endl;\n    cin &gt;&gt; apple_weight;\n    cout &lt;&lt; \"Weight of banana: \" &lt;&lt; endl;\n    cin &gt;&gt; banana_weight;\n    cout &lt;&lt; \"Payment: \" &lt;&lt; c.CalTotal(apple_weight, banana_weight) &lt;&lt; endl;\n }\n</code></pre></p>"},{"location":"system_design/object_oriented/object_and_interface/#_4","title":"\u5c01\u88c5","text":"<p>\u628a\u4e0d\u5e38\u53d8\u5316\u7684<code>apple_price</code>\u548c<code>banana_price</code>\u5c01\u88c5\u8d77\u6765\uff0c\u5f62\u6210<code>Calculator</code>\u6982\u5ff5\uff0c\u4f7f\u7528<code>Calculator</code>\u65f6\u628a\u7ecf\u5e38\u53d8\u5316\u7684\u91cd\u91cf\u4f5c\u4e3a\u53c2\u6570\u3002</p> <ul> <li>\u63a5\u53e3\uff1a\u7c7b\u66b4\u9732\u51fa\u6765\u7684\u90e8\u5206\uff0c\u662f\u7c7b\u6240\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282</li> </ul> <p>UML\u7c7b\u56fe</p> Calculator - apple_price: float - banana_price: float + CalTotal(in apple_weight: float, in banana_weight:float): float"},{"location":"system_design/object_oriented/object_and_interface/#_5","title":"\u5982\u4f55\u62bd\u8c61\u51fa\u5bf9\u8c61","text":""},{"location":"system_design/object_oriented/object_and_interface/#_6","title":"\u95ee\u9898","text":"<p>A, B, C, D \u56db\u4e2a\u4eba\uff0c\u5176\u4e2d\u4e00\u4e2a\u4eba\u662f PyTorch \u7684\u4f5c\u8005\uff0c\u5bf9\u6b64\u56db\u4e2a\u4eba\u5206\u522b\u4f5c\u4e86\u9648\u8ff0\uff1a</p> <ul> <li> <p>A : \u4e0d\u662f\u6211</p> </li> <li> <p>B : \u4f5c\u8005\u662f C</p> </li> <li> <p>C : \u4f5c\u8005\u662f D</p> </li> <li> <p>D : C \u8bf4\u5f97\u4e0d\u5bf9\u3000</p> </li> </ul> <p>\u5df2\u77e5\u5176\u4e2d\u6709\u4e09\u53e5\u771f\u8bdd\u3001\u4e00\u53e5\u5047\u8bdd\uff0c\u95ee\u4f5c\u8005\u662f\u8c01\uff1f</p>"},{"location":"system_design/object_oriented/object_and_interface/#fop","title":"FOP\u7248\u672c","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    for (char author = 'A'; author &lt;= 'D'; author++) {\n        int count = 0;\n        count += (author != 'A');\n        count += (author == 'C');\n        count += (author == 'D');\n        count += (author != 'D');\n\n        if (count == 3) {\n            cout &lt;&lt; \"The author could be \" &lt;&lt; author &lt;&lt; endl;\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"system_design/object_oriented/object_and_interface/#oop","title":"OOP\u7248\u672c","text":"\u95ee\u9898\u4e2d\u53ef\u53d8\u7684\u90e8\u5206 \u63cf\u8ff0\u65b9\u6cd5 \u5019\u9009\u4eba\u6570\u91cf\u3000\u3000 \u6574\u578b\u53c2\u6570 n \u771f\u5b9e\u9648\u8ff0\u7684\u6570\u91cf \u6574\u578b\u53c2\u6570\u3000correct \u6bcf\u4e2a\u5019\u9009\u4eba\u7684\u9648\u8ff0\u7684\u771f\u5b9e\u6027 \u4e00\u7ec4\u4e0e\u5019\u9009\u4eba\u5bf9\u5e94\u7684\u8fd4\u56de\u5e03\u5c14\u578b\u7684\u51fd\u6570 <p>\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u8fd4\u56de\u6bcf\u4e2a\u5019\u9009\u4eba\u7684\u9648\u8ff0\u771f\u5b9e\u6027\u7684\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5185\u90e8\u903b\u8f91\u4f9d\u8d56\u4e8e\u9648\u8ff0\u672c\u8eab\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u9648\u8ff0\u540c\u610f\u53ef\u4ee5\u8868\u8ff0\u4e3a\u4f5c\u8005\u3000\u662f/\u4e0d\u662f\u3000\u201c\u67d0\u4e2a\u4eba\u201d\u7684\u5f62\u5f0f\u3002</p> <p>\u53ef\u4ee5\u91cd\u8f7d<code>()</code>\u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Candidate {\n   public:\n    Candidate(bool _equal, char _author) : equal(_equal), author(_author) {}\n    bool operator()(char suspect);\n\n   private:\n    char author;\n    bool equal;\n};\n\nbool Candidate::operator()(char suspect) {\n    return equal ? (suspect == author) : (suspect != author);\n}\n\nchar solve(int number, int correct, Candidate* candidates) {\n    for (int i = 0; i &lt; number; i++) {\n        int count = 0;\n        char suspect = 'A' + i;\n\n        for (int j = 0; j &lt; number; j++) count += candidates[j](suspect);\n\n        cout &lt;&lt; count &lt;&lt; endl;\n\n        if (count == correct) return suspect;\n    }\n\n    return '\\0';\n}\n\nint main() {\n    Candidate candidates[] = {Candidate(false, 'A'), Candidate(true, 'C'),\n                              Candidate(true, 'D'), Candidate(false, 'D')};\n    char suspect = solve(4, 3, candidates);\n\n    if (suspect != '\\0') {\n        cout &lt;&lt; \"The author is \" &lt;&lt; suspect &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Nooooooooooooooop!\" &lt;&lt; endl;\n    }\n}\n</code></pre> <p>\u57fa\u4e8eOOP\u7248\u672c\u7684\u5b9e\u73b0\uff0c\u95ee\u9898\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6269\u5c55\u5230 n \u4e2a\u5019\u9009\u4eba\uff0c\u4e14\u6709 m \u4e2a\u5019\u9009\u4eba\u7684\u9648\u8ff0\u771f\u5b9e\u7684\u60c5\u51b5\u3002</p>"},{"location":"system_design/object_oriented/object_and_interface/#_7","title":"\u5982\u4f55\u5b9a\u4e49\u63a5\u53e3","text":""},{"location":"system_design/object_oriented/object_and_interface/#_8","title":"\u95ee\u9898\uff1a\u65cb\u8f6c\u77e9\u9635","text":"<p>\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u6574\u6570 N \uff0c\u8f93\u51fa\u65cb\u8f6c\u77e9\u9635\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a</p>  1, 16, 15, 14, 13\\\\ 2, 17, 24, 23, 12\\\\ 3, 18, 25, 22, 11\\\\ 4, 19, 20, 21, 10\\\\ 5,  6,  7,  8,  9"},{"location":"system_design/object_oriented/object_and_interface/#_9","title":"\u8bbe\u8ba1\u601d\u8def\uff1a\u81ea\u9876\u5411\u4e0b","text":"<p>\u8fd9\u4e2a\u7c7b\u5982\u4f55\u88ab\u4f7f\u7528\uff1f</p> <pre><code>Matrix obj(size);\nobj.fill();\ncout &lt;&lt; obj;\n</code></pre> <p>\u6839\u636e\u4f7f\u7528\u65b9\u6cd5\u8bbe\u8ba1<code>Matrix</code>\u7684\u63a5\u53e3</p> <pre><code>class matrix {\n   public:\n    Matrix(int size);\n    void fill();\n    friend ostream&amp; operator&lt;&lt; (ostream&amp; out, const Matrix&amp; m);\n};\n</code></pre> <p>\u5b9e\u73b0\u7c7b\u7684\u63a5\u53e3</p> <p>\u786e\u5b9a\u9700\u8981\u54ea\u4e9b\u6210\u5458\u53d8\u91cf</p> <pre><code>class Matrix {\n   public:\n    Matrix(int size);\n    ~Matrix();\n    void fill();\n    friend ostream&amp; operator&lt;&lt; (ostream&amp; out, const Matrix&amp; m);\n   private:\n    int size_;\n    int *data_;\n};\n</code></pre> <p>\u5b9e\u73b0\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8f93\u51fa\u6d41\u64cd\u4f5c\u7b26</p> <pre><code>Matrix::Matrix(int size) : size_(size) {\n    data_ = new int[size * size];\n    memset(data_, 0, sizeof(int) * size_ * size_);\n}\n\nMatrix::~Matrix() {\n    delete[] data_;\n}\n\nostream&amp; operator&lt;&lt; (ostream&amp; out, const Matrix&amp; m) {\n    for (int r = 0; r &lt; m.size_; r++) {\n        for (int c = 0; c &lt; m.size_; c++)\n            cout &lt;&lt; *(m.data_ + r * m.size_ + c) &lt;&lt; '\\t';\n        cout &lt;&lt; endl;\n    }\n}\n</code></pre> <p>\u5b9e\u73b0\u586b\u5145\u51fd\u6570</p> <p>\u589e\u52a0\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\u8ba1\u7b97\u5e76\u586b\u5145</p> <pre><code>class Matrix {\n   public:\n    ...\n   private:\n    ...\n    int FindPosition();\n};\n\nvoid Matrix::fill() {\n    for (int num = 1; num &lt;= size_ * size_; num++) {\n        int pos = FindPosition();\n        data_[pos] = num;\n    }\n}\n</code></pre> <p>\u5269\u4e0b\u7684\u4efb\u52a1\u5c31\u662f\u5b9e\u73b0<code>FindPosition()</code>\u3002</p> <p>\u5bf9\u4e8e\u4e0d\u540c\u7684\u77e9\u9635\u5f62\u5f0f\uff0c\u4e5f\u53ea\u9700\u6539\u53d8<code>FindPosition</code>\u5373\u53ef\u3002</p>"},{"location":"system_design/object_oriented/object_and_interface/#_10","title":"\u591a\u6001\u7684\u5e94\u7528","text":"<p>\u7a0b\u5e8f\u8bbe\u8ba1\u7684 \u5f00\u95ed\u539f\u5219 \uff0c\u7a0b\u5e8f\u5bf9\u53d8\u5316\u7684\u9700\u6c42\u5e94\u8be5\u662fopen\u7684\uff0c\u4f46\u5e94\u8be5\u5c3d\u91cf\u4e0d\u6539\u52a8\u539f\u6709\u4ee3\u7801</p> <p>\u8fd9\u65f6\u53ef\u4ee5\u5c06<code>FindPostion</code>\u5728<code>Matrix</code>\u5b9a\u4e49\u4e3a\u7eaf\u865a\u51fd\u6570\u3002</p>"},{"location":"system_design/object_oriented/object_and_interface/#_11","title":"\u6a21\u677f\u65b9\u6cd5","text":"<p>\u62bd\u8c61\u7c7b\uff08\u57fa\u7c7b\uff09\u5b9a\u4e49\u7b97\u6cd5\u4e0d\u53d8\u7684\u9aa8\u67b6\u3002</p> <p>\u7b97\u6cd5\u7684\u9700\u8981\u6539\u53d8\u7684\u7ec6\u8282\u7531\u5b9e\u73b0\u7c7b\uff08\u5b50\u7c7b\uff09\u4ee5\u91cd\u5199\uff08override\uff09\u7684\u5b9e\u73b0\u3002</p> <p>\u5728\u4f7f\u7528\u65f6\uff0c\u8c03\u7528\u62bd\u8c61\u7c7b\u7684\u7b97\u6cd5\u9aa8\u67b6\u65b9\u6cd5\uff0c\u518d\u7531\u8fd9\u4e2a\u65b9\u6cd5\u6839\u636e\u9700\u8981\u8c03\u7528\u7d2f\u7684\u7b97\u6cd5\u7ec6\u8282\u5b9e\u73b0\u3002</p>"},{"location":"system_design/object_oriented/object_and_interface/#_12","title":"\u9488\u5bf9\u63a5\u53e3\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0","text":"<ul> <li> <p>\u901a\u8fc7\u62bd\u8c61\u51fa\u201c\u62bd\u8c61\u6982\u5ff5\u201d\uff0c\u8bbe\u8ba1\u51fa\u63cf\u8ff0\u8fd9\u4e2a\u62bd\u8c61\u6982\u5ff5\u7684\u201c\u62bd\u8c61\u7c7b\u201d\uff0c\u6216\u79f0\u4e3a\u201c\u63a5\u53e3\u7c7b\u201d\uff0c\u8fd9\u4e2a\u7c7b\u6709\u4e00\u7cfb\u5217\uff08\u7eaf\uff09\u865a\u51fd\u6570\uff0c\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u7c7b\u7684\u201c\u63a5\u53e3\u201d</p> </li> <li> <p>\u5bf9\u8fd9\u4e2a\u63a5\u53e3\u7c7b\u8fdb\u884c\u7ee7\u627f\u5e76\u5b9e\u73b0\u8fd9\u4e9b\uff08\u7eaf\uff09\u865a\u51fd\u6570\uff0c\u4ece\u800c\u5f62\u6210\u8fd9\u4e2a\u62bd\u8c61\u6982\u5ff5\u7684\u201c\u5b9e\u73b0\u7c7b\u201d \u2014\u2014 \u5b9e\u73b0\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\u4ee5\u9002\u5e94\u53d8\u5316</p> </li> <li> <p>\u5728\u4f7f\u7528\u8fd9\u4e2a\u6982\u5ff5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528\u63a5\u53e3\u7c7b\u6765\u5f15\u7528\u8fd9\u4e2a\u6982\u5ff5\uff0c\u800c\u4e0d\u76f4\u63a5\u4f7f\u7528\u5b9e\u73b0\u7c7b\uff0c\u4ece\u800c\u907f\u514d\u5b9e\u73b0\u7c7b\u7684\u6539\u53d8\u9020\u6210\u6574\u4e2a\u7a0b\u5e8f\u7684\u5927\u89c4\u6a21\u4fee\u6539</p> </li> </ul>"},{"location":"system_design/object_oriented/split_representation/","title":"\u7b97\u6cd5\u7eb5\u5411\u62c6\u5206 - \u5206\u79bb\u8868\u793a","text":"<p>\u5c1d\u8bd5\u5c06\u7b97\u6cd5\u548c\u6570\u636e\u5206\u79bb\u3002</p> <p>\u903b\u8f91\u3001\u6570\u636e\u5982\u4f55\u8868\u793a\u3001\u7b97\u6cd5\u7ec6\u8282\u4e1a\u52a1\u6d41\u7a0b\u7684\u7ec6\u8282\u76f8\u5173\u7684\u90e8\u5206</p> <p>\u5206\u79bb\u3001\u89e3\u8026\u8fd9\u4e09\u8005</p> <p>\u6cdb\u578b\u7f16\u7a0b\uff1a\u5148\u5b9e\u73b0\u7b97\u6cd5\u3001\u4f7f\u7528\u65f6\u518d\u8003\u8651\u6570\u636e\u7c7b\u578b</p> <p>\u6570\u636e\u7c7b\u578b\uff0c\u5bf9\u8ba1\u7b97\u673a\u5e95\u5c42\u662f\u4e00\u79cd\u8868\u793a\uff0c\u5bf9\u7b97\u6cd5\u662f\u4e00\u79cd\u675f\u7f1a</p>"},{"location":"system_design/object_oriented/split_representation/#_1","title":"\u8fed\u4ee3\u5668","text":""},{"location":"system_design/object_oriented/split_representation/#_2","title":"\u4ece\u95ee\u9898\u5f00\u59cb","text":"<p>\u7f16\u7a0b\u7edf\u8ba1\u8003\u8bd5\u53ca\u683c\u7387 <pre><code>int main(int argc, char* argv[]) {\n    float scores[STUDENT_COUNT];\n    int passed = 0;\n    // initialize scores here.\n    for (int i = 0; i != STUDENT_COUNT; i++) {\n        if (scores[i] &gt;= 60) passed++;\n    }\n\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / STUDENT_COUNT &lt;&lt; endl;\n\n    return EXIT_SUCCESS;\n}\n</code></pre></p> <p>\u6ce8\uff1a\u8fd9\u91cc\u7528<code>!=</code>\u800c\u4e0d\u7528<code>&lt;</code>\u7684\u539f\u56e0\u662f<code>!=</code>\u7684\u6267\u884c\u66f4\u9ad8\u6548\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_3","title":"\u8d23\u4efb\u5206\u89e3","text":"<p>\u628a\u201c\u5206\u6790\u201d\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u529f\u80fd <pre><code>void Analyze(float *scores, int student_count) {\n    int passed = 0;\n\n    for (int i = 0; i != student_count; i++) {\n        if (scores[i] &gt;= 60) passed++;\n    }\n\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / student_count &lt;&lt; endl;\n}\n</code></pre></p> <p>\u5982\u679c\u6210\u7ee9\u4f7f\u7528\u5355\u5411\u94fe\u8868\u5b58\u50a8 <pre><code>struct Student {\n    float score;\n    Student* next;\n};\n\n//...\n\nStudent* head;\n</code></pre></p> <p>\u5219\u5148\u524d\u7684<code>Analyze</code>\u5931\u6548\u3002</p> <p>\u91cd\u65b0\u5b9e\u73b0<code>Analyze</code>\uff1a <pre><code>void Analyze(Student* scores) {\n    int passed = 0, count = 0;\n    for (Student *p = scores; p != nullptr; p = p-&gt;next) {\n        if (p-&gt;score &gt;= 60) passed++;\n        count++;\n    }\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_4","title":"\u201c\u904d\u5386\u201d\u7684\u9700\u6c42","text":"<ul> <li> <p>\u4e0d\u53d8\u7684\u9700\u6c42\uff1a\u904d\u5386\u6240\u6709\u5b66\u751f\u7684\u6210\u7ee9</p> </li> <li> <p>\u53d8\u5316\u7684\u5b58\u50a8\u65b9\u5f0f\uff1a\u64cd\u4f5c\u4e0d\u5e0c\u671b\u88ab\u67d0\u79cd\u5b58\u50a8\u65b9\u5f0f\u7ed1\u5b9a</p> </li> </ul> <p>\u5206\u79bb\u201c\u53d8\u201d\u4e0e\u201c\u4e0d\u53d8\u201d</p> <ul> <li> <p>\u628a\u201c\u8bbf\u95ee\u201d\u8bbe\u8ba1\u6210\u4e00\u4e2a\u63a5\u53e3</p> </li> <li> <p>\u9488\u5bf9\u4e0d\u540c\u7684\u201c\u5b58\u50a8\u201d\u5b8c\u6210\u8fd9\u4e2a\u63a5\u53e3\u7684\u4e0d\u540c\u5b9e\u73b0</p> </li> </ul>"},{"location":"system_design/object_oriented/split_representation/#_5","title":"\u8fed\u4ee3\u5668","text":"<p>\u628a\u201c\u8bbf\u95ee\u201d\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u63a5\u53e3 <pre><code>class Iterator {\n   public:\n    virtual ~Iterator() {}\n    virtual bool operator!=(const Iterator&amp; other) const = 0;\n    virtual const Iterator&amp; operator++() = 0;\n    virtual const Iterator* operator++(int) = 0;\n    virtual float&amp; operator*() const = 0;\n    virtual float&amp; operator-&gt;() const = 0;\n    bool operator==(const Iterator&amp; other) const { return !(*this != other); }\n};\n</code></pre></p> <p>\u4f7f\u7528\u8fed\u4ee3\u5668 <pre><code>void Analyze(Iterator* begin, Iterator* end) {\n    int passed = 0, count = 0;\n\n    for (Iterator* p = begin; *p != *end; (*p)++) {\n        if (**p &gt;= 60) passed;\n        count++;\n    }\n\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n</code></pre></p> <p>\u9700\u8981\u7ed9\u201c\u5b58\u50a8\u201d\u5bf9\u8c61\u4e00\u4e2a\u7ea6\u675f</p> <ul> <li> <p>\u80fd\u591f\u8fd4\u56de\u4ee3\u8868\u201c\u5934\u201d\u548c\u201c\u5c3e\u201d\u7684\u8fed\u4ee3\u5668</p> </li> <li> <p>\u4f7f\u7528\u201c\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u201d\uff0c\u5373 [begin, end) - \u4ee5\u4fbf\u4e8e\u7528<code>!=</code>\u5224\u65ad\u7ed3\u675f</p> </li> </ul> <pre><code>class Collection {\n   public:\n    virtual ~Collection() {}\n    virtual Iterator* begin() const = 0;\n    virtual Iterator* end() const = 0;\n    virtual int size() = 0;\n};\n\nint main(int argc, char* argv[]) {\n    Collection* collection;\n    // initialize collection here...\n    Analyze(collection-&gt;begin(), collection-&gt;end());\n}\n</code></pre>"},{"location":"system_design/object_oriented/split_representation/#_6","title":"\u8fed\u4ee3\u5668\u7684\u5b9e\u73b0","text":"<p>\u5b9e\u73b0\u57fa\u4e8e\u6570\u7ec4\u7684\u96c6\u5408 <pre><code>class ArrayCollection : public Collection {\n   public:\n    ArrayCollection() : size_(10) { data_ = new float[size_]; }\n    ArrayCollection(int size, float* data) : size_(size) {\n        data_ = new float[size_];\n        for (int i = 0; i &lt; size_; i++) *(data_ + i) = *(data + i);\n    }\n    ~ArrayCollection() { delete[] data_; }\n\n    int size() { return size_; }\n    Iterator* begin() const;\n    Iterator* end() const;\n\n   private:\n    friend class ArrayIterator;\n    float* data_;\n    int size_\uff1b\n};\n</code></pre></p> <p>\u5176\u4e2d\u83b7\u53d6\u9996\u3001\u5c3e<code>Iterator</code>\u7684\u6210\u5458\u51fd\u6570\uff1a <pre><code>Iterator* ArrayCollection::begin() const {\n    return new ArrayIterator(data_, 0);\n}\n\nIterator* ArrayCollection::end() const {\n    return new ArrayIterator(data_, size_);\n}\n</code></pre></p> <p>\u5b9e\u73b0\u57fa\u4e8e\u6570\u7ec4\u7684\u8fed\u4ee3\u5668 <pre><code>class ArrayIterator : public Iterator {\n   public:\n    ArrayIterator(float* data, int index) : data_(data), index_(index) {}\n    ArrayIterator(const ArrayIterator&amp; other)\n        : data_(other.data_), index_(other.index_) {}\n    ~ArrayIterator() {}\n    const Iterator&amp; operator++();\n    const Iterator&amp; operator++(int);\n    float&amp; operator*() const;\n    float* operator-&gt;() const;\n    bool operator!=(const Iterator&amp; other) const;\n\n   private:\n    float* data_;\n    int index_;\n};\n\nconst Iterator&amp; ArrayIterator::operator++() {\n    index_++;\n    return *this;\n}\n\nconst Iterator&amp; ArrayIterator::operator++(int) {\n    index_++;\n    return ArrayIterator(data_, index_ - 1);\n}\n\nfloat&amp; ArrayIterator::operator*() const { return *(data_ + index_); }\n\nfloat* ArrayIterator::operator-&gt;() const { return (data_ + index_); }\n\nbool ArrayIterator::operator!=(const Iterator&amp; other) const {\n    return data_ != ((ArrayIterator*)(&amp;other))-&gt;data_ ||\n           index_ != ((ArrayIterator*)(&amp;other))-&gt;index_;\n}\n</code></pre></p> <p>\u91cd\u5199<code>Analyze</code>\u548c<code>main</code> <pre><code>void Analyze(Iterator* begin, Iterator* end) {\n    int passed = 0, count = 0;\n    for (Iterator* p = begin; *p != *end; (*p)++) {\n        if (**p &gt;= 60) passed++;\n        count++;\n    }\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n\nint main() {\n    float scores[] = {90, 20, 40, 40, 30, 60, 70, 30, 90, 100};\n    Collection* collection = new ArrayCollection(10, scores);\n\n    Analyze(collection-&gt;begin(), collection-&gt;end());\n    system(\"PAUSE\");\n    return EXIT_SUCCESS;\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_7","title":"\u8fed\u4ee3\u5668\u6a21\u5f0f","text":"<p>\u8bbe\u8ba1\u6a21\u5f0f</p> <ul> <li> <p>\u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\u987a\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u805a\u5408\u5bf9\u8c61\u4e2d\u7684\u5404\u4e2a\u5143\u7d20</p> </li> <li> <p>\u4e0d\u66b4\u9732\u8be5\u5bf9\u8c61\u7684\u5185\u90e8\u8868\u793a\u2014\u2014\u4e0e\u5bf9\u8c61\u7684\u5185\u90e8\u8868\u793a\u65e0\u5173\uff08\u6570\u7ec4\u8fd8\u662f\u94fe\u8868\uff09</p> </li> </ul> <p></p> <pre><code>//...\nfor (Iterator p = begin; p != end; p++) {\n    // do something with object *p;\n}\n//...\n</code></pre>"},{"location":"system_design/object_oriented/split_representation/#_8","title":"\u53e6\u4e00\u79cd\u5e38\u89c1\u7684\u8fed\u4ee3\u5668\u6a21\u5f0f","text":"<p>\u5982Java\u7b49\u8bed\u8a00\u4e0d\u63d0\u4f9b<code>++</code>\u7b49\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u4e0a\u8ff0\u8fed\u4ee3\u5668\u6a21\u5f0f\u63d0\u4f9b\u4e86\u5355\u5411\u8fed\u4ee3\uff1a <pre><code>//...\nIterator it = Collection.iterator();\nwhile (it.HasNext()) {\n    Object object = it.next();\n    // do something with object;\n}\n//...\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_9","title":"\u8fed\u4ee3\u5668\u4e0e\u6a21\u677f","text":"<p>\u56fa\u5b9a\u7684\u4e1c\u897f\uff1a</p> <ul> <li> <p>\u4ea7\u751f\u8fed\u4ee3\u5668\u7684\u65b9\u6cd5</p> </li> <li> <p>\u8fed\u4ee3\u5668\u904d\u5386\u96c6\u5408\u7684\u63a5\u53e3</p> </li> </ul> <p>\u53d8\u5316\u7684\u4e1c\u897f\uff1a</p> <ul> <li> <p>\u96c6\u5408\u7684\u5b58\u50a8\u65b9\u5f0f</p> </li> <li> <p>\u8fed\u4ee3\u5668\u904d\u5386\u96c6\u5408\u7684\u5177\u4f53\u5b9e\u73b0</p> </li> </ul> <p>\u8fed\u4ee3\u5668\u5b9e\u73b0\u4e86 \u904d\u5386\u64cd\u4f5c \u4e0e \u5b58\u50a8\u65b9\u6cd5 \u7684\u9694\u79bb\u3002\u4f7f\u5f97\u5b9e\u73b0\u7b97\u6cd5\u903b\u8f91\u65f6\u65e0\u9700\u5173\u5fc3\u6570\u636e\u8868\u793a\uff0c\u800c\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u7684\u65f6\u5019\u53c8\u65e0\u9700\u5173\u5fc3\u7b97\u6cd5\u7684\u903b\u8f91\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_10","title":"\u7b97\u6cd5\u7684\u901a\u7528\u5316","text":"<p>\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e9b\u5217\u901a\u7528\u7b97\u6cd5\uff1a<code>max</code>, <code>min</code>, <code>sort</code>, <code>count</code>, <code>count_if</code>, <code>find</code>, ...</p> <pre><code>int main() {\n    float scores[] = {90, 20, 40, 40, 30, 60, 70, 30, 90, 100};\n    Collection* c = new ArrayCollection(10, scores);\n    cout &lt;&lt; \"passing rate = \"\n         &lt;&lt; (float)count_if(c-&gt;begin(), c-&gt;end(), passed()) / c.size() &lt;&lt; endl;\n\n    system(\"PAUSE\");\n    return EXIT_SUCCESS;\n}\n</code></pre>"},{"location":"system_design/object_oriented/split_representation/#_11","title":"\u6539\u8fdb\u76ee\u6807","text":""},{"location":"system_design/object_oriented/split_representation/#1","title":"\u95ee\u9898 1","text":"<p>\u5f53\u524d\u7684\u4f7f\u7528\u65b9\u5f0f <pre><code>void Analyze(Iterator* begin, Iterator* end) {\n    for (Iterator *p = begin; *p != *end; (*p)++) {\n        if (**p &gt;= 60)   //...\n    }\n}\n</code></pre></p> <p>\u671f\u5f85\u7684\u4f7f\u7528\u65b9\u5f0f <pre><code>void Analyze(const Iterator&amp; begin, const Iterator&amp; end) {\n    for (Iterator p = begin; p != end; p++) {\n        if (*p &gt;= 60)   //...\n    }\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#2","title":"\u95ee\u9898 2","text":"<p>\u53ea\u652f\u6301<code>float</code>\u7c7b\u578b\uff0c\u89c1\u5982\u4e0b<code>*</code>\u548c<code>-&gt;</code>\u7684\u91cd\u8f7d</p> <pre><code>class Iterator {\n   public:\n    virtual ~Iterator() {}\n    virtual bool operator!=(const Iterator&amp; other) const = 0;\n    virtual const Iterator&amp; operator++() = 0;\n    virtual const Iterator* operator++(int) = 0;\n    virtual float&amp; operator*() const = 0;\n    virtual float&amp; operator-&gt;() const = 0;\n    bool operator==(const Iterator&amp; other) const { return !(*this != other); }\n};\n</code></pre>"},{"location":"system_design/object_oriented/split_representation/#_12","title":"\u5f15\u5165\u6a21\u677f","text":"<p>\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\uff0c\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5c06\u7c7b\u578b\u4f5c\u4e3a\u53ef\u53d8\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u5728\u4f7f\u7528\u524d\u5fc5\u987b\u505a\u51fa\u6307\u660e\u3002\u5982\u6b64\u4e00\u6765\uff0c\u53ef\u4ee5\u5148\u8003\u8651\u901a\u7528\u7684\u7b97\u6cd5\u548c\u62bd\u8c61\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u518d\u5728\u4f7f\u7528\u65f6\u4e88\u4ee5\u5b9e\u4f8b\u5316</p> <p>\u4f7f\u7528 \u6a21\u677f \u6280\u672f\u5b9e\u73b0 \u6cdb\u578b\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_13","title":"\u901a\u7528\u7b97\u6cd5","text":"<pre><code>template &lt;class iterator_&gt;\nvoid Analysis(iterator_ begin, iterator_ end) {\n    int passed = 0, count = 0;\n    for (iterator_ p = begin; p != end; p++) {\n        if (*p &gt;= 60) passed++;\n        count++;\n    }\n\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n</code></pre> <p>\u8fd9\u91cc<code>iterator_</code>\u7c7b\u578b\u7684\u53d8\u91cf\u9700\u8981\u5b9e\u73b0<code>=</code>, <code>!=</code>, <code>++</code>\u8fd0\u7b97\u7b26\u3002</p> <pre><code>template &lt;class T&gt;\nclass ArrayCollection {\n   public:\n    ArrayCollection() : size_(10) { data_ = new T[size_]; }\n    ArrayCollection(int size) : size(size_) { data_ = new T[size_]; }\n    ArrayCollection(int size, T* data) : size_(size) {\n        data_ = new T[size_];\n        for (int i = 0; i &lt; size_; i++) *(data_ + i) = *(data + i);\n    }\n    ~ArrayCollection() { delete[] data_; }\n    T* begin(){ return data_; }\n    T* end() { return data_ + size_; }\n\n   private:\n    T* data_;\n    int size_;\n};\n</code></pre>"},{"location":"system_design/object_oriented/split_representation/#_14","title":"\u94fe\u8868\u8282\u70b9\u3001\u94fe\u8868\u8fed\u4ee3\u5668\u3001\u94fe\u8868\u5bb9\u5668","text":"<pre><code>template &lt;class T&gt;\nstruct LinkiedListNode {\n    T data_;\n    LinkedListNode* next;\n    LinkedListNode() : next(nullptr) {}\n    LinkedListNode(T data) : data_(data), next(nullptr) {}\n};\n\ntemplate &lt;class T&gt;\nstruct LinkedListIterator {\n    LinkedListNode&lt;T&gt;* pointer;\n    LinkedListIterator(LinkiedListNode&lt;T&gt;* p) : pointer(p) {}\n    LinkedListIterator(const LinkedListIterator&lt;T&gt;&amp; it) : pointer(it.pointer) {}\n\n    LinkedListIterator&lt;T&gt;&amp; operator++() {\n        pointer = pointer-&gt;next;\n        return *this;\n    }\n    const LinkedListIterator&lt;T&gt; operator++(int) {\n        LinkedListIterator&lt;T&gt; temp = *this;\n        pointer = pointer-&gt;next;\n        return temp;\n    }\n    T&amp; operator*() const { return pointer-&gt;data_; }\n    T* operator-&gt;() const { return &amp;(pointer-&gt;data_); }\n    bool operator!=(const LinkedListIterator&lt;T&gt;&amp; other) {\n        return pointer != other.pointer;\n    }\n    bool operator==(const LinkedListIterator&lt;T&gt;&amp; other) {\n        return pointer == other.pointer;\n    }\n};\n\ntemplate &lt;class T&gt;\nclass LinkedListCollection {\n   public:\n    LinkedListCollection() : head_(nullptr) {}\n    LinkedListCollection(int size, T* datq) {\n        //...\n    }\n    ~LinkedListCollection() {\n        //...\n    }\n\n    LinkedListIterator&lt;T&gt; begin() { return LinkedListIterator&lt;T&gt;(head_); }\n    LinkedListIterator&lt;T&gt; end() { return LinkedListIterator&lt;T&gt;(nullptr); }\n\n   private:\n    LinkedListNode&lt;T&gt;* head;\n};\n</code></pre> <p>\u4f7f\u7528\u5982\u4e0b\uff1a <pre><code>int main() {\n    float scores[] = {90, 20, 40, 40, 30, 60, 70, 30, 90, 100};\n    ArrayCollection&lt;float&gt; collection2(10, scores);\n    LinkedListCollection&lt;float&gt; collection1(10, scores);\n\n    Analyze(scores, scores + 10);\n    Analyze(collection1.begin(), collection1.end());\n    Analyze(collection2.begin(), collection2.end());\n\n    system(\"PAUSE\");\n    return EXIT_SUCCESS;\n}\n</code></pre></p> <p>\u8fd9\u91cc\u6307\u9488\u7531\u4e8e\u652f\u6301<code>=</code>, <code>!=</code>, <code>++</code>\u64cd\u4f5c\uff0c\u5728\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8fed\u4ee3\u5668\u4f7f\u7528\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6307\u9488\u662f\u4e00\u79cd\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u5668\u4e5f\u662f\u4e00\u79cd\u6307\u9488\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_15","title":"\u7b97\u6cd5\u4e0e\u6570\u636e\u89e3\u8026","text":"<p>\u5bb9\u5668\uff1a\u5b58\u50a8\u6570\u636e\uff0c\u6570\u636e\u7684\u8868\u793a</p> <p>\u7b97\u6cd5\uff1a\u5904\u7406\u6570\u636e\uff0c\u62bd\u8c61\u7684\u7b97\u6cd5\u5b9e\u73b0</p> <p>\u8fed\u4ee3\u5668\uff1a\u6807\u51c6\u7684\u6570\u636e\u904d\u5386\u63a5\u53e3\uff0c\u9694\u79bb\u7b97\u6cd5\u4e0e\u5bb9\u5668\uff0c\u662f\u7b97\u6cd5\u4e0e\u6570\u636e\u7684\u8868\u793a\u65e0\u5173</p> <p>\u5b9e\u73b0\u901a\u7528\u7684\u7b97\u6cd5\uff0c\u5c06\u7b97\u6cd5\u4e0e\u6570\u636e\u8868\u793a\u89e3\u8026\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#3","title":"\u8003\u8bd5\u79d1\u76ee\u6570\u53d8\u62103","text":"<p>\u5982\u679c\u4e0a\u8ff0\u95ee\u9898\u8003\u8bd5\u79d1\u76ee\u53d8\u62103\u79d1\uff0c\u5219<code>float</code>\u578b\u53d8\u91cf\u4e0d\u80fd\u8868\u793a\u5206\u6570\uff0c\u5b9a\u4e49<code>Score</code>\u7c7b\u578b <pre><code>struct Score {\n    float value[3];\n    Score() {}\n    Score(float f1, float f2, float f3) {\n        value[0] = f1;\n        value[1] = f2;\n        value[2] = f3;\n    }\n    Score&amp; operator=(const Score&amp; s) {\n        value[0] = s.value[0];\n        value[1] = s.value[1];\n        value[2] = s.value[2];\n        return *this;\n    }\n    bool operator&gt;=(float pass) {\n        return value[0] &gt;= pass &amp;&amp; value[1] &gt;= pass &amp; value[2] &gt;= pass;\n    }\n};\n\nostream&amp; operator&lt;&lt;(ostream&amp; out, const Score&amp; s) {\n    cout &lt;&lt; \"{\" &lt;&lt; s.value[0] &lt;&lt; \", \" &lt;&lt; s.value[1] &lt;&lt; \", \" &lt;&lt; s.value[2]\n         &lt;&lt; \"}\";\n    return out;\n}\n</code></pre></p> <p>\u76f8\u5e94\u5730\u4e3b\u51fd\u6570\u53d8\u4e3a <pre><code>int main(int argc, char* argv[]) {\n    Score sarray[3];\n    sarray[0] = Score(60, 60, 60);\n    sarray[1] = Score(70, 70, 70);\n    sarray[2] = Score(50, 80, 80);\n\n    ArrayCollection&lt;Score&gt; collection3(3, sarray);\n    LinkedListCollection&lt;Score&gt; collection4(3, sarray);\n\n    Analyze(sarray, sarray + 3);\n    Analyze(collection3.begin(), collection3.end());\n    Analyze(collection4.begin(), collection4.end());\n\n    system(\"PAUSE\");\n    return EXIT_SUCCESS;\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_16","title":"\u5982\u4f55\u5b9e\u73b0\u89e3\u8026","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c</p> \u503c \u64cd\u4f5c \u62bd\u8c61\u63a5\u53e3 \u503c\u57df \u53ef\u7528\u7684\u64cd\u4f5c \u5177\u4f53\u5b9e\u73b0 \u5982\u4f55\u5b58\u50a8 \u5982\u4f55\u5b9e\u73b0\u64cd\u4f5c <p>\u5bf9\u4e8e \u53ef\u7528\u7684\u64cd\u4f5c \u90e8\u5206\uff0c\u5bf9\u5982<code>=</code>, <code>!=</code>, <code>++</code>, <code>*</code>\u7684\u652f\u6301\u662f\u7b97\u6cd5\u6240\u5173\u5fc3\u7684\u3002\u7b97\u6cd5\u5b9e\u9645\u4e0a\u53ea\u4e0e \u53ef\u7528\u7684\u64cd\u4f5c \u76f8\u5173\uff0c\u4e0e\u5177\u4f53\u6570\u636e\u7c7b\u578b\u65e0\u5173\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_17","title":"\u7b97\u6cd5\u3001\u8fd0\u7b97\u7b26\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u7b97\u6cd5\u4ec5\u4e0e\u201c\u53ef\u7528\u7684\u64cd\u4f5c\u201d\u76f8\u5173\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u629b\u5f00\u7c7b\u578b\u8003\u8651\u7b97\u6cd5\uff0c\u5b9e\u73b0\u62bd\u8c61\u8fd0\u7b97\uff0c\u5728\u7b97\u6cd5\u548c\u6570\u636e\u7c7b\u578b\uff08\u5b58\u50a8\uff09\u4e4b\u95f4\u5b9e\u73b0\u89e3\u8026\u3002</p> <p>\u5728C++\u4e2d\uff0c\u201c\u53ef\u7528\u7684\u64cd\u4f5c\u201d\u65f6\u4f7f\u7528\u8fd0\u7b97\u7b26\u6765\u63cf\u8ff0\u7684\uff08\u5982<code>*</code>, <code>++</code>, <code>!=</code>, <code>&gt;=</code>\uff09\uff0c\u4ed6\u4f5c\u7528\u5728\u6307\u5b9a\u6570\u91cf\u7684\u64cd\u4f5c\u6570\u4e0a\uff0c\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\u3002</p> <p>\u5982\u679c\u6211\u4eec\u9700\u8981\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528\u5728\u67d0\u4e2a\u7b97\u6cd5\u4e2d\uff0c\u53ea\u8981\u5b9e\u73b0\u76f8\u5173\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u8fd9\u4f9d\u8d56\u4e8e\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u672c\u6765\u76ee\u7684\uff1a\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5c31\u662f\u5728\u65b0\u7684\u6570\u636e\u7c7b\u578b\u4e0a\u8fd8\u539f\u8fd0\u7b97\u7b26\u7684\u672c\u8d28\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_18","title":"\u6570\u636e\u7c7b\u578b\u4e0e\u64cd\u4f5c","text":"<p>\u53ef\u7528\u7684\u64cd\u4f5c\u662f\u6570\u636e\u7c7b\u578b\u7684\u62bd\u8c61\u63a5\u53e3\u3002</p> <p>\u6570\u636e\u7c7b\u578b\u4e5f\u53ef\u4ee5\u7528 \u53ef\u7528\u64cd\u4f5c\u7684\u96c6\u5408 \u6765\u754c\u5b9a\uff0c\u5177\u6709\u76f8\u540c\u201c\u53ef\u7528\u64cd\u4f5c\u96c6\u5408\u201d\u5c31\u662f\u76f8\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u5982\u679c\u628a\u201c\u64cd\u4f5c\u201d\u66f4\u52a0\u6cdb\u534e\uff0c\u5c06\u5176\u5b9a\u4e49\u5230\u4e00\u4e2a\u62bd\u8c61\u5b9e\u4f53\u4e0a\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u201c\u6570\u636e\u7c7b\u578b\u201d\u8fdb\u4e00\u6b65\u62bd\u8c61\u5316\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_19","title":"\u62bd\u8c61\u7ed3\u6784\u4e0e\u7c7b\u6a21\u677f","text":"<p>\u9664\u4e86\u201c\u62bd\u8c61\u7b97\u6cd5\u201d\u4e4b\u5916\uff0c\u8fd8\u6709\u201c\u62bd\u8c61\u7ed3\u6784\u201d     <code>Stack</code>, <code>LinkedList</code>, <code>Vector</code></p> <p>\u8fd9\u4e9b\u62bd\u8c61\u7ed3\u6784\uff0c\u4e0e\u5b58\u50a8\u4ec0\u4e48\u6570\u636e\u65e0\u5173\uff0c\u81f3\u4e8e\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u8bbf\u95ee\u65b9\u5f0f\u76f8\u5173\uff0c\u53ef\u4ee5\u501f\u52a9\u7c7b\u6a21\u677f\u5b9e\u73b0\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_20","title":"\u5b9e\u73b0\u4e00\u4e2a\u94fe\u8868\u6a21\u677f","text":"<p>\u4f8b\u5982\u4e0b\u65b9\u94fe\u8868</p> <p></p> <pre><code>template &lt;class T&gt;\nstruct LinkedListNode {\n    T data_;\n    LinkedListNode* next_;\n    LinkedListNode() : next_(nullptr) {}\n    LinkedListNode(T data) : data_(data), next_(nullptr) {}\n    LinkedListNode(T data, LinkedListNode* next) : data_(data), next_(next) {}\n};\n\ntemplate &lt;class T&gt;\nclass LinkedListCollection {\n   public:\n    LinkedListCollection() : head_(nullptr) {}\n    ~LinkedListCollection() { clear(); }\n\n    bool empty() { return head_ == nullptr; }\n    void AddFirst(const T&amp; data) {\n        head_ = new LinkedListNode&lt;T&gt;)(data, head_);\n    }\n    bool RemoveFirst() {\n        if (head_ != nullptr) {\n            LinkedListNode&lt;T&gt;* p = head_;\n            head_ = head_-&gt;next_;\n            delete p;\n            return true;\n        } else {\n            return false;\n        }\n    }\n    T* GetFirst() { return head_ != nullptr ? &amp;(head_-&gt;data_) : nullptr; }\n    bool RemoveLast() {\n        if (head_ != nullptr) {\n            if (head_-&gt;next_ != nullptr) {\n                LinkedListNode&lt;T&gt;* p;\n                for (p = head_; p-&gt;next_-&gt;next_ != nullptr; p = p-&gt;next_)\n                    ;\n                delete p-&gt;next_;\n                p-&gt;next_ = nullptr;\n                return true;\n            } else {\n                delete head_;\n                head_ = nullptr;\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n    clear() {\n        while (RemoveFirst())\n            ;\n    }\n    LinkedListIterator&lt;T&gt; begin() { return LinkedListIterator&lt;T&gt;(head_); }\n    LinkedListIterator&lt;T&gt; end() { return LinkedListIterator&lt;T&gt;(nullptr); }\n\n   private:\n    LinkedListNode&lt;T&gt;* head_;\n};\n</code></pre> <p>\u5173\u4e8e \u5185\u8054\u51fd\u6570 \uff1a</p> <p>C++\u4e2d<code>inline</code>\u5173\u952e\u5b57\u4fee\u9970\u51fd\u6570\u5b9a\u4e49\uff08\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u51fd\u6570\u53ef\u80fd\u88ab\u9891\u7e41\u4f7f\u7528\uff0c\u5bf9\u6027\u80fd\u8981\u6c42\u654f\u611f\uff0c\u8c03\u7528\u65f6\u4f7f\u7528\u5185\u8054\u5c55\u5f00\uff0c\u907f\u514d\u5165\u6808\u51fa\u6808\u7684\u64cd\u4f5c\uff09</p> <p><code>inline int max(int a, int b) { return a &gt; b ? a : b; }</code></p> <p>\u4f5c\u7528\uff1a\u51fd\u6570\u5185\u8054\u5c55\u5f00\uff0c\u907f\u514d\u51fd\u6570\u8c03\u7528\u5f00\u9500\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002</p> <p>\u5728\u7c7b\u5b9a\u4e49\u4f53\u5185\u5b9a\u4e49\uff08\u5b9e\u73b0\uff09\u7684\u51fd\u6570\u7f3a\u7701\u4e3a\u5185\u8054\u51fd\u6570\u3002</p> <p>\u5230\u6b64\u4e3a\u6b62 \u6211\u4eec\u4e3a\u4efb\u610f\u7c7b\u578b\u5143\u7d20\u5b9e\u73b0\u94fe\u8868\u7684\u65b9\u5f0f\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_21","title":"\u7528\u94fe\u8868\u6a21\u677f\u7ec4\u7ec7\u5206\u6570","text":"<p>\u901a\u8fc7\u6a21\u677f\u5b9e\u4f8b\u5316\u4f7f\u7528Linked List\uff08\u62bd\u8c61\u7ed3\u6784\uff09 <pre><code>int main(int argc, char* argv[]) {\n    //...\n    LinkedListCollection&lt;Score&gt; collection4;\n    for (int i = 0; i &lt; 3; i++)\n        collection4.AddFirst(sarray[i]);\n\n    Analyze(collection4.begin(), collection4.end());\n    //...\n    return EXIT_SUCCESS;\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_22","title":"\u5c0f\u7ed3","text":"<p>\u56fa\u5b9a\u7684\u4e1c\u897f\uff1a</p> <ul> <li> <p>\u7b97\u6cd5/\u62bd\u8c61\u7ed3\u6784\u7684\u63a5\u53e3\u4e0e\u5b9e\u73b0</p> </li> <li> <p>\u201c\u6570\u636e\u201d\u7684\u8bbf\u95ee\u63a5\u53e3\uff08\u8fed\u4ee3\u5668\uff09</p> </li> <li> <p>\u201c\u6570\u636e\u201d\u7684\u53ef\u7528\u64cd\u4f5c\uff08\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff09</p> </li> </ul> <p>\u53d8\u5316\u7684\u4e1c\u897f\uff1a</p> <ul> <li> <p>\u201c\u6570\u636e\u201d\u7684\u7ec4\u7ec7\u5f62\u5f0f</p> </li> <li> <p>\u201c\u6570\u636e\u201d\u7684\u7c7b\u578b\uff08\u503c\u57df\u3001\u5b58\u50a8\u3001\u64cd\u4f5c\u5b9e\u73b0\uff09</p> </li> </ul> <p>\u7531\u6b64\u5b9e\u73b0\u201c\u7b97\u6cd5/\u62bd\u8c61\u7ed3\u6784\u201d\u4e0e\u201c\u6570\u636e\u8868\u793a\u201d\u4e4b\u95f4\u7684\u5206\u79bb</p> <p>\u6cdb\u578b\u7f16\u7a0b\uff1a\u5148\u5b9e\u73b0\u7b97\u6cd5\uff0c\u518d\u5145\u5b9e\u6570\u636e\u8868\u793a\uff08\u7c7b\u578b\uff09</p>"},{"location":"system_design/object_oriented/split_representation/#_23","title":"\u51fd\u6570\u5bf9\u8c61\u4e0e\u7b97\u6cd5\u5206\u89e3","text":""},{"location":"system_design/object_oriented/split_representation/#_24","title":"\u5f53\u201c\u53ca\u683c\u201d\u5224\u5b9a\u89c4\u5219\u53d1\u751f\u53d8\u5316","text":"<p>\u5982\u679c\u67d0\u4e9b\u79d1\u76ee\u7684\u53ca\u683c\u7ebf\u4e0d\u662f60\u5206</p> <p>\u73b0\u6709\u7684<code>Analyze</code>\u51fd\u6570 <pre><code>template &lt;class iterator_&gt;\nvoid Analyze(iterator_ begin, iterator_ end) {\n    int passsed = 0, count = 0;\n    for (iterator_ p = begin; p != end; p++) {\n        if (*p &gt;= 60) passed++;\n        count++;\n    }\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n</code></pre></p> <p>\u5c06\u5224\u65ad\u53ca\u683c\u51fd\u6570<code>IsPass</code>\u7684\u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9<code>Analyze</code> <pre><code>template &lt;class iterator_&gt;\nvoid Analyze(iterator_ begin, iterator_ end, bool (*IsPass)(const iterator_&amp;)) {\n    int passsed = 0, count = 0;\n    for (iterator_ p = begin; p != end; p++) {\n        if (IsPass(p)) passed++;\n        count++;\n    }\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n</code></pre></p> <p>\u4f7f\u7528\u201c\u5224\u65ad\u53ca\u683c\u201d\u51fd\u6570\u6307\u9488 <pre><code>template &lt;class iterator_&gt;\nbool IsPass(const iterator_&amp; p) {\n    return p-&gt;value[0] &gt;= 70 &amp;&amp; p-&gt;value[1] &gt;= 60 &amp;&amp; p-&gt;value[2] &gt;= 60;\n}\n\n\u6ce8\uff1a\u8fd9\u91cc\u7684`IsPass`\u6709\u7f3a\u9677\uff1a\u53ea\u9002\u7528\u4e8e`Score`\u7c7b\u578b\n\nint main(int argc, char* argv[]) {\n    //...\n    Analyze(sarray, sarray + 3, IsPass&lt;Score*&gt;);\n    Analyze(collection3.begin(), collection3.end(), IsPass&lt;Score*&gt;);\n    Analyze(collection4.begin(), collection4.end(), IsPass&lt;LinkedListIterator&lt;Score&gt;&gt;);\n    //...\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_25","title":"\u8fdb\u4e00\u6b65\u89e3\u8026","text":"<p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f\u201c\u79d1\u4e00\u201d\u7684\u53ca\u683c\u5206\u6570 <pre><code>template &lt;class iterator_&gt;\nbool IsPass(const iterator_&amp; p) {\n    return p-&gt;value[0] &gt;= 70 &amp;&amp; p-&gt;value[1] &gt;= 60 &amp;&amp; p-&gt;value[2] &gt;= 60;\n}\n\ntemplate &lt;class iterator_&gt;\nbool IsPass(const iterator_&amp; p) {\n    return p-&gt;value[0] &gt;= 60 &amp;&amp; p-&gt;value[1] &gt;= 60 &amp;&amp; p-&gt;value[2] &gt;= 60;\n}\n</code></pre></p> <p>\u5982\u4f55\u62bd\u79bb\u51fa\u76f8\u540c\u7684\u5904\u7406\u903b\u8f91\uff0c\u5c06\u201c\u53ca\u683c\u7ebf\u201d\u8bb0\u5f55\u4e0b\u6765</p> <ul> <li> <p>\u4f7f\u7528<code>Score</code>\u53d8\u91cf <pre><code>const Score pass(70, 60, 60);\n\ntemplate &lt;class iterator_&gt;\nbool IsPass(const iterator_&amp; p) {\n    return p-&gt;value[0] &gt;= pass.value[0] &amp;&amp; p-&gt;value[1] &gt;= pass.value[1] &amp;&amp; p-&gt;value[2] &gt;= pass.value[2];\n}\n</code></pre></p> </li> <li> <p>\u4f7f\u7528\u6587\u4ef6 <pre><code>template &lt;class iterator_&gt;\nbool IsPass(const iterator_&amp; p) {\n    float pass1, pass2, pass3;\n    ifstream is(\"pass-score.txt\");\n    is &gt;&gt; pass1 &gt;&gt; pass2 &gt;&gt; pass3;\n    return p-&gt;value[0] &gt;= pass1 &amp;&amp; p-&gt;value[1] &gt;= pass2 &amp;&amp; p-&gt;value[2] &gt;= pass3;\n}\n</code></pre></p> </li> </ul> <p>\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539<code>pass-score.txt</code>\u7684\u5185\u5bb9\u6539\u53d8\u53ca\u683c\u5206\u6570\u7ebf\u7ec4\u5408\u3002</p> <p>\u8fd9\u91cc \u5355\u4e00\u5b9e\u4f8b \u7684\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff0c\u95ee\u9898\u5728\u4e8e\u51fd\u6570\u662f\u56fa\u5b9a\u7684\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_26","title":"\u51fd\u6570\u5bf9\u8c61","text":"<p>\u5b9a\u4e49<code>IsPass</code>\u51fd\u6570\u5bf9\u8c61\u7c7b\u6a21\u677f <pre><code>template &lt;class iterator_, class T&gt;\nclass IsPass {\n   public:\n    IsPass(const T&amp; pass) : pass_(pass) {}\n    bool operator()(const iterator_&amp; p) { return *p &gt;= pass_; }\n\n   private:\n    T pass_;\n};\n</code></pre></p> <p>\u76f8\u5e94\u6539\u53d8\u7b97\u6cd5\u5b9a\u4e49 <pre><code>template &lt;class iterator_, class T&gt;\nvoid Analyze(iterator_ begin, iterator_ end, IsPass&lt;iterator_, T&gt; is_pass) {\n    int passsed = 0, count = 0;\n    for (iterator_ p = begin; p != end; p++) {\n        if (is_pass(p)) passed++;\n        count++;\n    }\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n</code></pre></p> <p>\u4f7f\u7528\u51fd\u6570\u5bf9\u8c61 <pre><code>int main(int argc, char* argv[]) {\n    //...\n    sarray[0] = Score(60, 60, 60);\n    sarray[1] = Score(70, 70, 70);\n    sarray[2] = Score(50, 80, 80);\n    ArrayCollection&lt;Score&gt; collection3(3, sarray);\n    LinkedListCollection&lt;Score&gt; collection4;\n    //...\n    Analyze(sarray, sarray + 3, IsPass&lt;Score*, Score&gt;(Score(70, 60, 60)));\n    Analyze(collection3.begin(), collection4.end(), IsPass&lt;Score*, Score&gt;(Score(50, 60, 60)));\n    Analyze(collection4.begin(), collection4.end(), IsPass&lt;LinkedListIterator&lt;Score&gt;, Score&gt;(Score(60, 60, 60)));\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_27","title":"\u5224\u65ad\u53ca\u683c\u7684\u903b\u8f91\u6539\u53d8","text":"<p>\u65b0\u9700\u6c42\uff1a<code>IsPass</code>\u5982\u679c\u4e5f\u8981\u591a\u79cd\u5b9e\u73b0\uff0c\u6ca1\u8bfe\u90fd\u53ca\u683c\u548c\u603b\u5206\u53ca\u683c</p> <p>\u6b64\u65f6\u53ef\u4ee5\u628a<code>IsPass</code>\u51fd\u6570\u5bf9\u8c61\u4e0d\u4f5c\u4e3a<code>Analyze</code>\u7684 \u53c2\u6570 \u800c\u5c06\u5176\u7c7b\u578b\u4f5c\u4e3a<code>Analyze</code>\u7684 \u6a21\u677f\u53c2\u6570 \u4f20\u5165 <pre><code>template &lt;class iterator_, class IsPass_&gt;\nvoid Analyze(iterator_ begin, iterator_ end, IsPass_ is_pass) {\n    int passsed = 0, count = 0;\n    for (iterator_ p = begin; p != end; p++) {\n        if (is_pass(p)) passed++;\n        count++;\n    }\n    cout &lt;&lt; \"passing rate = \" &lt;&lt; (float)passed / count &lt;&lt; endl;\n}\n</code></pre></p> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u662f\u5438\u7eb3\u4e0d\u540c\u7684<code>IsPass_</code> <pre><code>template &lt;class iterator_, class T&gt;\nclass IsPass_ForEach {\n   public:\n    IsPass_ForEach(const T&amp; pass) : pass_(pass) {}\n    bool operator()(const iteartor_&amp; p) { return *p &gt;= pass_; }\n\n   private:\n    T pass_;\n};\n\ntemplate &lt;class iterator_, class T&gt;\nclass IsPass_Total {\n   public:\n    IsPass_ForEach(const T&amp; pass) : pass_(pass) {}\n    bool operator()(const iteartor_&amp; p) {\n        return p-&gt;GetTotal() &gt;= pass.GetTotal();\n    }\n\n   private:\n    T pass_;\n};\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#_28","title":"\u5c0f\u7ed3","text":"<p>\u5bf9\u4e8e<code>Analyze</code>\u8fd9\u4e2a\u7b97\u6cd5</p> \u63cf\u8ff0 \u64cd\u4f5c \u53c2\u6570 \u9488\u904d\u5386\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20 \u904d\u5386 iterator_ \u5224\u65ad\u662f\u5426\u53ca\u683c \u5224\u65ad IsPass_ \u7d2f\u52a0\u201c\u53ca\u683c\u201d\u6570\u91cf \u7d2f\u52a0 Analyze()\u672c\u8eab <p>\u6709\u4e09\u4e2a\u65e0\u5173\uff08\u6b63\u4ea4\uff09\u7684\u53ef\u53d8\u90e8\u5206</p>"},{"location":"system_design/object_oriented/split_representation/#_29","title":"\u57fa\u4e8e\u6a21\u677f\u7684\u7b56\u7565\u6a21\u5f0f","text":""},{"location":"system_design/object_oriented/split_representation/#_30","title":"\u7b56\u7565\u6a21\u5f0f\u7684\u6a21\u677f\u5b9e\u73b0","text":"<p>\u7528\u4e24\u4e2a\u7c7b\u53c2\u6570\u7ec4\u5408\u5f62\u6210\u4e00\u4e2a\u786e\u5b9a\u7684Analyze\u7b97\u6cd5\u5b9e\u4f8b\u3002</p> <p>\u7b56\u7565\u6a21\u578b\u7684\u6a21\u677f\u5b9e\u73b0\uff1a</p> <p></p> <p>\u8fd9\u91cc\u518d\u6b21\u4f53\u73b0\u4e86 \u7b56\u7565 \u6a21\u5f0f\u3002</p>"},{"location":"system_design/object_oriented/split_representation/#_31","title":"\u518d\u770b\u8d1f\u8f7d\u76d1\u89c6\u5668","text":"<p>\u4f7f\u7528 \u6a21\u677f\u7b56\u7565 \u5b9e\u73b0\u8d1f\u8f7d\u76d1\u89c6\u5668 <pre><code>template &lt;class load_, class memory_, class latency_, class display_&gt;\nclass Monitor : public load_, public memory_, public latency_, public display_ {\n   public:\n    Monitor() {}\n\n    void GetLoad() { load = load_::GetCPULoad(); }\n    void GetTotalMemory() { total_memory = memory_::GetTotal(); }\n    void GetUsedMemory() { used_memory = memory_::GetUsed(); }\n    void GetNetworkLatency() { latency = latency_::GetLatency(); }\n    void Show() { display_::Show(load, total_memory, used_memory, latency); }\n\n   private:\n    float load, latency;\n    long total_memory, used_memory;\n};\n</code></pre></p> <p>\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ec4\u5408\u4ee3\u66ff\u7ee7\u627f\u3002</p> <p>\u76f8\u5e94\u4e3b\u7a0b\u5e8f <pre><code>int main(int argc, char* argv[]) {\n    Monitor&lt;Load, memory, Latency, Display&gt; monitor;\n    while (running()) {\n        monitor.GetLoad();\n        monitor.GetTotalMemory();\n        monitor.GetUsedMemory();\n        monitor.GetNetworkLatency();\n\n        monitor.Show();\n        sleep(1000);\n    }\n}\n</code></pre></p> <p>\u5b9a\u4e49\u7b56\u7565\u7c7b <pre><code>class Load {\n   public:\n    float GetCPULoqd();\n};\n\nclass Memory {\n   public:\n    long GetTotal();\n    long GetUsed();\n};\n\nclass Latency {\n   public:\n    float GetLatency();\n};\n</code></pre></p> <p>\u663e\u793a\u7b56\u7565\u7c7b <pre><code>class Display {\n   public:\n    void Show(float load, long total_memory, long used_memory, float latency);\n};\n</code></pre></p>"},{"location":"system_design/object_oriented/split_representation/#stl","title":"STL","text":"<p>Standard Template Library - \u6807\u51c6\u6a21\u677f\u5e93</p> <ul> <li>\u4e00\u7ec4\u6700\u5e38\u7528\u7684\uff23++\u529f\u80fd\u7684\u6a21\u677f\u5b9e\u73b0<ul> <li>\u7b97\u6cd5 - <code>min</code>, <code>max</code>, <code>for_each</code>, <code>find_if</code>, <code>copy</code>, <code>sort</code>, <code>stable_sort</code>\u7b49</li> <li>\u51fd\u6570\u5bf9\u8c61\u53ca\u5176\u64cd\u4f5c\uff1a\u7b97\u6cd5\u7684\u53ef\u53d8\u90e8\u5206 - <code>greater</code>, <code>less</code>, <code>equal_to</code>, <code>logical_and</code>, <code>logical_or</code>, <code>no1</code>, <code>not2</code>, <code>bind1st</code>, <code>bind2nd</code>, <code>ptr_fun</code>\u7b49</li> <li>\u5bb9\u5668\u53ca\u5176\u8fed\u4ee3\u5668\uff1a\u7b97\u6cd5\u6240\u4f5c\u7528\u7684\u4e00\u7ec4\u6570\u636e\u53ca\u5bf9\u5176\u8fdb\u884c\u904d\u5386\u7684\u624b\u6bb5 - <code>vector</code>, <code>dqueue</code>, <code>list</code>, <code>set</code>, <code>map</code>, <code>stack</code>, <code>queue</code>\u53ca\u5176\u8fed\u4ee3\u5668, <code>istream_oterator</code>, <code>ostream_iterator</code>\u7b49</li> <li>\u5176\u4ed6\uff1a\u5982<code>string</code>\u7c7b</li> </ul> </li> </ul>"},{"location":"system_design/object_oriented/split_steps/","title":"\u7b97\u6cd5\u6a2a\u5411\u62c6\u5206 - \u5206\u79bb\u6b65\u9aa4","text":"<p>\u9762\u5411\u5bf9\u8c61\u7684\u63a5\u53e3\u8bbe\u8ba1\u8981\u65f6\u523b\u9075\u5faa\u529f\u80fd\u7684 \u5355\u4e00\u6027 \u539f\u5219\u3002</p>"},{"location":"system_design/object_oriented/split_steps/#_1","title":"\u8bbe\u8ba1\u4e00\u4e2a\u8d1f\u8f7d\u76d1\u89c6\u5668","text":""},{"location":"system_design/object_oriented/split_steps/#_2","title":"\u8d1f\u8f7d\u76d1\u89c6\u5668","text":"<p>\u76d1\u89c6\u8ba1\u7b97\u8282\u70b9\u7684\u6577\u5728\u72b6\u6001\uff08\u5982CPU\u5360\u7528\u7387\u3001\u5b58\u50a8\u5668\u5360\u7528\u7387\u3001\u5230\u67d0\u4e2a\u7279\u5b9a\u8282\u70b9\u7684\u7f51\u7edc\u5ef6\u8fdf\uff09\u3002</p> <p>\u4ee5CPU\u5360\u7528\u7387\u7684\u76d1\u89c6\u4e3a\u4f8b\uff0c\u4e0d\u540c\u6761\u4ef6\u4e0b\uff08\u4f8b\u5982\u4e0d\u540c\u79cd\u7c7b\u4e0d\u540c\u7248\u672c\u7684OS\uff09\u83b7\u5f97CPU\u5360\u7528\u7387\u7684\u65b9\u6cd5\u4e0d\u540c\u3002</p> <p>\u600e\u6837\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u5bf9\u8fd9\u4e9b\u4e0d\u540c\u6761\u4ef6\u7684\u9002\u5e94\u5462\uff1f</p>"},{"location":"system_design/object_oriented/split_steps/#_3","title":"\u81ea\u9876\u5411\u4e0b","text":"<p>\u4e3b\u7a0b\u5e8f\uff0cMonitor\u7684\u4f7f\u7528\u65b9\u6cd5</p> <pre><code>int main(int argc, char* argv[]) {\n    WindowsDisplay display;\n    Monitor monitor(&amp;display);\n    while (running()) {\n        monitor.GetLoad();\n        monitor.GetTotalMemory();\n        monitor.GetUsedMemory();\n        monitor.GetNetworkLantency();\n\n        monitor.show();\n        sleep(1000);\n    }\n}\n</code></pre> <p><code>switch case</code> - \u5bf9\u4e8e\u4e0d\u540c\u7684\u6761\u4ef6\u4e0b\u5b9e\u73b0<code>Monitor::GetLoad</code>\u51fd\u6570</p> <pre><code>enum MonitorType { Win32, Win64, Ganglia };\n\nMonitorType type = Ganglia;\n\nfloat Monitor::GetLoad() {\n    switch (type) {\n        case Win32:\n            // Get system load via Win32 APIs\n            return load;\n        case Win64:\n            // Get system load via Win64 APIs\n            return load;\n        case Ganglia:\n            // Get system load via Ganglia interface\n            return load;\n    }\n}\n</code></pre> <p>\u5f0a\u7aef\uff1a\u6bcf\u589e\u52a0\u4e00\u79cd\u65b0\u7684\u7cfb\u7edf\u73af\u5883\uff0c\u9700\u8981\u5bf9<code>Monitor::GetLoad</code>\u51fd\u6570\u505a\u4fee\u6539\u3002</p> <p>\u6a21\u677f\u65b9\u6cd5</p> <p></p> <pre><code>class Monitor {\n   public:\n    virtual void GetLoad() = 0;\n    virtual void GetTotalMemory() = 0;\n    virtual void GetUsedMemory() = 0;\n    virtual void GetNetworkLatency() = 0;\n\n    Monitor(Display *display);\n    virtual ~Monitor();\n    void Show();\n   protected:\n    float load, latency;\n    long total_memory, used_memory;\n    Display* m_display;\n};\n\nvoid Monitor::Show() {\n    m_display-&gt;Show(load, total_memory, used_memory, latency);\n}\n</code></pre>"},{"location":"system_design/object_oriented/split_steps/#_4","title":"\u8fd9\u79cd\u5b9e\u73b0\u7684\u95ee\u9898","text":"<p>\u5982\u679c\u51e0\u4e2a\u51fd\u6570\u63a5\u53e3\u7684\u5b9e\u73b0\u76f8\u4e92\u72ec\u7acb\uff0c\u5206\u522b\u6709 N, M, K \u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u90a3\u4e48\uff0c\u5b9e\u73b0\u5b50\u7c7b\u7684\u4e2a\u6570\u5c06\u662f N \\times M \\times K\u79cd\u3002</p> <p>\u4f8b\u5982\u5982\u679c\u5b9e\u73b0<code>GetLoad()</code>\u7684\u65b9\u5f0f\u6709 4 \u79cd\uff0c\u5b9e\u73b0 <code>GetTotalMemory()</code> \u7684\u65b9\u5f0f\u6709 3 \u79cd\uff0c\u90a3\u4e48\u5b50\u7c7b\u7684\u6570\u91cf\u53ef\u4ee5\u6709 12 \u79cd\u3002\u5f53\u4ee3\u7801\u9700\u8981\u7ef4\u62a4\u7684\u65f6\u5019\u9700\u8981\u5bf9\u91cd\u590d\u7684\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff0c\u8d39\u65f6\u8d39\u529b\u3002</p>"},{"location":"system_design/object_oriented/split_steps/#_5","title":"\u63a5\u53e3\u5206\u79bb\u4e0e\u5355\u4e00\u8d23\u4efb\u539f\u5219","text":""},{"location":"system_design/object_oriented/split_steps/#_6","title":"\u4e24\u79cd\u4e0d\u540c\u5c42\u6b21\u7684\u53d8\u5316","text":"<p>\u5bf9\u4e8e\u4e0a\u8ff0\u5b9e\u73b0\uff0c\u5b58\u5728\u4e24\u79cd\u4e0d\u540c\u5c42\u9762\u7684\u53d8\u5316\uff0c\u5e94\u8be5\u6709\u6240\u533a\u5206</p> <ul> <li> <p>\u5728\u5b9e\u73b0\u5c42\u9762\u4e0a\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u529f\u80fd\uff0c\u5b58\u5728\u591a\u79cd\u5b9e\u73b0\u65b9\u6cd5</p> <ul> <li> <p>\u76f8\u5bf9\u4e8e\u57fa\u7c7b\u662f\u53ef\u53d8\u7684\uff0c\u6bcf\u79cd\u53d8\u5316\u5bf9\u5e94\u4e00\u4e2a\u5b50\u7c7b</p> </li> <li> <p>\u8fd9\u79cd\u53d8\u5316\u8868\u73b0\u5728\u7f16\u8bd1\u671f\uff0c\u662f\u4e00\u79cd\u76f8\u5bf9\u9759\u6001\u7684\u53ef\u53d8</p> </li> </ul> </li> <li> <p>\u5728\u7ec4\u7ec7\u5c42\u9762\u4e0a\uff1a\u5927\u201c\u7c7b\u201d\u7684\u529f\u80fd\u7531\u4e00\u7cfb\u5217\u5b50\u529f\u80fd\u6784\u6210</p> <ul> <li> <p>\u5b50\u529f\u80fd\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5e94\u5f53\u5c06\u8fd9\u4e9b\u5b50\u529f\u80fd\u62c6\u5206\u5230\u4e0d\u540c\u7684\u201c\u5c0f\u201d\u7c7b</p> </li> <li> <p>\u7ec4\u5408\u662f\u81ea\u7531\u7684\u3001\u52a8\u6001\u7684\u3001\u53ef\u53d8\u7684\u3001\u901a\u8fc7\u5b9e\u73b0\u5b50\u529f\u80fd\u7684\u201c\u5c0f\u201d\u7c7b\u5bf9\u8c61\u7684\u7ec4\u5408\u6765\u5b8c\u6210</p> </li> <li> <p>\u8fd9\u79cd\u53d8\u5316\u8868\u73b0\u5728\u8fd0\u884c\u671f\uff0c\u662f\u4e00\u79cd\u76f8\u5bf9\u52a8\u6001\u7684\u53ef\u53d8</p> </li> </ul> </li> <li> <p>\u9694\u79bb\u4e0d\u540c\u5c42\u9762\u7684\u201c\u53d8\u201d</p> <ul> <li> <p>\u9759\u6001\u7684\u53ef\u53d8\u7528 \u7ee7\u627f</p> </li> <li> <p>\u52a8\u6001\u7684\u53ef\u53d8\u7528 \u7ec4\u5408</p> </li> </ul> </li> </ul>"},{"location":"system_design/object_oriented/split_steps/#_7","title":"\u5355\u4e00\u8d23\u4efb","text":"<ul> <li> <p>\u5355\u4e00\u8d23\u4efb\u539f\u5219</p> <ul> <li> <p>\u7c7b\u529f\u80fd\u5e94\u8be5\u662f \u5185\u805a \u7684\uff0c\u4e00\u4e2a\u7c7b\u53ea\u627f\u62c5\u4e00\u9879\u529f\u80fd</p> </li> <li> <p>\u8868\u73b0\u4e3a\uff1a\u4fee\u6539/\u6d3e\u751f\u4e00\u4e2a\u7c7b\u53ea\u5e94\u8be5\u6709\u4e00\u4e2a\u7406\u7531\uff0c\u53ea\u80fd\u7531\u5355\u4e2a\u53d8\u5316\u56e0\u7d20\u5f15\u8d77</p> </li> </ul> </li> <li> <p>\u5c06\u591a\u4e2a\u4e0d\u540c\u529f\u80fd\u4ea4\u7531\u540c\u4e00\u4e2a\u7c7b\u5b9e\u73b0\uff0c\u8fdd\u53cd\u4e86\u5355\u4e00\u8d23\u4efb\u539f\u5219</p> <ul> <li>\u5f53\u4e00\u4e2a\u529f\u80fd\u9700\u8981\u53d8\u5316\u65f6\uff0c\u4e0d\u5f97\u4e0d\u4fee\u6539\u6216\u8005\u6d3e\u751f\u65b0\u7684\u5b9e\u73b0\u7c7b</li> </ul> </li> </ul>"},{"location":"system_design/object_oriented/split_steps/#_8","title":"\u5206\u79bb\u4e24\u79cd\u5c42\u6b21","text":"<ul> <li> <p>\u5265\u79bb\u51fa\u65b0\u7684\u63a5\u53e3</p> <ul> <li> <p>\u6bcf\u4e2a\u529f\u80fd\uff08\u7b97\u6cd5\uff09\u7684\u5b9e\u73b0\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u63a5\u53e3\uff08\u79f0\u4e3a \u7b56\u7565 \uff09</p> </li> <li> <p>\u4e0e\u63a5\u53e3\u4e0d\u540c\u7684\u5b9e\u73b0\u7ec4\u6210\u4e00\u4e2a \u7b56\u7565\u7c7b\u7684\u4f53\u7cfb</p> </li> </ul> </li> <li> <p>\u7528\u7ec4\u5408\u66ff\u4ee3\u7ee7\u627f</p> <ul> <li>\u7528\u529f\u80fd\uff08\u7b97\u6cd5\uff09\u63a5\u53e3\u4e4b\u95f4\u7684\u7ec4\u5408\u6765\u5b9e\u73b0\u529f\u80fd\uff08\u7b97\u6cd5\uff09\u4e4b\u95f4\u7684\u7ec4\u5408</li> </ul> </li> </ul> <p>\u5982\u6b64\u4e00\u6765\uff0c\u5bf9\u4e8e\u5b9e\u73b0\u76f8\u4e92\u72ec\u7acb\u7684\u51fd\u6570\u63a5\u53e3\u5206\u522b\u6709 N, M, K \u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u9700\u8981\u5b9e\u73b0\u7684\u7c7b\u7684\u6570\u91cf\u4ece N \\times M \\times K \u53d8\u4e3a N + M + K \u4e2a\u201c\u5c0f\u201d\u7c7b\u548c 1 \u4e2a\u5927\u7c7b\u3002</p>"},{"location":"system_design/object_oriented/split_steps/#_9","title":"\u91cd\u65b0\u770b\u8d1f\u8d23\u76d1\u89c6\u5176\u7684\u8bbe\u8ba1","text":"<ul> <li> <p>\u5265\u79bb\u65b0\u7684\u63a5\u53e3</p> <ul> <li> <p>\u7531\u4e09\u4e2a\u201c\u7b56\u7565\u201d\u63a5\u53e3\u5206\u522b\u5b9a\u4e49\u4e0d\u540c\u7684\u529f\u80fd</p> </li> <li> <p>\u6bcf\u4e2a\u7b56\u7565\u63a5\u53e3\u6709\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u5b9e\u73b0</p> </li> </ul> </li> <li> <p>\u7528\u7ec4\u5408\u66ff\u4ee3\u7ee7\u627f</p> <ul> <li> <p><code>Monitor</code>\u7c7b\u4e2d\u5821\u6751\u4e00\u7ec4\u201c\u7b56\u7565\u201d\u63a5\u53e3\u7c7b\u7684\u5b9e\u4f8b</p> </li> <li> <p>\u8fd9\u4e9b\u5b9e\u4f8b\u53ef\u4ee5\u81ea\u7531\u7ec4\u5408\u548c\u52a8\u6001\u66ff\u6362</p> </li> </ul> </li> </ul> <p>\u5b9e\u73b0<code>LoadStrategy</code>\u201c\u5c0f\u7c7b\u201d <pre><code>class LoadStrategy {\n   public:\n    virtual float GetLoad() = 0;\n};\n\nclass LoadStrategyImpl1 : public LoadStrategy {\n   public:\n    float GetLoad() {\n        // Get load here...\n        return load;\n    }\n};\n\nclass LoadStrategyImpl2 : public LoadStrategy {\n   public:\n    float GetLoad() {\n        // Get load here...\n        return load;\n    }\n};\n</code></pre></p> <p>\u5b9e\u73b0<code>Monitor</code>\u7c7b <pre><code>class Monitor {\n   public:\n    Monitor(LoadStrategy *load_strategy, MemoryStrategy *memory_strategy,\n            LatencyStrategy *latency_strategy, Display *display);\n    void GetLoad();\n    void GetTotalMemory();\n    void GetUsedMemory();\n    void GetNetworkLatency();\n    void Show();\n\n   private:\n    LoadStraegy *load_strategy_;\n    MemoryStrategy *memory_strategy_;\n    LatencyStrategy *latency_strategy_;\n    float load, latency;\n    long total_memory, used_memory;\n    Display *display_;\n};\n\nMonitor::Monitor(LoadStrategy *load_strategy, MemoryStrategy *memory_strategy,\n                 LatencyStrategy *latency_strategy, Display *display)\n    : load_strategy_(load_strategy),\n      memory_strategy_(memory_strategy),\n      latency_strategy_(latency_strategy),\n      display_(display),\n      load(0.0),\n      latency(0.0),\n      total_memory(0),\n      used_memory(0) {}\n\nvoid Monitor::Show() {\n    display-&gt;Show(load, total_memory, used_memory, latency);\n}\n</code></pre></p> <p>\u4e3b\u51fd\u6570\u5b9e\u73b0 <pre><code>int main(int argc, char *argv[]) {\n    GangliaLoadStrategy load_strategy;\n    WinMemoryStrategy memory_strategy;\n    PingLatencyStrategy latency_strategy;\n    WindowDisplay display;\n    Monitor monitor(&amp;load_strategy, &amp;memory_strategy, &amp;latency_strategy, &amp;display);\n\n    while (running()) {\n        monitor.GetLoad();\n        monitor.GetTotalMemory();\n        monitor.GetUsedMemory();\n        monitor.GetNetworkLatency();\n\n        monitor.Show();\n        sleep(1000);\n    }\n}\n</code></pre></p> <p>\u8fd9\u6837\u7684\u5b9e\u73b0\u8fd8\u5177\u5907\u8fd0\u884c\u671f\u7684 \u7075\u6d3b\u6027 \uff0c\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\u7b56\u7565\u7c7b\u66ff\u6362\u539f\u59cb\u7684\u7b56\u7565\u7c7b\u3002 <pre><code>class Monitor {\n   public:\n    // ,,,\n    void SetLoadStrategy(LoadStrategy *load_strategy);\n    void SetMemoryStrategy(MemoryStrategy *memory_strategy);\n    void SetLatencyStrategy(LoadStrategy *latency_strategy);\n};\n\nint main(int argc, char *argv[]) {\n    //...\n    LoadStrategyImpl2 new_load_strategy;\n    monitor.SetLoadStrategy(&amp;new_load_strategy);\n    monitor.GetLoad();\n    //...\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_steps/#_10","title":"\u59d4\u6258\u4e0e\u63a5\u53e3\u7684\u8fdb\u4e00\u6b65\u5206\u89e3","text":"<p>\u63a5\u7740\u8d1f\u8f7d\u76d1\u89c6\u5668\u7684\u8bbe\u8ba1\uff0c\u63a5\u4e0b\u6765\u5b9e\u73b0\u7ed3\u679c\u663e\u793a\u90e8\u5206</p> <p>\u56de\u987e\u4e4b\u524d\u8bbe\u8ba1\u4e2d\u7559\u4e0b\u7684<code>Monitor::Show()</code>\u63a5\u53e3 <pre><code>class Monitor {\n    public:\n    //...\n    void Show();\n    protected:\n    float load, latency;\n    long total_memory, used_memory;\n    Display* display_;\n};\n\nvoid Monitor::Show() {\n    display_-&gt;Show(load, total_memory, used_memory, latency);\n}\n</code></pre></p> <p></p> <p>\u8fd9\u91cc<code>Monitor::Show</code>\u8c03\u7528\u7684\u662f<code>Display display_</code>\u8fd9\u4e2a\u6210\u5458\u7684<code>Show</code>\u65b9\u6cd5\uff0c\u800c<code>Display::Show</code>\u53c8\u6839\u636e\u73af\u5883\u8c03\u7528\u76f8\u5e94\u5b50\u7c7b\u7684<code>Show</code>\u65b9\u6cd5\u3002</p> <p><code>Monitor</code>\u6709\u4e00\u4e2a\u201c\u663e\u793a\u201d\u7684\u4efb\u52a1\uff0c\u4f46\u5b83\u672c\u8eab\u6ca1\u6709\u5b9e\u73b0\u800c\u662f\u4ea4\u7ed9<code>Display display_</code>\u8fd9\u4e2a\u6210\u5458\u5b9e\u73b0\u3002\u8fd9\u662f\u4e00\u79cd \u59d4\u6258 \u6a21\u5f0f</p> <ul> <li>Delegation, Wrapper, Helper \u4e00\u822c\u90fd\u6307\u7684\u662f \u59d4\u6258 \u6a21\u5f0f</li> </ul>"},{"location":"system_design/object_oriented/split_steps/#display","title":"\u6df1\u5165<code>Display</code>","text":"<p>\u201c\u663e\u793a\u201d\u5206\u6210\u4e24\u7c7b\uff1aConsole\u548cGUI\uff0cGUI\u66f4\u52a0\u7f8e\u89c2\u3001\u5e38\u7528\u3002</p> <p>GUI\u6709\u591a\u79cd\u4e0d\u540c\u7684\u5b9e\u73b0\uff08Windows, X-Win, QT, ...\uff09\uff0c\u6765\u5b9e\u73b0\u591a\u4e2a\u4e0d\u540c\u7684<code>GUIDisplay</code></p> <p></p> <p>\u540c\u65f6\uff0c\u6211\u4eec\u53c8\u5e0c\u671b\u663e\u793a\u662f\u591a\u6837\u5316\u7684\uff0c\u5982\u4e0d\u540c\u7684\u989c\u8272\u3001\u5f62\u72b6\uff1b\u67f1\u72b6\u56fe\u3001\u6298\u7ebf\u56fe\u3001\u997c\u56fe</p> <p></p>"},{"location":"system_design/object_oriented/split_steps/#_11","title":"\u95ee\u9898","text":"<p>\u5bf9\u4e8e<code>GUIDisplay</code>\u7684\u5404\u4e2a\u5b50\u7c7b\uff0c\u5927\u91cf\u91cd\u590d\u4ee3\u7801\uff08\u4ee3\u7801\u5197\u4f59\uff0c\u7ef4\u62a4\u96be\u5ea6\u52a0\u5927\uff09</p> <p>\u5206\u6790\uff1a\u53d8\u4e0e\u4e0d\u53d8</p> \u4e0d\u53d8 \u53d8 \u4efb\u4f55\u7ed8\u56fe\u57fa\u7840\u90fd\u662f\u753b\u70b9\uff0c\u753b\u6cd5\u4e00\u6837 \u4e0d\u540cGUI\uff0c\u5b9e\u73b0\u753b\u70b9\u7684API\u63a5\u53e3\u4e0d\u540c <p>\u628a\u53d8\u4e0e\u4e0d\u53d8\u5206\u79bb\uff0c\u62bd\u8c61\u51fa\u65b0\u7684\u63a5\u53e3</p>"},{"location":"system_design/object_oriented/split_steps/#_12","title":"\u5206\u79bb\u65b0\u7684\u63a5\u53e3","text":"<p>\u5c06<code>GUIDisplay</code>\u4e2d\u7684\u51fd\u6570\u5206\u6210\u4e09\u7c7b</p> <p></p> <p>\u5176\u4e2d</p> <ul> <li> <p>\u7b2c\u4e00\u7c7b\u662f\u5176\u5bf9\u5916\u66b4\u9732\u7684\u63a5\u53e3</p> </li> <li> <p>\u7b2c\u4e8c\u7c7b\u662f\u9700\u8981\u8c03\u7528\u7279\u5b9a\u5e73\u53f0API\u7684\u51fd\u6570</p> </li> <li> <p>\u7b2c\u4e09\u7c7b\u51fd\u6570\u57fa\u4e8e\u7b2c\u4e8c\u7c7b\u51fd\u6570\u5b9e\u73b0</p> </li> </ul> <p>\u4e8e\u662f\u53ef\u4ee5\u8bb2\u4e09\u7c7b\u51fd\u6570\u5206\u79bb\u5f00\u6765\uff0c\u5728\u4e0d\u540c\u5c42\u9762\u4f53\u73b0\u5176\u53ef\u53d8\u6027\u3002</p>"},{"location":"system_design/object_oriented/split_steps/#_13","title":"\u5206\u79bb\u4e0d\u540c\u5c42\u9762\u7684\u53ef\u53d8\u6027","text":"<p>\u201c\u663e\u793a\u201d\u90e8\u5206\u5305\u542b\u4e24\u4e2a\u5c42\u9762\u7684\u53d8\u5316\uff1a</p> <ul> <li> <p>\u8c03\u7528\u4e0d\u540c\u5e73\u53f0API\u5b9e\u73b0\u76f8\u540c\u7684\u57fa\u7840\u529f\u80fd</p> </li> <li> <p>\u7ed3\u679c\u91c7\u7528\u547d\u4ee4\u884c\u663e\u793a\u8fd8\u662fGUI\u663e\u793a</p> </li> </ul> <p></p> <ul> <li>Bridge\u6a21\u5f0f - \u628a\u62bd\u8c61\u90e8\u5206\u548c\u5b9e\u73b0\u90e8\u5206\u5206\u79bb\uff0c\u662f\u5b83\u4eec\u53ef\u4ee5\u72ec\u7acb\u53d8\u5316\u3002</li> </ul> <p>\u5b9e\u73b0 <pre><code>class Display {\n   public:\n    virtual void Show(float load, long total_memory, long used_memory,\n                      float latency) = 0;\n    virtual ~Display() {}\n};\n\nclass ConsoleDisplay : public Display {\n   public:\n    void Show(float load, long total_memory, long used_memory, float latency) {\n        cout &lt;&lt; \"load = \" &lt;&lt; load &lt;&lt; endl;\n        cout &lt;&lt; \"total_memory = \" &lt;&lt; total_memory &lt;&lt; endl;\n        cout &lt;&lt; \"used_memory = \" &lt;&lt; used_memory &lt;&lt; endl;\n        cout &lt;&lt; \"latency = \" &lt;&lt; latency &lt;&lt; endl;\n    }\n};\n</code></pre></p> <p>\u65b0\u7684\u63a5\u53e3 <pre><code>class GUIDisplay : public Display {\n   public:\n    virtual void Show(float load, long total_memory, long used_memory,\n                      float latency) = 0;\n    GUIDisplay(GUIDisplayImpl* impl) : impl_(impl) {}\n    ~GUIDisplay();\n    GUIDisplay(const GUIDisplay&amp; d);\n    GUIDisplay&amp; operator=(const GUIDisplay&amp; d);\n\n   protected:\n    void DrawLine(int x1, int y1, int x2, int y2);\n    void DrawRect(int x1, int y1, int x2, int y2);\n    //...\n   private:\n    void DrawPoint(int x, int y);\n    void DrawText(int x, int y, string text);\n    GUIDisplayImpl* impl_;\n};\n</code></pre></p> <p>\u5c06<code>GUIDisplay</code>\u7c7b\u7684<code>DrawPoint</code>\u548c<code>DrawText</code> \u59d4\u6258 \u7ed9<code>GUIDisplayImpl</code>\u7c7b\uff08\u5c06\u57fa\u7840\u7c7b\u4e2d\u4e0e\u73af\u5883\u76f8\u5173\u7684\u529f\u80fd\u4ea4\u7ed9\u548c\u73af\u5883\u76f8\u5173\u7684\u7c7b\u53bb\u5b9e\u73b0\uff09\u3002</p> <p><code>GUIDisplayImpl</code>\u7684\u5b9e\u73b0\uff1a <pre><code>class GUIDisplayImpl {\n   public:\n    GUIDisplayImpl() : use(1) {}    // \u6ce8\u610f\u8fd9\u91cc\u5f15\u7528\u8ba1\u6570\u7684\u4f7f\u7528\n    virtual void DrawPoint(int x, int y) = 0;\n    virtual void DrawText(int x, int y, string text) = 0;\n\n   private:\n    int use;\n    friend class GUIDisplay;\n};\n\nvoid GUIDisplay::DrawPoint(int x, int y) {\n    impl_-&gt;DrawPoint(x, y);\n}\n\nvoid GUIDisplay::DrawText(int x, int y, string text) {\n    impl_-&gt;DrawText(x, y, text);\n}\n</code></pre> \u6ce8\u610f\u8fd9\u91cc\u5c06<code>GUIDisplay</code>\u58f0\u660e\u6210<code>GUIDisplayImpl</code>\u7684\u53cb\u5143\u662f \u5f15\u7528\u8ba1\u6570 \u7684\u9700\u8981\u3002</p> <p>\u5b9e\u73b0\u65b0\u7684\u63a5\u53e3</p> <p><code>WindowsDisplayImpl</code> <pre><code>class WindowsDisplayImpl : public GUIDisplayImpl {\n   public:\n    WindowsDisplayImpl() { /* init it here. */ }\n    ~WindowsDisplayImpl();\n    void DrawPoint(int x, int y);\n    void DrawText(int x, int y, string text);\n};\n\nvoid WindowsDisplayImpl::DrawPoint(int x, int y) {\n    SetPixel(hdc, x, y, forColor);\n}\n\nvoid WindowsDisplayImpl::DrawText(int x, int y, string text) {\n    TextOut(hdc, x, y, text.c_str(), text.size());\n}\n</code></pre></p> <p><code>XWinDisplayImpl</code> <pre><code>class XWinDisplayImpl : public GUIDisplayImpl {\n   public:\n    XWinDisplayImpl() { /* init it here. */ }\n    ~XWinDisplayImpl() {}\n    void DrawPoint(int x, int y);\n    void DrawText(int x, int y, string text);\n};\n\nvoid XWinDisplayImpl::DrawPoint(int x, int y) {\n    XDrawPoint(display, win, gc, x, y);\n}\n\nvoid XWinDisplayImpl::DrawText(int x, int y, string text) {\n    XDrawString(display, win, gc, x, y, text, text.size());\n}\n</code></pre></p>"},{"location":"system_design/object_oriented/split_steps/#_14","title":"\u4e0d\u53d8\u7684\u90e8\u5206","text":"<p>\u5bf9\u4e8e\u90a3\u4e9b\u57fa\u4e8e<code>DrawPoint</code>\u548c<code>DrawText</code>\u5b9e\u73b0\u7684\u51fd\u6570\uff0c\u5728<code>GUIDisplay</code>\u4e2d\u76f4\u63a5\u5b9e\u73b0\u5373\u53ef\u3002</p> <pre><code>void GUIDisplay::DrawLine(int x1, int y1, int x2, int y2) {\n    for (int x = x1; x &lt; x2; x++) {\n        int y = x1 + (x - x1) * (y2 - y1) / (x2 - x1);\n        DrawPoint(x, y);\n    }\n}\n\nvoid GUIDisplay::DrawRect(int x1, int y1, int x2, int y2) {\n    DrawLine(x1, y1, x2, y2);\n    DrawLine(x2, y1, x2, y2);\n    DrawLine(x2, y2, x1, y2);\n    DrawLine(x1, y2, x1, y1);\n}\n</code></pre>"},{"location":"system_design/object_oriented/split_steps/#_15","title":"\u53e6\u4e00\u4e2a\u5c42\u9762\u7684\u53ef\u53d8\u90e8\u5206","text":"<p>\u5bf9\u4e8e<code>Show</code>\u51fd\u6570\uff0c\u5176\u591a\u6837\u6027\u4f53\u73b0\u5728\u663e\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff08\u6298\u7ebf\u56fe\u6216\u67f1\u72b6\u56fe\u6216\u4e8c\u8005\u7684\u7ec4\u5408\uff09</p> <p>\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7559\u7ed9<code>GUIDisplay</code>\u5b9a\u4e49\u865a\u51fd\u6570\u7684\u5b9e\u73b0</p> <p>\u4f7f\u7528\u7ee7\u627f\u5b9e\u73b0<code>GUIDisplay</code> \u2014\u2014 \u753b\u4e00\u4e2a\u65b9\u6846\u663e\u793aCPU\u8d1f\u8f7d\uff1a <pre><code>class Layout1 : public GUIDisplay {\n   public:\n    Layout1(GUIDisplayImpl* impl) : GUIDisplay(impl) {}\n    void Show(float load, long total_memory, long used_memory, float latency);\n};\n\nvoid Layout1::Show(float load, long tota_memory, long used_memory,\n                   float latency) {\n    DrawRect(10, 10, 300, 20);\n    DrawText(10, 10, float2str(load));\n    //......\n}\n</code></pre></p> <p>\u5b9e\u73b0\u4e0d\u540c\u7684<code>Layout</code> \u2014\u2014 \u753b\u4e00\u4e2a\u65b9\u6846\uff0c\u5176\u4e2d\u753b\u4e00\u4e2a\u6a2a\u5411\u67f1\u72b6\u56fe\uff1a <pre><code>class Layout2 : public GUIDisplay {\n   public:\n    Layout2(GUIDisplayImpl* impl) : GUIDisplay(impl) {}\n    void Show(float load, long total_momery, long used_momery, float latency);\n};\n\nvoid Layout2::Show(float load, long total_memory, long used_memory,\n                   float latency) {\n    DrawRect(10, 10, 30, 300);\n    int miny = load * 290 / 100 + 10;\n    for (int y = 300; y &gt; miny; y -= 3) DrawLine(10, y, 30, y);\n    //...\n}\n</code></pre></p> <p>\u603b\u7ed3\uff1a</p> <ul> <li> <p>\u4f7f\u7528\u4e0d\u540c\u7684<code>Layout</code>\u6307\u9488\u53ef\u4ee5\u663e\u793a\u4e0d\u540c\u7684\u6c47\u62a5\u98ce\u683c\uff1b</p> </li> <li> <p>\u5f53\u9700\u8981\u6539\u53d8\u73af\u5883\u7684\u65f6\u5019\uff0c\u53ea\u9700\u6539\u53d8<code>GUIDisplayImpl</code> \u2014\u2014 Bridge\u6a21\u5f0f \uff0c\u5373\u53ef\u9002\u5e94\u4e0d\u7528\u7684\u7cfb\u7edf\u73af\u5883\u3002</p> </li> </ul>"}]}